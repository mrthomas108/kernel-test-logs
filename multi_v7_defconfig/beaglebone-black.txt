- 07:40:41 [INFO] Starting target session
- 07:40:41 [INFO] Connected to beaglebone-black via serial 
- 07:40:41 [INFO] Host: 
- 07:40:43 [ERROR] On command:  waiting for (?-mix:login:) >>> error: execution expired
- 07:40:43 [INFO] Target: 

root@am335x-evm:/test# 
- 07:40:43 [INFO] Host: 
- 07:40:44 [INFO] Target: 

root@am335x-evm:/test# 
- 07:40:44 [INFO] Host: sync;poweroff
- 07:40:58 [INFO] Target: 
sync;poweroff


Broadcast message from root@am335x-evm (ttyO0) (Thu Apr 24 21:49:03 2014):



The system is going down for system halt NOW!


INIT: S
INIT: root@am335x-evm:/test# Sending processes the TERM signal


INIT: Sending processes tStopping telnet daemon.
Stopping system message bus: dbus.
Stopping syslogd/klogd: stopped syslogd (pid 1168)
stopped klogd (pid 1171)
done
Stopping thttpd.
ALSA: Storing mixer settings...
/usr/sbin/alsactl: save_state:1590: No soundcards found...
Deconfiguring network interfaces... done.
Sending all processes the TERM signal...
Sending all processes the KILL signal...
Unmounting remote filesystems...
Deactivating swap...
Unmounting local filesystems...
[ 1948.802654] reboot: System halted

- 07:42:04 [INFO] Disconnected serial from beaglebone-black
- 07:42:04 [INFO] Connected to beaglebone-black via serial 
- 07:42:04 [INFO] Host: 
- 07:42:04 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 07:42:04 [INFO] Target: 

U-Boot SPL 2013.10-g310aa48 (Dec 15 2013 - 22:31:18)

- 07:42:04 [INFO] Host: 
- 07:42:05 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 07:42:05 [INFO] Target: 
reading args
spl: error reading image args, err - -1
reading u-boot.img
reading u-boot.img


U-Boot 2013.10-g310aa48 (Dec 15 2013 - 22:31:18)

I2C:   ready
DRAM:  512 MiB

- 07:42:05 [INFO] Host: 
- 07:42:05 [INFO] Target: 
NAND:  0 MiB
MMC:   OMAP SD/MMC: 0, OMAP SD/MMC: 1
*** Error - No Valid Environment Area found
*** Warning - bad CRC, using default environment

Net:   <ethaddr> not set. Validating first E-fuse MAC
cpsw, usb_ether
Hit any key to stop autoboot:  3  0 
U-Boot# 
- 07:42:05 [INFO] Host: 
- 07:42:06 [INFO] Target: 

U-Boot# 
- 07:42:06 [INFO] Host: version
- 07:42:06 [INFO] Target: 
version

U-Boot 2013.10-g310aa48 (Dec 15 2013 - 22:31:18)
arm-linux-gnueabihf-gcc (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 4.7.3 20130226 (prerelease)
GNU ld (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 2.23.1
U-Boot# 
- 07:42:06 [INFO] Host: setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait '
- 07:42:07 [INFO] Target: 
setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait '
U-Boot# 
- 07:42:07 [INFO] Host: setenv bootcmd  ''
- 07:42:07 [INFO] Target: 
setenv bootcmd  ''
U-Boot# 
- 07:42:07 [INFO] Host: setenv autoload 'no'
- 07:42:08 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 07:42:08 [INFO] Host: setenv serverip '192.168.0.1'
- 07:42:08 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 07:42:08 [INFO] Host: printenv
- 07:42:09 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A335BNLT
board_rev=0A5A
boot_fdt=try
boot_targets= mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait 
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 100 100;u-boot.img.raw mmc 300 400;spl-os-args.raw mmc 80 80;spl-os-image.raw mmc 900 2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
eth1addr=c8:a0:30:b0:3a:34
ethact=cpsw
ethaddr=c8:a0:30:b0:3a:32
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(SPL),128k(SPL.backup1),128k(SPL.backup2),640k(SPL.backup3),1m(u-boot),512k(u-boot-spl-os),256k(u-boot-env),256k(u-boot-env.backup1),5m(kernel),-(rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} u-boot-spl-os; nand read ${loadaddr} kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=9,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
nfsopts=nolock
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usbnet_devaddr=c8:a0:30:b0:3a:34
vendor=ti
ver=U-Boot 2013.10-g310aa48 (Dec 15 2013 - 22:31:18)

Environment size: 4823/131067 bytes
U-Boot# 
- 07:42:09 [INFO] Host: printenv
- 07:42:09 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A335BNLT
board_rev=0A5A
boot_fdt=try
boot_targets= mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait 
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 100 100;u-boot.img.raw mmc 300 400;spl-os-args.raw mmc 80 80;spl-os-image.raw mmc 900 2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
eth1addr=c8:a0:30:b0:3a:34
ethact=cpsw
ethaddr=c8:a0:30:b0:3a:32
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(SPL),128k(SPL.backup1),128k(SPL.backup2),640k(SPL.backup3),1m(u-boot),512k(u-boot-spl-os),256k(u-boot-env),256k(u-boot-env.backup1),5m(kernel),-(rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} u-boot-spl-os; nand read ${loadaddr} kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=9,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
nfsopts=nolock
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usbnet_devaddr=c8:a0:30:b0:3a:34
vendor=ti
ver=U-Boot 2013.10-g310aa48 (Dec 15 2013 - 22:31:18)

Environment size: 4823/131067 bytes
U-Boot# 
- 07:42:09 [INFO] Host: setenv bootargs ''${bootargs}' ip=dhcp '
- 07:42:10 [INFO] Target: 
setenv bootargs ''${bootargs}' ip=dhcp '
U-Boot# 
- 07:42:10 [INFO] Host: setenv ipaddr dhcp
- 07:42:10 [INFO] Target: 
setenv ipaddr dhcp
U-Boot# 
- 07:42:10 [INFO] Host: dhcp
- 07:42:12 [INFO] Target: 
dhcp
link up on port 0, speed 100, full duplex
BOOTP broadcast 1
DHCP client bound to address 192.168.0.237
U-Boot# 
- 07:42:12 [INFO] Host: setenv serverip '192.168.0.1'
- 07:42:12 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 07:42:12 [INFO] Host: tftp ${loadaddr} 192.168.0.1:vatf_bbb2/44b69dc6aff5a971a5d408fb5b3dc3a2
- 07:42:14 [INFO] Target: 
tftp ${loadaddr} 192.168.0.1:vatf_bbb2/44b69dc6aff5a971a5d408fb5b3dc3a2
link up on port 0, speed 100, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.237
Filename 'vatf_bbb2/44b69dc6aff5a971a5d408fb5b3dc3a2'.
Load address: 0x80200000
Loading: *#################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 ##############################################################
	 4.5 MiB/s
done
Bytes transferred = 4713552 (47ec50 hex)
U-Boot# 
- 07:42:14 [INFO] Host: tftp ${fdtaddr} 192.168.0.1:vatf_bbb2/f58256c7351cbb9ea348ddeba924718a
- 07:42:14 [INFO] Target: 
tftp ${fdtaddr} 192.168.0.1:vatf_bbb2/f58256c7351cbb9ea348ddeba924718a
link up on port 0, speed 100, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.237
Filename 'vatf_bbb2/f58256c7351cbb9ea348ddeba924718a'.
Load address: 0x80f80000
Loading: *###
	 4 MiB/s
done
Bytes transferred = 29465 (7319 hex)
U-Boot# 
- 07:42:14 [INFO] Host: printenv
- 07:42:15 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A335BNLT
board_rev=0A5A
boot_fdt=try
boot_targets= mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait ip=dhcp
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 100 100;u-boot.img.raw mmc 300 400;spl-os-args.raw mmc 80 80;spl-os-image.raw mmc 900 2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
dnsip=192.0.2.2
dnsip2=192.0.2.3
eth1addr=c8:a0:30:b0:3a:34
ethact=cpsw
ethaddr=c8:a0:30:b0:3a:32
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
fileaddr=80f80000
filesize=7319
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
ipaddr=192.168.0.237
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(SPL),128k(SPL.backup1),128k(SPL.backup2),640k(SPL.backup3),1m(u-boot),512k(u-boot-spl-os),256k(u-boot-env),256k(u-boot-env.backup1),5m(kernel),-(rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} u-boot-spl-os; nand read ${loadaddr} kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=9,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
netmask=255.255.255.0
nfsopts=nolock
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usbnet_devaddr=c8:a0:30:b0:3a:34
vendor=ti
ver=U-Boot 2013.10-g310aa48 (Dec 15 2013 - 22:31:18)

Environment size: 4974/131067 bytes
U-Boot# 
- 07:42:15 [INFO] Host: setenv bootargs ''${bootargs}' root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait '
- 07:42:15 [INFO] Target: 
setenv bootargs ''${bootargs}' root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait '
U-Boot# 
- 07:42:15 [INFO] Host: printenv
- 07:42:16 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A335BNLT
board_rev=0A5A
boot_fdt=try
boot_targets= mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait ip=dhcp root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 100 100;u-boot.img.raw mmc 300 400;spl-os-args.raw mmc 80 80;spl-os-image.raw mmc 900 2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
dnsip=192.0.2.2
dnsip2=192.0.2.3
eth1addr=c8:a0:30:b0:3a:34
ethact=cpsw
ethaddr=c8:a0:30:b0:3a:32
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
fileaddr=80f80000
filesize=7319
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
ipaddr=192.168.0.237
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(SPL),128k(SPL.backup1),128k(SPL.backup2),640k(SPL.backup3),1m(u-boot),512k(u-boot-spl-os),256k(u-boot-env),256k(u-boot-env.backup1),5m(kernel),-(rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} u-boot-spl-os; nand read ${loadaddr} kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=9,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
netmask=255.255.255.0
nfsopts=nolock
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usbnet_devaddr=c8:a0:30:b0:3a:34
vendor=ti
ver=U-Boot 2013.10-g310aa48 (Dec 15 2013 - 22:31:18)

Environment size: 5022/131067 bytes
U-Boot# 
- 07:42:16 [INFO] Host: setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} - ${fdtaddr}; else bootz ${loadaddr} - ${fdtaddr}; bootm ${loadaddr} - ${fdtaddr}; fi'
- 07:42:16 [INFO] Target: 
setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} - ${fdtaddr}; else bootz ${loadaddr} - ${fdtaddr}; bootm ${loadaddr} - ${fdtaddr}; fi'
U-Boot# 
- 07:42:16 [INFO] Host: bdinfo
- 07:42:17 [INFO] Target: 
bdinfo
arch_number = 0x00000E05
boot_params = 0x80000100
DRAM bank   = 0x00000000
-> start    = 0x80000000
-> size     = 0x20000000
eth0name    = cpsw
ethaddr     = c8:a0:30:b0:3a:32
eth1name    = usb_ether
eth1addr    = c8:a0:30:b0:3a:34
current eth = cpsw
ip_addr     = 192.168.0.237
baudrate    = 115200 bps
TLB addr    = 0x9FFF0000
relocaddr   = 0x9F750000
reloc off   = 0x1EF50000
irq_sp      = 0x9F62FF38
sp start    = 0x9F62FF28
U-Boot# 
- 07:42:17 [INFO] Host: boot
- 07:44:47 [ERROR] On command: boot waiting for (?-mix:login:) >>> error: execution expired
- 07:44:47 [INFO] Target: 
boot

## Checking Image at 80200000 ...
Unknown image format!
Kernel image @ 0x80200000 [ 0x000000 - 0x47ec50 ]
## Flattened Device Tree blob at 80f80000
   Booting using the fdt blob at 0x80f80000
   Loading Device Tree to 9f624000, end 9f62e318 ... OK

Starting kernel ...

[    0.000000] Booting Linux on physical CPU 0x0
[    0.000000] Linux version 3.15.0-rc6-next-20140522-00002-g9b293c9 (nmenon@kahuna) (gcc version 4.6.3 (Ubuntu/Linaro 4.6.3-1ubuntu5) ) #1 SMP Fri May 23 06:35:37 CDT 2014
[    0.000000] CPU: ARMv7 Processor [413fc082] revision 2 (ARMv7), cr=10c5387d
[    0.000000] CPU: PIPT / VIPT nonaliasing data cache, VIPT aliasing instruction cache
[    0.000000] Machine model: TI AM335x BeagleBone
[    0.000000] cma: CMA: reserved 64 MiB at 9b000000
[    0.000000] Memory policy: Data cache writeback
[    0.000000] CPU: All CPU(s) started in SVC mode.
[    0.000000] AM335X ES2.0 (sgx neon )
[    0.000000] PERCPU: Embedded 7 pages/cpu @dfab6000 s7872 r8192 d12608 u32768
[    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 129792
[    0.000000] Kernel command line: console=ttyO0,115200n8 earlyprintk rootwait ip=dhcp root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait
[    0.000000] PID hash table entries: 2048 (order: 1, 8192 bytes)
[    0.000000] Dentry cache hash table entries: 65536 (order: 6, 262144 bytes)
[    0.000000] Inode-cache hash table entries: 32768 (order: 5, 131072 bytes)
[    0.000000] Memory: 442656K/523264K available (6140K kernel code, 812K rwdata, 2436K rodata, 555K init, 302K bss, 80608K reserved, 0K highmem)
[    0.000000] Virtual kernel memory layout:
[    0.000000]     vector  : 0xffff0000 - 0xffff1000   (   4 kB)
[    0.000000]     fixmap  : 0xffc00000 - 0xffe00000   (2048 kB)
[    0.000000]     vmalloc : 0xe0800000 - 0xff000000   ( 488 MB)
[    0.000000]     lowmem  : 0xc0000000 - 0xe0000000   ( 512 MB)
[    0.000000]     pkmap   : 0xbfe00000 - 0xc0000000   (   2 MB)
[    0.000000]     modules : 0xbf000000 - 0xbfe00000   (  14 MB)
[    0.000000]       .text : 0xc0208000 - 0xc0a68308   (8577 kB)
[    0.000000]       .init : 0xc0a69000 - 0xc0af3ec0   ( 556 kB)
[    0.000000]       .data : 0xc0af4000 - 0xc0bbf260   ( 813 kB)
[    0.000000]        .bss : 0xc0bbf268 - 0xc0c0ab50   ( 303 kB)
[    0.000000] SLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=1, Nodes=1
[    0.000000] Hierarchical RCU implementation.
[    0.000000] 	RCU restricting CPUs from NR_CPUS=4 to nr_cpu_ids=1.
[    0.000000] RCU: Adjusting geometry for rcu_fanout_leaf=16, nr_cpu_ids=1
[    0.000000] NR_IRQS:16 nr_irqs:16 16
[    0.000000] IRQ: Found an INTC at 0xfa200000 (revision 5.0) with 128 interrupts
[    0.000000] Total of 128 interrupts on 1 active controller
[    0.000000] OMAP clockevent source: timer2 at 24000000 Hz
[    0.000011] sched_clock: 32 bits at 24MHz, resolution 41ns, wraps every 178956969942ns
[    0.000029] OMAP clocksource: timer1 at 24000000 Hz
[    0.000184] Console: colour dummy device 80x30
[    0.000213] Calibrating delay loop... 996.14 BogoMIPS (lpj=4980736)
[    0.089529] pid_max: default: 32768 minimum: 301
[    0.089667] Mount-cache hash table entries: 1024 (order: 0, 4096 bytes)
[    0.089679] Mountpoint-cache hash table entries: 1024 (order: 0, 4096 bytes)
[    0.090230] CPU: Testing write buffer coherency: ok
[    0.090524] CPU0: thread -1, cpu 0, socket -1, mpidr 0
[    0.090615] Setting up static identity map for 0x807cd580 - 0x807cd618
[    0.092423] Brought up 1 CPUs
[    0.092438] SMP: Total of 1 processors activated.
[    0.092446] CPU: All CPU(s) started in SVC mode.
[    0.092993] devtmpfs: initialized
[    0.096352] VFP support v0.3: implementor 41 architecture 3 part 30 variant c rev 3
[    0.105399] omap_hwmod: tptc0 using broken dt data from edma
[    0.105507] omap_hwmod: tptc1 using broken dt data from edma
[    0.105619] omap_hwmod: tptc2 using broken dt data from edma
[    0.109988] omap_hwmod: debugss: _wait_target_disable failed
[    0.164350] pinctrl core: initialized pinctrl subsystem
[    0.164839] regulator-dummy: no parameters
[    0.176497] NET: Registered protocol family 16
[    0.176850] DMA: failed to allocate 256 KiB pool for atomic coherent allocation
[    0.178425] cpuidle: using governor ladder
[    0.178444] cpuidle: using governor menu
[    0.185023] platform 49000000.edma: alias fck already exists
[    0.185046] platform 49000000.edma: alias fck already exists
[    0.185058] platform 49000000.edma: alias fck already exists
[    0.185750] OMAP GPIO hardware version 0.1
[    0.192012] No ATAGs?
[    0.194469] Serial: AMBA PL011 UART driver
[    0.210612] edma-dma-engine edma-dma-engine.0: TI EDMA DMA engine driver
[    0.211210] vmmcsd_fixed: 3300 mV 
[    0.212873] vgaarb: loaded
[    0.213489] SCSI subsystem initialized
[    0.214200] usbcore: registered new interface driver usbfs
[    0.214269] usbcore: registered new interface driver hub
[    0.214400] usbcore: registered new device driver usb
[    0.214928] omap_i2c 44e0b000.i2c: could not find pctldev for node /pinmux@44e10800/pinmux_i2c0_pins, deferring probe
[    0.214951] platform 44e0b000.i2c: Driver omap_i2c requests probe deferral
[    0.215146] Linux video capture interface: v2.00
[    0.215194] pps_core: LinuxPPS API ver. 1 registered
[    0.215201] pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    0.215228] PTP clock support registered
[    0.215301] EDAC MC: Ver: 3.0.0
[    0.216105] Advanced Linux Sound Architecture Driver Initialized.
[    0.217297] Switched to clocksource timer1
[    0.226918] NET: Registered protocol family 2
[    0.227545] TCP established hash table entries: 4096 (order: 2, 16384 bytes)
[    0.227593] TCP bind hash table entries: 4096 (order: 3, 32768 bytes)
[    0.227653] TCP: Hash tables configured (established 4096 bind 4096)
[    0.227720] TCP: reno registered
[    0.227733] UDP hash table entries: 256 (order: 1, 8192 bytes)
[    0.227752] UDP-Lite hash table entries: 256 (order: 1, 8192 bytes)
[    0.227917] NET: Registered protocol family 1
[    0.228285] RPC: Registered named UNIX socket transport module.
[    0.228298] RPC: Registered udp transport module.
[    0.228304] RPC: Registered tcp transport module.
[    0.228310] RPC: Registered tcp NFSv4.1 backchannel transport module.
[    0.230428] futex hash table entries: 256 (order: 2, 16384 bytes)
[    0.241443] squashfs: version 4.0 (2009/01/31) Phillip Lougher
[    0.242238] NFS: Registering the id_resolver key type
[    0.242303] Key type id_resolver registered
[    0.242311] Key type id_legacy registered
[    0.242372] msgmni has been set to 992
[    0.243042] Block layer SCSI generic (bsg) driver version 0.4 loaded (major 249)
[    0.243066] io scheduler noop registered
[    0.243079] io scheduler deadline registered
[    0.243266] io scheduler cfq registered (default)
[    0.244344] pinctrl-single 44e10800.pinmux: 142 pins at pa f9e10800 size 568
[    0.302212] Serial: 8250/16550 driver, 4 ports, IRQ sharing disabled
[    0.303964] Serial: IMX driver
[    0.304257] msm_serial: driver initialized
[    0.304689] omap_uart 44e09000.serial: no wakeirq for uart0
[    0.304848] 44e09000.serial: ttyO0 at MMIO 0x44e09000 (irq = 88, base_baud = 3000000) is a OMAP UART0
[    0.953141] console [ttyO0] enabled
[    0.957336] STMicroelectronics ASC driver initialized
[    0.963204] serial: Freescale lpuart driver
[    0.967786] [drm] Initialized drm 1.1.0 20060810
[    0.977179] loop: module loaded
[    0.983339] CAN device driver interface
[    0.988599] pegasus: v0.9.3 (2013/04/25), Pegasus/Pegasus II USB Ethernet driver
[    0.996421] usbcore: registered new interface driver pegasus
[    1.002455] usbcore: registered new interface driver asix
[    1.008188] usbcore: registered new interface driver ax88179_178a
[    1.014613] usbcore: registered new interface driver cdc_ether
[    1.020802] usbcore: registered new interface driver smsc75xx
[    1.026881] usbcore: registered new interface driver smsc95xx
[    1.032958] usbcore: registered new interface driver net1080
[    1.038939] usbcore: registered new interface driver cdc_subset
[    1.045174] usbcore: registered new interface driver zaurus
[    1.051156] usbcore: registered new interface driver cdc_ncm
[    1.057115] ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    1.063974] ehci-pci: EHCI PCI platform driver
[    1.068688] ehci-platform: EHCI generic platform driver
[    1.074301] ehci-omap: OMAP-EHCI Host Controller driver
[    1.079886] ehci-orion: EHCI orion driver
[    1.084174] SPEAr-ehci: EHCI SPEAr driver
[    1.088472] tegra-ehci: Tegra EHCI driver
[    1.093118] usbcore: registered new interface driver usb-storage
[    1.100746] mousedev: PS/2 mouse device common for all mice
[    1.108315] i2c /dev entries driver
[    1.112516] usbcore: registered new interface driver uvcvideo
[    1.118575] USB Video Class driver (1.1.1)
[    1.122869] gspca_main: v2.14.0 registered
[    1.128516] sdhci: Secure Digital Host Controller Interface driver
[    1.134989] sdhci: Copyright(c) Pierre Ossman
[    1.217768] sdhci-pltfm: SDHCI platform and OF driver helper
[    1.224304] usbcore: registered new interface driver usbhid
[    1.230197] usbhid: USB HID core driver
[    1.237759] TCP: cubic registered
[    1.241249] NET: Registered protocol family 17
[    1.245927] can: controller area network core (rev 20120528 abi 9)
[    1.252529] NET: Registered protocol family 29
[    1.257191] can: raw protocol (rev 20120528)
[    1.261684] can: broadcast manager protocol (rev 20120528 t)
[    1.267635] can: netlink gateway (rev 20130117) max_hops=1
[    1.273851] Key type dns_resolver registered
[    1.279087] ThumbEE CPU extension supported.
[    1.283594] Registering SWP/SWPB emulation handler
[    1.292263] omap_i2c 44e0b000.i2c: bus 0 rev0.11 at 400 kHz
[    1.322630] mmc0: host does not support reading read-only switch. assuming write-enable.
[    1.334599] mmc0: new high speed SD card at address e624
[    1.340658] mmcblk0: mmc0:e624 SU02G 1.84 GiB 
[    1.348094]  mmcblk0: p1 p2
[    1.357340] davinci_mdio 4a101000.mdio: davinci mdio revision 1.6
[    1.363767] davinci_mdio 4a101000.mdio: detected phy mask fffffffe
[    1.371003] libphy: 4a101000.mdio: probed
[    1.375217] davinci_mdio 4a101000.mdio: phy[0]: device 4a101000.mdio:00, driver unknown
[    1.384618] cpsw 4a100000.ethernet: Detected MACID = c8:a0:30:b0:3a:32
[    1.392642] drivers/rtc/hctosys.c: unable to open rtc device (rtc0)
[    1.402855] net eth0: initializing cpsw version 1.12 (0)
[    1.440639] mmc1: BKOPS_EN bit is not set
[    1.447478] mmc1: new high speed MMC card at address 0001
[    1.453666] mmcblk1: mmc1:0001 MMC02G 1.78 GiB 
[    1.458591] mmcblk1boot0: mmc1:0001 MMC02G partition 1 1.00 MiB
[    1.464918] mmcblk1boot1: mmc1:0001 MMC02G partition 2 1.00 MiB
[    1.473084]  mmcblk1: p1
[    1.477380]  mmcblk1boot1: unknown partition table
[    1.483773]  mmcblk1boot0: unknown partition table
[    1.489246] net eth0: phy found : id is : 0x7c0f1
[    1.494243] libphy: PHY 4a101000.mdio:01 not found
[    1.499288] net eth0: phy 4a101000.mdio:01 not found on slave 1
[    3.487941] cpsw 4a100000.ethernet eth0: Link is Up - 100Mbps/Full - flow control rx/tx
[    3.507308] Sending DHCP requests ., OK
[    3.567759] IP-Config: Got DHCP answer from 192.168.0.1, my address is 192.168.0.237
[    3.576038] IP-Config: Complete:
[    3.579460]      device=eth0, hwaddr=c8:a0:30:b0:3a:32, ipaddr=192.168.0.237, mask=255.255.255.0, gw=192.168.0.1
[    3.590129]      host=192.168.0.237, domain=ti.com, nis-domain=(none)
[    3.596871]      bootserver=192.168.0.1, rootserver=192.168.0.1, rootpath=
[    3.603897]      nameserver0=192.0.2.2, nameserver1=192.0.2.3
[    3.610316] ALSA device list:
[    3.613420]   No soundcards found.
[    3.619196] List of all partitions:
[    3.622875] b300         1931264 mmcblk0  driver: mmcblk
[    3.628509]   b301           80293 mmcblk0p1 000ae7de-01
[    3.634076]   b302         1847475 mmcblk0p2 000ae7de-02
[    3.639670] b310         1875968 mmcblk1  driver: mmcblk
[    3.645235]   b311         1874944 mmcblk1p1 71198d47-01
[    3.650815] b330            1024 mmcblk1boot1  (driver?)
[    3.656380] b320            1024 mmcblk1boot0  (driver?)
[    3.661953] No filesystem could mount root, tried:  ext3
[    3.667536] Kernel panic - not syncing: VFS: Unable to mount root fs on unknown-block(179,2)
[    3.676377] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 3.15.0-rc6-next-20140522-00002-g9b293c9 #1
[    3.685619] [<c02152ec>] (unwind_backtrace) from [<c0210f90>] (show_stack+0x10/0x14)
[    3.693741] [<c0210f90>] (show_stack) from [<c07c89c0>] (dump_stack+0x70/0x8c)
[    3.701311] [<c07c89c0>] (dump_stack) from [<c07c64b8>] (panic+0x8c/0x210)
[    3.708518] [<c07c64b8>] (panic) from [<c0a6a170>] (mount_block_root+0x1f8/0x234)
[    3.716357] [<c0a6a170>] (mount_block_root) from [<c0a6a294>] (mount_root+0xe8/0x108)
[    3.724558] [<c0a6a294>] (mount_root) from [<c0a6a3dc>] (prepare_namespace+0x128/0x18c)
[    3.732941] [<c0a6a3dc>] (prepare_namespace) from [<c0a69d98>] (kernel_init_freeable+0x184/0x1cc)
[    3.742235] [<c0a69d98>] (kernel_init_freeable) from [<c07c42dc>] (kernel_init+0x8/0xe4)
[    3.750709] [<c07c42dc>] (kernel_init) from [<c020e678>] (ret_from_fork+0x14/0x3c)
[    3.758643] ---[ end Kernel panic - not syncing: VFS: Unable to mount root fs on unknown-block(179,2)

