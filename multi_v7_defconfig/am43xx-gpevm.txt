- 07:15:06 [INFO] Starting target session
- 07:15:06 [INFO] Connected to am43xx-gpevm via serial 
- 07:15:06 [INFO] Host: #check prompt
- 07:15:08 [ERROR] On command: #check prompt waiting for #check prompt.+?(?-mix:((?m-ix:.*login:)|[Pp]assword)) >>> error: execution expired
- 07:15:08 [INFO] Target: 
#check prompt
root@am437x-evm:/test# 
- 07:15:08 [INFO] Host: #check prompt
- 07:15:08 [INFO] Target: 
#check prompt
root@am437x-evm:/test# 
- 07:15:08 [INFO] Host: sync;poweroff
- 07:15:22 [INFO] Target: 
sync;poweroff
INIT: Sending processes the TERM signal
Broadcast message from root@am437x-evm (ttyO0) (Thu Aug 28 01:26:18 2014):
The system is going down for system halt NOW!
root@am437x-evm:/test# 
INIT: SendinStopping syslogd/klogd: stopped syslogd (pid 1272)
stopped klogd (pid 1276)
done
Deconfiguring network interfaces... done.
Sending all processes the TERM signal...
Sending all processes the KILL signal...
Unmounting remote filesystems...
Deactivating swap...
Unmounting local filesystems...
[  751.715769] reboot: System halted
- 07:15:22 [INFO] Disconnected serial from am43xx-gpevm
- 07:15:23 [INFO] Connected to am43xx-gpevm via serial 
- 07:15:23 [INFO] Host: 
- 07:15:24 [ERROR] On command:  waiting for (?m-ix:U-Boot\s*#) >>> error: execution expired
- 07:15:24 [INFO] Target: 
- 07:15:24 [INFO] Host: 
- 07:15:24 [ERROR] On command:  waiting for (?m-ix:U-Boot\s*#) >>> error: execution expired
- 07:15:24 [INFO] Target: 
U-Boot SPL 2013.10-g78d8ebd (Mar 06 2014 - 13:09:07)
SPL: Please implement spl_start_uboot() for your board
SPL: Direct Linux boot not active!
reading u-boot.img
reading u-boot.img
U-Boot 2013.10-g78d8ebd (Mar 06 2014 - 13:09:07)
I2C:   
- 07:15:24 [INFO] Host: 
- 07:15:25 [ERROR] On command:  waiting for (?m-ix:U-Boot\s*#) >>> error: execution expired
- 07:15:25 [INFO] Target: 
ready
DRAM:  1 GiB
NAND:  512 MiB
MMC:   OMAP SD/MMC: 0, OMAP SD/MMC: 1
- 07:15:25 [INFO] Host: 
- 07:15:25 [INFO] Target: 
Net:   <ethaddr> not set. Validating first E-fuse MAC
cpsw
Hit any key to stop autoboot:  3  0 
U-Boot# 
U-Boot# 
- 07:15:25 [INFO] Host: 
- 07:15:26 [INFO] Target: 
U-Boot# 
- 07:15:26 [INFO] Host: version
- 07:15:26 [INFO] Target: 
version
U-Boot 2013.10-g78d8ebd (Mar 06 2014 - 13:09:07)
arm-linux-gnueabihf-gcc (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 4.7.3 20130226 (prerelease)
GNU ld (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 2.23.1
U-Boot# 
- 07:15:26 [INFO] Host: setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait '
- 07:15:27 [INFO] Target: 
setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait '
U-Boot# 
- 07:15:27 [INFO] Host: setenv bootcmd  ''
- 07:15:27 [INFO] Target: 
setenv bootcmd  ''
U-Boot# 
- 07:15:27 [INFO] Host: setenv autoload 'no'
- 07:15:28 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 07:15:28 [INFO] Host: setenv serverip '192.168.0.1'
- 07:15:28 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 07:15:28 [INFO] Host: printenv
- 07:15:29 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am43xx
board_name=AM43__GP
board_rev=1.2A
boot_targets=usb mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait 
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootcmd_usb=setenv devnum 0; run usb_boot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
eth1addr=34:b1:f7:31:60:9b
ethact=cpsw
ethaddr=34:b1:f7:31:60:99
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
findfdt=if test $board_name = AM43EPOS; then setenv fdtfile am43x-epos-evm.dtb; fi; if test $board_name = AM43__GP; then setenv fdtfile am437x-gp-evm.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree; fi; 
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from mmc${mmcdev} ...; run mmcargs; bootz ${loadaddr} - ${fdtaddr}; fi;fi;
mmcdev=0
mmcroot=/dev/mmcblk0p2 rw
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:256k(NAND.SPL),256k(NAND.SPL.backup1),256k(NAND.SPL.backup2),256k(NAND.SPL.backup3),512k(NAND.u-boot-spl-os),1m(NAND.u-boot),256k(NAND.u-boot-env),256k(NAND.u-boot-env.backup1),7m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,4096
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usb_boot=setenv devtype usb; run usb_init; if usb dev 0; then run usbargs;run scan_boot; bootz ${loadaddr} - ${fdtaddr}; fi
usb_init=usb start 0;
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2013.10-g78d8ebd (Mar 06 2014 - 13:09:07)
Environment size: 3985/131067 bytes
U-Boot# 
- 07:15:29 [INFO] Host: printenv
- 07:15:29 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am43xx
board_name=AM43__GP
board_rev=1.2A
boot_targets=usb mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait 
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootcmd_usb=setenv devnum 0; run usb_boot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
eth1addr=34:b1:f7:31:60:9b
ethact=cpsw
ethaddr=34:b1:f7:31:60:99
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
findfdt=if test $board_name = AM43EPOS; then setenv fdtfile am43x-epos-evm.dtb; fi; if test $board_name = AM43__GP; then setenv fdtfile am437x-gp-evm.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree; fi; 
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from mmc${mmcdev} ...; run mmcargs; bootz ${loadaddr} - ${fdtaddr}; fi;fi;
mmcdev=0
mmcroot=/dev/mmcblk0p2 rw
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:256k(NAND.SPL),256k(NAND.SPL.backup1),256k(NAND.SPL.backup2),256k(NAND.SPL.backup3),512k(NAND.u-boot-spl-os),1m(NAND.u-boot),256k(NAND.u-boot-env),256k(NAND.u-boot-env.backup1),7m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,4096
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usb_boot=setenv devtype usb; run usb_init; if usb dev 0; then run usbargs;run scan_boot; bootz ${loadaddr} - ${fdtaddr}; fi
usb_init=usb start 0;
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2013.10-g78d8ebd (Mar 06 2014 - 13:09:07)
Environment size: 3985/131067 bytes
U-Boot# 
- 07:15:29 [INFO] Host: setenv bootargs ''${bootargs}' ip=dhcp '
- 07:15:30 [INFO] Target: 
setenv bootargs ''${bootargs}' ip=dhcp '
U-Boot# 
- 07:15:30 [INFO] Host: setenv serverip '192.168.0.1'
- 07:15:30 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 07:15:30 [INFO] Host: setenv ipaddr dhcp
- 07:15:31 [INFO] Target: 
setenv ipaddr dhcp
U-Boot# 
- 07:15:31 [INFO] Host: setenv autoload 'no'
- 07:15:31 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 07:15:31 [INFO] Host: dhcp
- 07:15:33 [INFO] Target: 
dhcp
link up on port 0, speed 1000, full duplex
BOOTP broadcast 1
DHCP client bound to address 192.168.0.146
U-Boot# 
- 07:15:33 [INFO] Host: setenv serverip '192.168.0.1'
- 07:15:33 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 07:15:33 [INFO] Host: tftp ${loadaddr} 192.168.0.1:vatf_am43xx-gpevm/0806d355664f1002a1653bf731dc9192
- 07:15:34 [INFO] Target: 
tftp ${loadaddr} 192.168.0.1:vatf_am43xx-gpevm/0806d355664f1002a1653bf731dc9192
link up on port 0, speed 1000, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.146
Filename 'vatf_am43xx-gpevm/0806d355664f1002a1653bf731dc9192'.
Load address: 0x80200000
Loading: *#################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 ############################
	 10.5 MiB/s
done
Bytes transferred = 5175472 (4ef8b0 hex)
U-Boot# 
- 07:15:34 [INFO] Host: tftp ${fdtaddr} 192.168.0.1:vatf_am43xx-gpevm/a8af2a10f4bf31af26eaead10dfe1a81
- 07:15:35 [INFO] Target: 
tftp ${fdtaddr} 192.168.0.1:vatf_am43xx-gpevm/a8af2a10f4bf31af26eaead10dfe1a81
link up on port 0, speed 1000, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.146
Filename 'vatf_am43xx-gpevm/a8af2a10f4bf31af26eaead10dfe1a81'.
Load address: 0x80f80000
Loading: *###
	 6.8 MiB/s
done
Bytes transferred = 35799 (8bd7 hex)
U-Boot# 
- 07:15:35 [INFO] Host: ls mmc 0:1
- 07:15:55 [ERROR] On command: ls mmc 0:1 waiting for ls mmc 0:1.+?(?m-ix:U-Boot\s*#) >>> error: execution expired
- 07:15:55 [INFO] Target: 
ls mmc 0:1
   108684   mlo 
     1164   readme 
   348828   u-boot.img 
       52   pointercal 
MMC: block number 0x100090e exceeds max(0xece000)
   108684   mlo 
     1164   readme 
   348828   u-boot.img 
   348828   u-boot.img 
       52   pointe~1 
       52   pointe~1 
- 07:15:55 [INFO] Host: printenv
- 07:16:15 [ERROR] On command: printenv waiting for printenv.+?(?m-ix:U-Boot\s*#) >>> error: execution expired
- 07:16:15 [INFO] Target: 
