- 15:03:55 [INFO] Starting target session
- 15:03:56 [INFO] Connected to am335x-evm via serial 
- 15:03:56 [INFO] Host: 
- 15:03:58 [ERROR] On command:  waiting for (?-mix:login:) >>> error: execution expired
- 15:03:58 [INFO] Target: 


- 15:03:58 [INFO] Host: 
- 15:04:03 [ERROR] On command:  waiting for (?-mix:[\w\d]+@.+[@:#]+) >>> error: execution expired
- 15:04:03 [INFO] Target: 


- 15:04:24 [INFO] Disconnected serial from am335x-evm
- 15:04:24 [INFO] Connected to am335x-evm via serial 
- 15:04:24 [INFO] Host: 
- 15:04:24 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 15:04:24 [INFO] Target: 

U-Boot SPL 2013.10-g310aa48 (Dec 15 2013 - 22:31:18)

- 15:04:24 [INFO] Host: 
- 15:04:25 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 15:04:25 [INFO] Target: 
reading args
spl: error reading image args, err - -1
reading u-boot.img
reading u-boot.img


U-Boot 2013.10-g310aa48 (Dec 15 2013 - 22:31:18)

I2C:   ready
DRAM:  1 GiB

- 15:04:25 [INFO] Host: 
- 15:04:25 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 15:04:25 [INFO] Target: 
NAND:  256 MiB
MMC:   OMAP SD/MMC: 0, OMAP SD/MMC: 1

- 15:04:25 [INFO] Host: 
- 15:04:26 [INFO] Target: 
*** Warning - bad CRC, using default environment

Net:   <ethaddr> not set. Validating first E-fuse MAC
cpsw, usb_ether
Hit any key to stop autoboot:  3  0 
U-Boot# 
U-Boot# 
- 15:04:26 [INFO] Host: 
- 15:04:26 [INFO] Target: 

U-Boot# 
- 15:04:26 [INFO] Host: version
- 15:04:27 [INFO] Target: 
version

U-Boot 2013.10-g310aa48 (Dec 15 2013 - 22:31:18)
arm-linux-gnueabihf-gcc (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 4.7.3 20130226 (prerelease)
GNU ld (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 2.23.1
U-Boot# 
- 15:04:27 [INFO] Host: setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait  '
- 15:04:27 [INFO] Target: 
setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait  '
U-Boot# 
- 15:04:27 [INFO] Host: setenv bootcmd  ''
- 15:04:28 [INFO] Target: 
setenv bootcmd  ''
U-Boot# 
- 15:04:28 [INFO] Host: setenv autoload 'no'
- 15:04:28 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 15:04:28 [INFO] Host: setenv serverip '192.168.0.1'
- 15:04:29 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 15:04:29 [INFO] Host: printenv
- 15:04:29 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A33515BB
board_rev=1.5B
boot_fdt=try
boot_targets= mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait  
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 100 100;u-boot.img.raw mmc 300 400;spl-os-args.raw mmc 80 80;spl-os-image.raw mmc 900 2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
eth1addr=c8:a0:30:a1:b6:c2
ethact=cpsw
ethaddr=c8:a0:30:a1:b6:c0
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(SPL),128k(SPL.backup1),128k(SPL.backup2),640k(SPL.backup3),1m(u-boot),512k(u-boot-spl-os),256k(u-boot-env),256k(u-boot-env.backup1),5m(kernel),-(rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} u-boot-spl-os; nand read ${loadaddr} kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=9,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
nfsopts=nolock
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usbnet_devaddr=c8:a0:30:a1:b6:c2
vendor=ti
ver=U-Boot 2013.10-g310aa48 (Dec 15 2013 - 22:31:18)

Environment size: 4824/131067 bytes
U-Boot# 
- 15:04:29 [INFO] Host: printenv
- 15:04:30 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A33515BB
board_rev=1.5B
boot_fdt=try
boot_targets= mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait  
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 100 100;u-boot.img.raw mmc 300 400;spl-os-args.raw mmc 80 80;spl-os-image.raw mmc 900 2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
eth1addr=c8:a0:30:a1:b6:c2
ethact=cpsw
ethaddr=c8:a0:30:a1:b6:c0
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(SPL),128k(SPL.backup1),128k(SPL.backup2),640k(SPL.backup3),1m(u-boot),512k(u-boot-spl-os),256k(u-boot-env),256k(u-boot-env.backup1),5m(kernel),-(rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} u-boot-spl-os; nand read ${loadaddr} kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=9,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
nfsopts=nolock
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usbnet_devaddr=c8:a0:30:a1:b6:c2
vendor=ti
ver=U-Boot 2013.10-g310aa48 (Dec 15 2013 - 22:31:18)

Environment size: 4824/131067 bytes
U-Boot# 
- 15:04:30 [INFO] Host: setenv bootargs ''${bootargs}' ip=dhcp '
- 15:04:30 [INFO] Target: 
setenv bootargs ''${bootargs}' ip=dhcp '
U-Boot# 
- 15:04:30 [INFO] Host: setenv ipaddr dhcp
- 15:04:31 [INFO] Target: 
setenv ipaddr dhcp
U-Boot# 
- 15:04:31 [INFO] Host: dhcp
- 15:04:32 [INFO] Target: 
dhcp
link up on port 0, speed 1000, full duplex
BOOTP broadcast 1
DHCP client bound to address 192.168.0.126
U-Boot# 
- 15:04:32 [INFO] Host: setenv serverip '192.168.0.1'
- 15:04:33 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 15:04:33 [INFO] Host: tftp ${loadaddr} 192.168.0.1:vatf_am335x-evm/23f0f6f333a47ab28b99fcb2902ff306
- 15:04:34 [INFO] Target: 
tftp ${loadaddr} 192.168.0.1:vatf_am335x-evm/23f0f6f333a47ab28b99fcb2902ff306
link up on port 0, speed 1000, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.126
Filename 'vatf_am335x-evm/23f0f6f333a47ab28b99fcb2902ff306'.
Load address: 0x80200000
Loading: *#################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 ###########################################################
	 9.2 MiB/s
done
Bytes transferred = 4672592 (474c50 hex)
U-Boot# 
- 15:04:34 [INFO] Host: tftp ${fdtaddr} 192.168.0.1:vatf_am335x-evm/e1bcc7547f3167900bc41f210736d37b
- 15:04:34 [INFO] Target: 
tftp ${fdtaddr} 192.168.0.1:vatf_am335x-evm/e1bcc7547f3167900bc41f210736d37b
link up on port 0, speed 1000, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.126
Filename 'vatf_am335x-evm/e1bcc7547f3167900bc41f210736d37b'.
Load address: 0x80f80000
Loading: *###
	 8.3 MiB/s
done
Bytes transferred = 34983 (88a7 hex)
U-Boot# 
- 15:04:34 [INFO] Host: printenv
- 15:04:35 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A33515BB
board_rev=1.5B
boot_fdt=try
boot_targets= mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait ip=dhcp
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 100 100;u-boot.img.raw mmc 300 400;spl-os-args.raw mmc 80 80;spl-os-image.raw mmc 900 2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
dnsip=192.0.2.2
dnsip2=192.0.2.3
eth1addr=c8:a0:30:a1:b6:c2
ethact=cpsw
ethaddr=c8:a0:30:a1:b6:c0
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
fileaddr=80f80000
filesize=88a7
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
ipaddr=192.168.0.126
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(SPL),128k(SPL.backup1),128k(SPL.backup2),640k(SPL.backup3),1m(u-boot),512k(u-boot-spl-os),256k(u-boot-env),256k(u-boot-env.backup1),5m(kernel),-(rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} u-boot-spl-os; nand read ${loadaddr} kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=9,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
netmask=255.255.255.0
nfsopts=nolock
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usbnet_devaddr=c8:a0:30:a1:b6:c2
vendor=ti
ver=U-Boot 2013.10-g310aa48 (Dec 15 2013 - 22:31:18)

Environment size: 4974/131067 bytes
U-Boot# 
- 15:04:35 [INFO] Host: setenv bootargs ''${bootargs}' root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait '
- 15:04:35 [INFO] Target: 
setenv bootargs ''${bootargs}' root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait '
U-Boot# 
- 15:04:35 [INFO] Host: printenv
- 15:04:36 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A33515BB
board_rev=1.5B
boot_fdt=try
boot_targets= mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait ip=dhcp root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 100 100;u-boot.img.raw mmc 300 400;spl-os-args.raw mmc 80 80;spl-os-image.raw mmc 900 2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
dnsip=192.0.2.2
dnsip2=192.0.2.3
eth1addr=c8:a0:30:a1:b6:c2
ethact=cpsw
ethaddr=c8:a0:30:a1:b6:c0
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
fileaddr=80f80000
filesize=88a7
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
ipaddr=192.168.0.126
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(SPL),128k(SPL.backup1),128k(SPL.backup2),640k(SPL.backup3),1m(u-boot),512k(u-boot-spl-os),256k(u-boot-env),256k(u-boot-env.backup1),5m(kernel),-(rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} u-boot-spl-os; nand read ${loadaddr} kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=9,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
netmask=255.255.255.0
nfsopts=nolock
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usbnet_devaddr=c8:a0:30:a1:b6:c2
vendor=ti
ver=U-Boot 2013.10-g310aa48 (Dec 15 2013 - 22:31:18)

Environment size: 5022/131067 bytes
U-Boot# 
- 15:04:36 [INFO] Host: setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} - ${fdtaddr}; else bootz ${loadaddr} - ${fdtaddr}; bootm ${loadaddr} - ${fdtaddr}; fi'
- 15:04:36 [INFO] Target: 
setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} - ${fdtaddr}; else bootz ${loadaddr} - ${fdtaddr}; bootm ${loadaddr} - ${fdtaddr}; fi'
U-Boot# 
- 15:04:36 [INFO] Host: bdinfo
- 15:04:37 [INFO] Target: 
bdinfo
arch_number = 0x00000E05
boot_params = 0x80000100
DRAM bank   = 0x00000000
-> start    = 0x80000000
-> size     = 0x40000000
eth0name    = cpsw
ethaddr     = c8:a0:30:a1:b6:c0
eth1name    = usb_ether
eth1addr    = c8:a0:30:a1:b6:c2
current eth = cpsw
ip_addr     = 192.168.0.126
baudrate    = 115200 bps
TLB addr    = 0xBFFF0000
relocaddr   = 0xBF750000
reloc off   = 0x3EF50000
irq_sp      = 0xBF62FF38
sp start    = 0xBF62FF28
U-Boot# 
- 15:04:37 [INFO] Host: boot
- 15:07:07 [ERROR] On command: boot waiting for (?-mix:login:) >>> error: execution expired
- 15:07:07 [INFO] Target: 
boot

## Checking Image at 80200000 ...
Unknown image format!
Kernel image @ 0x80200000 [ 0x000000 - 0x474c50 ]
## Flattened Device Tree blob at 80f80000
   Booting using the fdt blob at 0x80f80000
   Loading Device Tree to 9fff4000, end 9ffff8a6 ... OK

Starting kernel ...

[    0.000000] Booting Linux on physical CPU 0x0
[    0.000000] Linux version 3.15.0-rc5-next-20140513-00002-gf406298 (nmenon@kahuna) (gcc version 4.6.3 (Ubuntu/Linaro 4.6.3-1ubuntu5) ) #1 SMP Tue May 13 06:08:47 CDT 2014
[    0.000000] CPU: ARMv7 Processor [413fc082] revision 2 (ARMv7), cr=10c5387d
[    0.000000] CPU: PIPT / VIPT nonaliasing data cache, VIPT aliasing instruction cache
[    0.000000] Machine model: TI AM335x EVM
[    0.000000] cma: CMA: reserved 64 MiB at ab800000
[    0.000000] Memory policy: Data cache writeback
[    0.000000] CPU: All CPU(s) started in SVC mode.
[    0.000000] AM335X ES2.1 (sgx neon )
[    0.000000] PERCPU: Embedded 7 pages/cpu @eafaf000 s7744 r8192 d12736 u32768
[    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 260368
[    0.000000] Kernel command line: console=ttyO0,115200n8 earlyprintk rootwait ip=dhcp root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait
[    0.000000] PID hash table entries: 4096 (order: 2, 16384 bytes)
[    0.000000] Dentry cache hash table entries: 131072 (order: 7, 524288 bytes)
[    0.000000] Inode-cache hash table entries: 65536 (order: 6, 262144 bytes)
[    0.000000] Memory: 962552K/1047552K available (6094K kernel code, 777K rwdata, 2400K rodata, 555K init, 289K bss, 85000K reserved, 269312K highmem)
[    0.000000] Virtual kernel memory layout:
[    0.000000]     vector  : 0xffff0000 - 0xffff1000   (   4 kB)
[    0.000000]     fixmap  : 0xffc00000 - 0xffe00000   (2048 kB)
[    0.000000]     vmalloc : 0xf0000000 - 0xff000000   ( 240 MB)
[    0.000000]     lowmem  : 0xc0000000 - 0xef800000   ( 760 MB)
[    0.000000]     pkmap   : 0xbfe00000 - 0xc0000000   (   2 MB)
[    0.000000]     modules : 0xbf000000 - 0xbfe00000   (  14 MB)
[    0.000000]       .text : 0xc0208000 - 0xc0a53ca0   (8496 kB)
[    0.000000]       .init : 0xc0a54000 - 0xc0adee40   ( 556 kB)
[    0.000000]       .data : 0xc0ae0000 - 0xc0ba2560   ( 778 kB)
[    0.000000]        .bss : 0xc0ba2568 - 0xc0beabd8   ( 290 kB)
[    0.000000] SLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=1, Nodes=1
[    0.000000] Hierarchical RCU implementation.
[    0.000000] 	RCU restricting CPUs from NR_CPUS=4 to nr_cpu_ids=1.
[    0.000000] RCU: Adjusting geometry for rcu_fanout_leaf=16, nr_cpu_ids=1
[    0.000000] NR_IRQS:16 nr_irqs:16 16
[    0.000000] IRQ: Found an INTC at 0xfa200000 (revision 5.0) with 128 interrupts
[    0.000000] Total of 128 interrupts on 1 active controller
[    0.000000] OMAP clockevent source: timer2 at 24000000 Hz
[    0.000011] sched_clock: 32 bits at 24MHz, resolution 41ns, wraps every 178956969942ns
[    0.000031] OMAP clocksource: timer1 at 24000000 Hz
[    0.000195] Console: colour dummy device 80x30
[    0.000226] Calibrating delay loop... 996.14 BogoMIPS (lpj=4980736)
[    0.089485] pid_max: default: 32768 minimum: 301
[    0.089630] Mount-cache hash table entries: 2048 (order: 1, 8192 bytes)
[    0.089641] Mountpoint-cache hash table entries: 2048 (order: 1, 8192 bytes)
[    0.090231] CPU: Testing write buffer coherency: ok
[    0.090552] CPU0: thread -1, cpu 0, socket -1, mpidr 0
[    0.090643] Setting up static identity map for 0x807c2918 - 0x807c29b0
[    0.092562] Brought up 1 CPUs
[    0.092577] SMP: Total of 1 processors activated.
[    0.092585] CPU: All CPU(s) started in SVC mode.
[    0.093179] devtmpfs: initialized
[    0.096578] VFP support v0.3: implementor 41 architecture 3 part 30 variant c rev 3
[    0.106510] omap_hwmod: tptc0 using broken dt data from edma
[    0.106621] omap_hwmod: tptc1 using broken dt data from edma
[    0.106735] omap_hwmod: tptc2 using broken dt data from edma
[    0.111224] omap_hwmod: debugss: _wait_target_disable failed
[    0.165607] pinctrl core: initialized pinctrl subsystem
[    0.166121] regulator-dummy: no parameters
[    0.180126] NET: Registered protocol family 16
[    0.182498] DMA: preallocated 256 KiB pool for atomic coherent allocations
[    0.184212] cpuidle: using governor ladder
[    0.184233] cpuidle: using governor menu
[    0.191011] platform 49000000.edma: alias fck already exists
[    0.191039] platform 49000000.edma: alias fck already exists
[    0.191052] platform 49000000.edma: alias fck already exists
[    0.191757] OMAP GPIO hardware version 0.1
[    0.194181] No ATAGs?
[    0.196069] Serial: AMBA PL011 UART driver
[    0.212381] edma-dma-engine edma-dma-engine.0: TI EDMA DMA engine driver
[    0.213943] vgaarb: loaded
[    0.214571] SCSI subsystem initialized
[    0.215207] usbcore: registered new interface driver usbfs
[    0.215278] usbcore: registered new interface driver hub
[    0.215420] usbcore: registered new device driver usb
[    0.215941] Linux video capture interface: v2.00
[    0.215993] pps_core: LinuxPPS API ver. 1 registered
[    0.216000] pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    0.216028] PTP clock support registered
[    0.216105] EDAC MC: Ver: 3.0.0
[    0.216873] Advanced Linux Sound Architecture Driver Initialized.
[    0.218099] Switched to clocksource timer1
[    0.227982] NET: Registered protocol family 2
[    0.228647] TCP established hash table entries: 8192 (order: 3, 32768 bytes)
[    0.228723] TCP bind hash table entries: 8192 (order: 4, 65536 bytes)
[    0.228831] TCP: Hash tables configured (established 8192 bind 8192)
[    0.228937] TCP: reno registered
[    0.228949] UDP hash table entries: 512 (order: 2, 16384 bytes)
[    0.228977] UDP-Lite hash table entries: 512 (order: 2, 16384 bytes)
[    0.229178] NET: Registered protocol family 1
[    0.229555] RPC: Registered named UNIX socket transport module.
[    0.229566] RPC: Registered udp transport module.
[    0.229572] RPC: Registered tcp transport module.
[    0.229578] RPC: Registered tcp NFSv4.1 backchannel transport module.
[    0.231332] futex hash table entries: 256 (order: 2, 16384 bytes)
[    0.232544] bounce: pool size: 64 pages
[    0.243336] squashfs: version 4.0 (2009/01/31) Phillip Lougher
[    0.244161] NFS: Registering the id_resolver key type
[    0.244232] Key type id_resolver registered
[    0.244241] Key type id_legacy registered
[    0.244300] msgmni has been set to 1481
[    0.244991] Block layer SCSI generic (bsg) driver version 0.4 loaded (major 249)
[    0.245013] io scheduler noop registered
[    0.245024] io scheduler deadline registered
[    0.245214] io scheduler cfq registered (default)
[    0.246154] pinctrl-single 44e10800.pinmux: 142 pins at pa f9e10800 size 568
[    0.304970] Serial: 8250/16550 driver, 4 ports, IRQ sharing disabled
[    0.306708] Serial: IMX driver
[    0.306956] msm_serial: driver initialized
[    0.307318] omap_uart 44e09000.serial: no wakeirq for uart0
[    0.307495] 44e09000.serial: ttyO0 at MMIO 0x44e09000 (irq = 88, base_baud = 3000000) is a OMAP UART0
[    0.938657] console [ttyO0] enabled
[    0.942817] STMicroelectronics ASC driver initialized
[    0.948628] serial: Freescale lpuart driver
[    0.953154] [drm] Initialized drm 1.1.0 20060810
[    0.962405] loop: module loaded
[    0.969054] pegasus: v0.9.3 (2013/04/25), Pegasus/Pegasus II USB Ethernet driver
[    0.976898] usbcore: registered new interface driver pegasus
[    0.982937] usbcore: registered new interface driver asix
[    0.988675] usbcore: registered new interface driver ax88179_178a
[    0.995112] usbcore: registered new interface driver cdc_ether
[    1.001313] usbcore: registered new interface driver smsc75xx
[    1.007404] usbcore: registered new interface driver smsc95xx
[    1.013505] usbcore: registered new interface driver net1080
[    1.019503] usbcore: registered new interface driver cdc_subset
[    1.025755] usbcore: registered new interface driver zaurus
[    1.031728] usbcore: registered new interface driver cdc_ncm
[    1.037700] ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    1.044566] ehci-pci: EHCI PCI platform driver
[    1.049336] ehci-platform: EHCI generic platform driver
[    1.054926] ehci-omap: OMAP-EHCI Host Controller driver
[    1.060501] ehci-orion: EHCI orion driver
[    1.064765] SPEAr-ehci: EHCI SPEAr driver
[    1.069045] tegra-ehci: Tegra EHCI driver
[    1.073657] usbcore: registered new interface driver usb-storage
[    1.081138] mousedev: PS/2 mouse device common for all mice
[    1.088459] i2c /dev entries driver
[    1.092589] usbcore: registered new interface driver uvcvideo
[    1.098654] USB Video Class driver (1.1.1)
[    1.102953] gspca_main: v2.14.0 registered
[    1.108347] sdhci: Secure Digital Host Controller Interface driver
[    1.114828] sdhci: Copyright(c) Pierre Ossman
[    1.119810] sdhci-pltfm: SDHCI platform and OF driver helper
[    1.126166] usbcore: registered new interface driver usbhid
[    1.132038] usbhid: USB HID core driver
[    1.139065] TCP: cubic registered
[    1.142566] NET: Registered protocol family 17
[    1.147468] Key type dns_resolver registered
[    1.152720] ThumbEE CPU extension supported.
[    1.157241] Registering SWP/SWPB emulation handler
[    1.163678] drivers/rtc/hctosys.c: unable to open rtc device (rtc0)
[   13.288272] ALSA device list:
[   13.291404]   No soundcards found.
[   13.295898] Waiting for root device /dev/mmcblk0p2...

