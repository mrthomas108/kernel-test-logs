- 06:55:56 [INFO] Starting target session
- 06:55:57 [INFO] Connected to dra7xx-evm via serial 
- 06:55:57 [INFO] Host: #check prompt
- 06:55:59 [ERROR] On command: #check prompt waiting for (?-mix:((?-mix:login:)|[Pp]assword)) >>> error: execution expired
- 06:55:59 [INFO] Target: 
#check prompt
root@dra7xx-evm:/test# 
- 06:55:59 [INFO] Host: #check prompt
- 06:55:59 [INFO] Target: 
#check prompt
root@dra7xx-evm:/test# 
- 06:55:59 [INFO] Host: sync;poweroff
- 06:56:16 [INFO] Target: 
sync;poweroff


Broadcast message from root@dra7xx-evm (ttyO0) (Sat Jan 18 07:59:19 2014):



The systemH%9%Quj(*UI55jRroot@dra7xx-evm:/test# 
INIT: SendiStopping Dropbear SSH server: stopped /usr/sbin/dropbear (pid 1318)
dropbear.
Stopping telnet daemon.
Stopping system message bus: hwclock: can't open '/dev/misc/rtc': No such file or directory
Error opening /dev/fb0: No such file or directory
Stopping syslogd/klogd: stopped syslogd (pid 1329)
stopped klogd (pid 1332)
done
Stopping thttpd.
ALSA: Storing mixer settings...
/usr/sbin/alsactl: save_state:1580: No soundcards found...
Deconfiguring network interfaces... ifdown: interface eth0 not configured
done.
Stopping Lighttpd Web Server: stopped /usr/sbin/lighttpd (pid 1343)
lighttpd.
Stopping Matrix GUI applicationstart-stop-daemon: warning: killing process 1350: No such process
.
***************************************************************
***************************************************************
NOTICE: This file system contains the followin GPLv3 packages:
	binutils-symlinks
	binutils
	gdbserver
	parted

If you do not wish to distribute GPLv3 components please remove
the above packages prior to distribution.  This can be done using
the opkg remove command.  i.e.:
    opkg remove <package>
Where <package> is the name printed in the list above

NOTE: If the package is a dependency of another package you
      will be notified of the dependent packages.  You should
      use the --force-removal-of-dependent-packages option to
      also remove the dependent packages as well
***************************************************************
***************************************************************
Sending all processes the TERM signal...
Sending all processes the KILL signal...
Unmounting remote filesystems...
Deactivating swap...
Unmounting local filesystems...
[ 1261.511321] FAT-fs (mmcblk1p1): error, invalid access to FAT (entry 0x261728b1)
[ 1261.518974] FAT-fs (mmcblk1p1): Filesystem has been set read-only
[ 1263.784460] reboot: System halted

- 06:56:16 [INFO] Disconnected serial from dra7xx-evm
- 06:56:37 [INFO] Connected to dra7xx-evm via serial 
- 06:56:37 [INFO] Host: 
- 06:56:37 [INFO] Target: 
  0 
U-Boot# 
- 06:56:37 [INFO] Host: version
- 06:56:38 [INFO] Target: 
version

U-Boot 2013.10-ge2176ac (Jan 15 2014 - 15:54:20)
arm-linux-gnueabihf-gcc (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 4.7.3 20130226 (prerelease)
GNU ld (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 2.23.1
U-Boot# 
- 06:56:38 [INFO] Host: bdi
- 06:56:38 [INFO] Target: 
bdi
arch_number = 0x0111631E
boot_params = 0x80000100
DRAM bank   = 0x00000000
-> start    = 0x80000000
-> size     = 0x5F000000
eth0name    = cpsw
ethaddr     = c4:ed:ba:be:4f:36
current eth = cpsw
ip_addr     = <NULL>
baudrate    = 115200 bps
TLB addr    = 0xDEFF0000
relocaddr   = 0xDEF54000
reloc off   = 0x5E754000
irq_sp      = 0xDEE33F38
sp start    = 0xDEE33F28
U-Boot# 
- 06:56:38 [INFO] Host: printenv
- 06:56:39 [INFO] Target: 
printenv
arch=arm
baudrate=115200
board=dra7xx
board_name=dra7xx
boot_targets=usb mmc0 nand 
bootcmd=for target in ${boot_targets}; do run bootcmd_${target}; done
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootcmd_usb=setenv devnum 0; run usb_boot;
bootdelay=3
bootdir=/boot
bootfile=zImage
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
eth1addr=c4:ed:ba:be:4f:37
ethact=cpsw
ethaddr=c4:ed:ba:be:4f:36
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
findfdt=if test $board_name = dra7xx; then setenv fdtfile dra7-evm.dtb; fi;if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
loadaddr=0x80200000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} uEnv.txt
loadbootscript=fatload mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load ${devtype} ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile};
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} vram=${vram} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from mmc${mmcdev} ...; run mmcargs; bootz ${loadaddr} - ${fdtaddr}; fi;fi;
mmcdev=0
mmcroot=/dev/mmcblk1p2 rw
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(SPL),128k(SPL.backup1),128k(SPL.backup2),640k(SPL.backup3),1m(u-boot),512k(u-boot-spl-os),256k(u-boot-env),256k(u-boot-env.backup1),5m(kernel),-(rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} u-boot-spl-os; nand read ${loadaddr} kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=9,2048
nandrootfstype=ubifs rootwait=1
rdaddr=0x81000000
rootpart=2
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
scsidevs=1
soc=omap5
stderr=serial
stdin=serial
stdout=serial
usb_boot=setenv devtype usb; run usb_init; if usb dev 0; then run usbargs;run scan_boot; bootz ${loadaddr} - ${fdtaddr}; fi
usb_init=usb start 0;
usbargs=setenv bootargs console=${console} ${optargs} vram=${vram}root=${mmcroot} rootfstype=${mmcrootfstype}
usbtty=cdc_acm
vendor=ti
ver=U-Boot 2013.10-ge2176ac (Jan 15 2014 - 15:54:20)
vram=16M

Environment size: 3188/131067 bytes
U-Boot# 
- 06:56:39 [INFO] Host: setenv autoload 'no'
- 06:56:39 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 06:56:39 [INFO] Host: usb start
- 06:56:41 [INFO] Target: 
usb start
(Re)start USB...
USB0:   Register 2000140 NbrPorts 2
Starting the controller
USB XHCI 1.00
scanning bus 0 for devices... 2 USB Device(s) found
       scanning usb for storage devices... Device NOT ready
   Request Sense returned 02 3A 00
2 Storage Device(s) found
U-Boot# 
- 06:56:41 [INFO] Host: dhcp
- 06:56:42 [INFO] Target: 
dhcp
link up on port 0, speed 1000, full duplex
BOOTP broadcast 1
DHCP client bound to address 192.168.0.133
U-Boot# 
- 06:56:42 [INFO] Host: setenv serverip 192.168.0.1
- 06:56:43 [INFO] Target: 
setenv serverip 192.168.0.1
U-Boot# 
- 06:56:43 [INFO] Host: setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait ip=dhcp root=/dev/mmcblk1p2 rw rootfstype=ext3'
- 06:56:43 [INFO] Target: 
setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait ip=dhcp root=/dev/mmcblk1p2 rw rootfstype=ext3'
U-Boot# 
- 06:56:43 [INFO] Host: printenv
- 06:56:44 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=dra7xx
board_name=dra7xx
boot_targets=usb mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait ip=dhcp root=/dev/mmcblk1p2 rw rootfstype=ext3
bootcmd=for target in ${boot_targets}; do run bootcmd_${target}; done
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootcmd_usb=setenv devnum 0; run usb_boot;
bootdelay=3
bootdir=/boot
bootfile=zImage
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dnsip=192.0.2.2
dnsip2=192.0.2.3
eth1addr=c4:ed:ba:be:4f:37
ethact=cpsw
ethaddr=c4:ed:ba:be:4f:36
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
findfdt=if test $board_name = dra7xx; then setenv fdtfile dra7-evm.dtb; fi;if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
ipaddr=192.168.0.133
loadaddr=0x80200000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} uEnv.txt
loadbootscript=fatload mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load ${devtype} ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile};
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} vram=${vram} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from mmc${mmcdev} ...; run mmcargs; bootz ${loadaddr} - ${fdtaddr}; fi;fi;
mmcdev=0
mmcroot=/dev/mmcblk1p2 rw
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(SPL),128k(SPL.backup1),128k(SPL.backup2),640k(SPL.backup3),1m(u-boot),512k(u-boot-spl-os),256k(u-boot-env),256k(u-boot-env.backup1),5m(kernel),-(rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} u-boot-spl-os; nand read ${loadaddr} kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=9,2048
nandrootfstype=ubifs rootwait=1
netmask=255.255.255.0
rdaddr=0x81000000
rootpart=2
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
scsidevs=1
serverip=192.168.0.1
soc=omap5
stderr=serial
stdin=serial
stdout=serial
usb_boot=setenv devtype usb; run usb_init; if usb dev 0; then run usbargs;run scan_boot; bootz ${loadaddr} - ${fdtaddr}; fi
usb_init=usb start 0;
usbargs=setenv bootargs console=${console} ${optargs} vram=${vram}root=${mmcroot} rootfstype=${mmcrootfstype}
usbtty=cdc_acm
vendor=ti
ver=U-Boot 2013.10-ge2176ac (Jan 15 2014 - 15:54:20)
vram=16M

Environment size: 3435/131067 bytes
U-Boot# 
- 06:56:44 [INFO] Host: setenv bootcmd 'tftp ${loadaddr} 192.168.0.1:vatf_dra7xx-evm/3fb89a22850c9df792a6cf66cdaac8c6; tftp ${fdtaddr} 192.168.0.1:vatf_dra7xx-evm/e3edc8e84e748bef8f395b8088ca7f17; if iminfo ${loadaddr}; then bootm ${loadaddr} - ${fdtaddr}; else bootz ${loadaddr} - ${fdtaddr}; bootm ${loadaddr} - ${fdtaddr}; fi' 
- 06:56:44 [INFO] Target: 
setenv bootcmd 'tftp ${loadaddr} 192.168.0.1:vatf_dra7xx-evm/3fb89a22850c9df792a6cf66cdaac8c6; tftp ${fdtaddr} 192.168.0.1:vatf_dra7xx-evm/e3edc8e84e748bef8f395b8088ca7f17; if iminfo ${loadaddr}; then bootm ${loadaddr} - ${fdtaddr}; else bootz ${loadaddr} - ${fdtaddr}; bootm ${loadaddr} - ${fdtaddr}; fi' 
U-Boot# 
- 06:56:44 [INFO] Host: boot
- 06:59:14 [ERROR] On command: boot waiting for (?-mix:login:) >>> error: execution expired
- 06:59:14 [INFO] Target: 
boot
link up on port 0, speed 1000, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.133
Filename 'vatf_dra7xx-evm/3fb89a22850c9df792a6cf66cdaac8c6'.
Load address: 0x80200000
Loading: *#################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 #########################
	 9.2 MiB/s
done
Bytes transferred = 5128488 (4e4128 hex)
link up on port 0, speed 1000, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.133
Filename 'vatf_dra7xx-evm/e3edc8e84e748bef8f395b8088ca7f17'.
Load address: 0x80f80000
Loading: *#####
	 7.9 MiB/s
done
Bytes transferred = 65871 (1014f hex)

## Checking Image at 80200000 ...
Unknown image format!
Kernel image @ 0x80200000 [ 0x000000 - 0x4e4128 ]
## Flattened Device Tree blob at 80f80000
   Booting using the fdt blob at 0x80f80000
   Loading Device Tree to 9ffec000, end 9ffff14e ... OK

Starting kernel ...

software interrupt
pc : [<80cc8310>]	   lr : [<80cc8310>]
sp : 811ad388  ip : e0866000	 fp : e0400001
r10: e590d01c  r9 : 80cc8300	 r8 : 9ffec000
r7 : 0111631e  r6 : 00ac8240	 r5 : 802000c0  r4 : 80208001
r3 : e8901c4e  r2 : e28f0f82	 r1 : 2b00008d  r0 : 80cc8308
Flags: nzCv  IRQs off  FIQs off  Mode SVC_32
Resetting CPU ...

resetting ...

