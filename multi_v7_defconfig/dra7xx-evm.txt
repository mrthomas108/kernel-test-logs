- 07:08:32 [INFO] Starting target session
- 07:08:36 [INFO] Connected to dra7xx-evm via serial 
- 07:08:36 [INFO] Host: #check prompt
- 07:08:39 [ERROR] On command: #check prompt waiting for #check prompt.+?(?-mix:((?-mix:login:)|[Pp]assword)) >>> error: execution expired
- 07:08:39 [INFO] Target: 
- 07:08:39 [INFO] Host: #check prompt
- 07:08:41 [ERROR] On command: #check prompt waiting for #check prompt.+?(?-mix:[\w\d]+@.+[@:#]+) >>> error: execution expired
- 07:08:41 [INFO] Target: 
- 07:08:41 [INFO] Disconnected serial from dra7xx-evm
- 07:08:42 [INFO] Connected to dra7xx-evm via serial 
- 07:08:42 [INFO] Host: 
- 07:08:43 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 07:08:43 [INFO] Target: 
U-Boot SPL 2014.07-00076-g8f725ef (Oct 09 2014 - 11:19:18)
DRA752 ES1.1
- 07:08:43 [INFO] Host: 
- 07:08:43 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 07:08:43 [INFO] Target: 
reading args
spl_load_image_fat_os: error reading image args, err - -1
reading u-boot.img
reading u-boot.img
U-Boot 2014.07-00076-g8f725ef (Oct 09 2014 - 11:19:18), Build: jenkins-system_test_testing_kernel-500
CPU  : DRA752 ES1.1
Board: DRA7xx
I2C:   ready
DRAM:  1.5 GiB
NAND:  256 MiB
MMC:   OMAP SD/MMC: 0, OMAP SD/MMC: 1
- 07:08:43 [INFO] Host: 
- 07:08:44 [INFO] Target: 
Using default environment
SATA link 0 timeout.
AHCI 0001.0300 32 slots 1 ports 3 Gbps 0x1 impl SATA mode
flags: 64bit ncq stag pm led clo only pmp pio slum part ccc apst 
scanning bus for devices...
Found 0 device(s).
SCSI:  Net:   <ethaddr> not set. Validating first E-fuse MAC
cpsw
Hit any key to stop autoboot:  1  0 
U-Boot# 
- 07:08:44 [INFO] Host: 
- 07:08:44 [INFO] Target: 
U-Boot# 
- 07:08:44 [INFO] Host: version
- 07:08:44 [INFO] Target: 
version
U-Boot 2014.07-00076-g8f725ef (Oct 09 2014 - 11:19:18)
arm-linux-gnueabihf-gcc (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 4.7.3 20130226 (prerelease)
GNU ld (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 2.23.1
U-Boot# 
- 07:08:44 [INFO] Host: setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait '
- 07:08:44 [INFO] Target: 
setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait '
U-Boot# 
- 07:08:44 [INFO] Host: setenv bootcmd  ''
- 07:08:44 [INFO] Target: 
setenv bootcmd  ''
U-Boot# 
- 07:08:44 [INFO] Host: setenv autoload 'no'
- 07:08:44 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 07:08:44 [INFO] Host: setenv serverip '192.168.0.1'
- 07:08:44 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 07:08:44 [INFO] Host: setenv mmcdev ' '
- 07:08:44 [INFO] Target: 
setenv mmcdev ' '
U-Boot# 
- 07:08:44 [INFO] Host: printenv
- 07:08:45 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=dra7xx
board_name=dra7xx
bootargs=console=ttyO0,115200n8 earlyprintk rootwait 
bootcmd=
bootdelay=1
bootdir=/boot
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=MLO raw 0x100 0x100 mmcpart 0;u-boot.img raw 0x300 0x1000 mmcpart 0
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_ram=kernel ram 0x80200000 0x4000000;fdt ram 0x80f80000 0x80000;ramdisk ram 0x81000000 0x4000000
dfu_bufsiz=0x10000
eth1addr=b4:99:4c:0b:e4:e7
ethact=cpsw
ethaddr=b4:99:4c:0b:e4:e6
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtfile=undefined
findfdt=if test $board_name = omap5_uevm; then setenv fdtfile omap5-uevm.dtb; fi; if test $board_name = dra7xx; then setenv fdtfile dra7-evm.dtb; fi;if test $board_name = dra72x; then setenv fdtfile dra72-evm.dtb; fi;if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} uEnv.txt
loadbootscript=fatload mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile};
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
mmcargs=setenv bootargs console=${console} ${optargs} vram=${vram} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from mmc${mmcdev} ...; run mmcargs; bootz ${loadaddr} - ${fdtaddr}; fi;fi;
mmcdev= 
mmcroot=/dev/mmcblk1p2 rw
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramdisk_addr_r=0x88080000
rdaddr=0x88080000
scsidevs=0
serverip=192.168.0.1
soc=omap5
stderr=serial
stdin=serial
stdout=serial
usbtty=cdc_acm
vendor=ti
ver=U-Boot 2014.07-00076-g8f725ef (Oct 09 2014 - 11:19:18)
vram=16M
Environment size: 3057/131067 bytes
U-Boot# 
- 07:08:45 [INFO] Host: printenv
- 07:08:45 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=dra7xx
board_name=dra7xx
bootargs=console=ttyO0,115200n8 earlyprintk rootwait 
bootcmd=
bootdelay=1
bootdir=/boot
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=MLO raw 0x100 0x100 mmcpart 0;u-boot.img raw 0x300 0x1000 mmcpart 0
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_ram=kernel ram 0x80200000 0x4000000;fdt ram 0x80f80000 0x80000;ramdisk ram 0x81000000 0x4000000
dfu_bufsiz=0x10000
eth1addr=b4:99:4c:0b:e4:e7
ethact=cpsw
ethaddr=b4:99:4c:0b:e4:e6
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtfile=undefined
findfdt=if test $board_name = omap5_uevm; then setenv fdtfile omap5-uevm.dtb; fi; if test $board_name = dra7xx; then setenv fdtfile dra7-evm.dtb; fi;if test $board_name = dra72x; then setenv fdtfile dra72-evm.dtb; fi;if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} uEnv.txt
loadbootscript=fatload mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile};
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
mmcargs=setenv bootargs console=${console} ${optargs} vram=${vram} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from mmc${mmcdev} ...; run mmcargs; bootz ${loadaddr} - ${fdtaddr}; fi;fi;
mmcdev= 
mmcroot=/dev/mmcblk1p2 rw
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramdisk_addr_r=0x88080000
rdaddr=0x88080000
scsidevs=0
serverip=192.168.0.1
soc=omap5
stderr=serial
stdin=serial
stdout=serial
usbtty=cdc_acm
vendor=ti
ver=U-Boot 2014.07-00076-g8f725ef (Oct 09 2014 - 11:19:18)
vram=16M
Environment size: 3057/131067 bytes
U-Boot# 
- 07:08:45 [INFO] Host: setenv bootargs ''${bootargs}' ip=dhcp '
- 07:08:45 [INFO] Target: 
setenv bootargs ''${bootargs}' ip=dhcp '
U-Boot# 
- 07:08:45 [INFO] Host: setenv serverip '192.168.0.1'
- 07:08:45 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 07:08:45 [INFO] Host: setenv ipaddr dhcp
- 07:08:45 [INFO] Target: 
setenv ipaddr dhcp
U-Boot# 
- 07:08:45 [INFO] Host: setenv autoload 'no'
- 07:08:45 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 07:08:45 [INFO] Host: dhcp
- 07:08:47 [INFO] Target: 
dhcp
cpsw Waiting for PHY auto negotiation to complete.. done
link up on port 0, speed 1000, full duplex
BOOTP broadcast 1
DHCP client bound to address 192.168.0.234
U-Boot# 
- 07:08:47 [INFO] Host: setenv serverip '192.168.0.1'
- 07:08:48 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 07:08:48 [INFO] Host: tftp ${loadaddr} 192.168.0.1:vatf_dra7xx-evm1/5a84b281ed07dd54c6bf2c5294abce47
- 07:08:48 [INFO] Target: 
tftp ${loadaddr} 192.168.0.1:vatf_dra7xx-evm1/5a84b281ed07dd54c6bf2c5294abce47
link up on port 0, speed 1000, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.234
Filename 'vatf_dra7xx-evm1/5a84b281ed07dd54c6bf2c5294abce47'.
Load address: 0x82000000
Loading: *#################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 ##################################
	 11.2 MiB/s
done
Bytes transferred = 6211544 (5ec7d8 hex)
U-Boot# 
- 07:08:48 [INFO] Host: tftp ${fdt_addr_r} 192.168.0.1:vatf_dra7xx-evm1/3eb732faf4596096ba8a4bebbf37e138
- 07:08:48 [INFO] Target: 
tftp ${fdt_addr_r} 192.168.0.1:vatf_dra7xx-evm1/3eb732faf4596096ba8a4bebbf37e138
link up on port 0, speed 1000, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.234
Filename 'vatf_dra7xx-evm1/3eb732faf4596096ba8a4bebbf37e138'.
Load address: 0x88000000
Loading: *######
	 8.9 MiB/s
done
Bytes transferred = 74803 (12433 hex)
U-Boot# 
- 07:08:48 [INFO] Host: ls mmc 0:1
- 07:08:48 [INFO] Target: 
ls mmc 0:1
    73648   mlo 
   433144   u-boot.img 
        4   ws-calibrate.rules 
        0   pointercal 
4 file(s), 0 dir(s)
U-Boot# 
- 07:08:48 [INFO] Host: ls mmc 0:2
- 07:08:49 [INFO] Target: 
ls mmc 0:2
<DIR>       4096 .
<DIR>       4096 ..
<DIR>      16384 lost+found
<DIR>       4096 bin
<DIR>       4096 boot
<DIR>       4096 dev
<DIR>       4096 etc
<DIR>       4096 home
<DIR>       4096 lib
<DIR>       4096 media
<DIR>       4096 mnt
<DIR>       4096 opt
<DIR>       4096 proc
<DIR>       4096 run
<DIR>       4096 sbin
<DIR>       4096 srv
<DIR>       4096 sys
<DIR>       4096 test
<SYM>          8 tmp
<DIR>       4096 usr
<DIR>       4096 var
<DIR>       4096 www
U-Boot# 
- 07:08:49 [INFO] Host: part uuid mmc 0:2
- 07:08:49 [INFO] Target: 
part uuid mmc 0:2
00000000-02
U-Boot# 
- 07:08:49 [INFO] Host: printenv
- 07:08:49 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=dra7xx
board_name=dra7xx
bootargs=console=ttyO0,115200n8 earlyprintk rootwait  ip=dhcp 
bootcmd=
bootdelay=1
bootdir=/boot
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=MLO raw 0x100 0x100 mmcpart 0;u-boot.img raw 0x300 0x1000 mmcpart 0
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_ram=kernel ram 0x80200000 0x4000000;fdt ram 0x80f80000 0x80000;ramdisk ram 0x81000000 0x4000000
dfu_bufsiz=0x10000
dnsip=192.0.2.2
dnsip2=192.0.2.3
eth1addr=b4:99:4c:0b:e4:e7
ethact=cpsw
ethaddr=b4:99:4c:0b:e4:e6
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtfile=undefined
fileaddr=88000000
filesize=12433
findfdt=if test $board_name = omap5_uevm; then setenv fdtfile omap5-uevm.dtb; fi; if test $board_name = dra7xx; then setenv fdtfile dra7-evm.dtb; fi;if test $board_name = dra72x; then setenv fdtfile dra72-evm.dtb; fi;if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
ipaddr=192.168.0.234
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} uEnv.txt
loadbootscript=fatload mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile};
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
mmcargs=setenv bootargs console=${console} ${optargs} vram=${vram} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from mmc${mmcdev} ...; run mmcargs; bootz ${loadaddr} - ${fdtaddr}; fi;fi;
mmcdev= 
mmcroot=/dev/mmcblk1p2 rw
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netmask=255.255.255.0
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramdisk_addr_r=0x88080000
rdaddr=0x88080000
scsidevs=0
serverip=192.168.0.1
soc=omap5
stderr=serial
stdin=serial
stdout=serial
usbtty=cdc_acm
vendor=ti
ver=U-Boot 2014.07-00076-g8f725ef (Oct 09 2014 - 11:19:18)
vram=16M
Environment size: 3211/131067 bytes
U-Boot# 
- 07:08:49 [INFO] Host: setenv bootargs ''${bootargs}' root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait '
- 07:08:49 [INFO] Target: 
setenv bootargs ''${bootargs}' root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait '
U-Boot# 
- 07:08:49 [INFO] Host: printenv
- 07:08:49 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=dra7xx
board_name=dra7xx
bootargs=console=ttyO0,115200n8 earlyprintk rootwait  ip=dhcp  root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait 
bootcmd=
bootdelay=1
bootdir=/boot
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=MLO raw 0x100 0x100 mmcpart 0;u-boot.img raw 0x300 0x1000 mmcpart 0
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_ram=kernel ram 0x80200000 0x4000000;fdt ram 0x80f80000 0x80000;ramdisk ram 0x81000000 0x4000000
dfu_bufsiz=0x10000
dnsip=192.0.2.2
dnsip2=192.0.2.3
eth1addr=b4:99:4c:0b:e4:e7
ethact=cpsw
ethaddr=b4:99:4c:0b:e4:e6
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtfile=undefined
fileaddr=88000000
filesize=12433
findfdt=if test $board_name = omap5_uevm; then setenv fdtfile omap5-uevm.dtb; fi; if test $board_name = dra7xx; then setenv fdtfile dra7-evm.dtb; fi;if test $board_name = dra72x; then setenv fdtfile dra72-evm.dtb; fi;if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
ipaddr=192.168.0.234
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} uEnv.txt
loadbootscript=fatload mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile};
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
mmcargs=setenv bootargs console=${console} ${optargs} vram=${vram} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from mmc${mmcdev} ...; run mmcargs; bootz ${loadaddr} - ${fdtaddr}; fi;fi;
mmcdev= 
mmcroot=/dev/mmcblk1p2 rw
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netmask=255.255.255.0
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramdisk_addr_r=0x88080000
rdaddr=0x88080000
scsidevs=0
serverip=192.168.0.1
soc=omap5
stderr=serial
stdin=serial
stdout=serial
usbtty=cdc_acm
vendor=ti
ver=U-Boot 2014.07-00076-g8f725ef (Oct 09 2014 - 11:19:18)
vram=16M
Environment size: 3266/131067 bytes
U-Boot# 
- 07:08:49 [INFO] Host: setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} - ${fdt_addr_r}; else bootz ${loadaddr} - ${fdt_addr_r}; bootm ${loadaddr} - ${fdt_addr_r}; fi'
- 07:08:50 [INFO] Target: 
setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} - ${fdt_addr_r}; else bootz ${loadaddr} - ${fdt_addr_r}; bootm ${loadaddr} - ${fdt_addr_r}; fi'
U-Boot# 
- 07:08:50 [INFO] Host: bdinfo
- 07:08:50 [INFO] Target: 
bdinfo
arch_number = 0x00000000
boot_params = 0x80000100
DRAM bank   = 0x00000000
-> start    = 0x80000000
-> size     = 0x60000000
eth0name    = cpsw
ethaddr     = b4:99:4c:0b:e4:e6
current eth = cpsw
ip_addr     = 192.168.0.234
baudrate    = 115200 bps
TLB addr    = 0xDFFF0000
relocaddr   = 0xDF744000
reloc off   = 0x5EF44000
irq_sp      = 0xDE723EE0
sp start    = 0xDE723ED0
U-Boot# 
- 07:08:50 [INFO] Host: mmc rescan
- 07:08:50 [INFO] Target: 
mmc rescan
U-Boot# 
- 07:08:50 [INFO] Host: fatwrite mmc ${mmcdev}:1 ${loadaddr} ws-calibrate.rules 4
- 07:08:50 [INFO] Target: 
fatwrite mmc ${mmcdev}:1 ${loadaddr} ws-calibrate.rules 4
writing ws-calibrate.rules
4 bytes written
U-Boot# 
- 07:08:50 [INFO] Host: boot
- 07:11:20 [ERROR] On command: boot waiting for boot.+?(?-mix:login:) >>> error: execution expired
- 07:11:20 [INFO] Target: 
boot
## Checking Image at 82000000 ...
Unknown image format!
Kernel image @ 0x82000000 [ 0x000000 - 0x5ec7d8 ]
## Flattened Device Tree blob at 88000000
   Booting using the fdt blob at 0x88000000
   Loading Device Tree to 8ffea000, end 8ffff432 ... OK
Starting kernel ...
URL:gtsystest.telogy.design.ti.com/vatf/tigtfarm07/tigtfarm07_vatf@dra7xx-evm1/tigtfarm0705_01_2015_07_08_32/files/session_iteration_1/test_1
Kernel hung.. retry! 1 2 Fri May 1 06:11:27 CDT 2015
GIVEN UP RETRIES (2)
