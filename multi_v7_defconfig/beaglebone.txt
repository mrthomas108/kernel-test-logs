- 06:57:16 [INFO] Starting target session
- 06:57:16 [INFO] Connected to beaglebone via serial 
- 06:57:16 [INFO] Host: 
- 06:57:18 [ERROR] On command:  waiting for (?-mix:login:) >>> error: execution expired
- 06:57:18 [INFO] Target: 

root@am335x-evm:/test# 
- 06:57:18 [INFO] Host: 
- 06:57:18 [INFO] Target: 

root@am335x-evm:/test# 
- 06:57:18 [INFO] Host: sync;poweroff
- 06:57:36 [INFO] Target: 
sync;poweroff


Broadcast message from root@am335x-evm (ttyO0) (Tue May 27 21:37:41 2014):



The system is going down for system halt NOW!


INIT: Switching to runlevel
INIT: root@am335x-evm:/test# Sending processes the TERM signal


INIT: Sending processes the KUIM SYSFS Node Not Found
Stopping Dropbear SSH server: stopped /usr/sbin/dropbear (pid 1159)
dropbear.
Stopping telnet daemon.
Stopping system message bus: Error opening /dev/fb0: No such file or directory
Stopping syslogd/klogd: stopped syslogd (pid 1171)
stopped klogd (pid 1174)
done
Stopping thttpd.
ALSA: Storing mixer settings...
/usr/sbin/alsactl: save_state:1580: No soundcards found...
Deconfiguring network interfaces... done.
Stopping Lighttpd Web Server: stopped /usr/sbin/lighttpd (pid 1187)
lighttpd.
Stopping Matrix GUI applicationstart-stop-daemon: warning: killing process 1195: No such process
.
***************************************************************
***************************************************************
NOTICE: This file system contains the followin GPLv3 packages:
	binutils-symlinks
	binutils
	gdbserver

If you do not wish to distribute GPLv3 components please remove
the above packages prior to distribution.  This can be done using
the opkg remove command.  i.e.:
    opkg remove <package>
Where <package> is the name printed in the list above

NOTE: If the package is a dependency of another package you
      will be notified of the dependent packages.  You should
      use the --force-removal-of-dependent-packages option to
      also remove the dependent packages as well
***************************************************************
***************************************************************
Sending all processes the TERM signal...
Sending all processes the KILL signal...
Unmounting remote filesystems...
Deactivating swap...
Unmounting local filesystems...
[ 1274.882742] FAT-fs (mmcblk0p1): error, invalid access to FAT (entry 0xffbfffff)
[ 1274.890759] FAT-fs (mmcblk0p1): Filesystem has been set read-only
[ 1277.247266] reboot: System halted

- 06:57:38 [INFO] Disconnected serial from beaglebone
- 06:57:38 [INFO] Connected to beaglebone via serial 
- 06:57:38 [INFO] Host: 
- 06:57:39 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 06:57:39 [INFO] Target: 

U-Boot SPL 2013.10-g78d8ebd (Mar 06 2014 - 13:09:07)

- 06:57:39 [INFO] Host: 
- 06:57:39 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 06:57:39 [INFO] Target: 
reading args
spl: error reading image args, err - -1
reading u-boot.img
reading u-boot.img

- 06:57:39 [INFO] Host: 
- 06:57:40 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 06:57:40 [INFO] Target: 


U-Boot 2013.10-g78d8ebd (Mar 06 2014 - 13:09:07)

I2C:   ready
DRAM:  256 MiB
NAND:  
- 06:57:40 [INFO] Host: 
- 06:57:40 [INFO] Target: 
0 MiB
MMC:   OMAP SD/MMC: 0, OMAP SD/MMC: 1
*** Error - No Valid Environment Area found
*** Warning - bad CRC, using default environment

Net:   <ethaddr> not set. Validating first E-fuse MAC
cpsw, usb_ether
Hit any key to stop autoboot:  3  0 
U-Boot# 
- 06:57:40 [INFO] Host: 
- 06:57:41 [INFO] Target: 

U-Boot# 
- 06:57:41 [INFO] Host: version
- 06:57:41 [INFO] Target: 
version

U-Boot 2013.10-g78d8ebd (Mar 06 2014 - 13:09:07)
arm-linux-gnueabihf-gcc (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 4.7.3 20130226 (prerelease)
GNU ld (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 2.23.1
U-Boot# 
- 06:57:41 [INFO] Host: setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait '
- 06:57:42 [INFO] Target: 
setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait '
U-Boot# 
- 06:57:42 [INFO] Host: setenv bootcmd  ''
- 06:57:42 [INFO] Target: 
setenv bootcmd  ''
U-Boot# 
- 06:57:42 [INFO] Host: setenv autoload 'no'
- 06:57:43 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 06:57:43 [INFO] Host: setenv serverip '192.168.0.1'
- 06:57:43 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 06:57:43 [INFO] Host: printenv
- 06:57:44 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A335BONE
board_rev=00A6
boot_fdt=try
boot_targets= mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait 
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootcmd_usb=setenv devnum 0; run usb_boot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 100 100;u-boot.img.raw mmc 300 400;spl-os-args.raw mmc 80 80;spl-os-image.raw mmc 900 2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=NAND.SPL part 0 1;NAND.SPL.backup1 part 0 2;NAND.SPL.backup2 part 0 3;NAND.SPL.backup3 part 0 4;NAND.u-boot-spl-os part 0 5;NAND.u-boot part 0 6;NAND.u-boot-env part 0 7;NAND.u-boot-env.backup1 part 0 8;NAND.kernel part 0 9;NAND.rootfs part 0 10
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
eth1addr=78:c5:e5:d5:61:69
ethact=cpsw
ethaddr=78:c5:e5:d5:61:68
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usb_boot=setenv devtype usb; run usb_init; if usb dev 0; then run usbargs;run scan_boot; bootz ${loadaddr} - ${fdtaddr}; fi
usb_init=usb start 0;
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbnet_devaddr=78:c5:e5:d5:61:69
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2013.10-g78d8ebd (Mar 06 2014 - 13:09:07)

Environment size: 5439/131067 bytes
U-Boot# 
- 06:57:44 [INFO] Host: printenv
- 06:57:44 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A335BONE
board_rev=00A6
boot_fdt=try
boot_targets= mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait 
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootcmd_usb=setenv devnum 0; run usb_boot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 100 100;u-boot.img.raw mmc 300 400;spl-os-args.raw mmc 80 80;spl-os-image.raw mmc 900 2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=NAND.SPL part 0 1;NAND.SPL.backup1 part 0 2;NAND.SPL.backup2 part 0 3;NAND.SPL.backup3 part 0 4;NAND.u-boot-spl-os part 0 5;NAND.u-boot part 0 6;NAND.u-boot-env part 0 7;NAND.u-boot-env.backup1 part 0 8;NAND.kernel part 0 9;NAND.rootfs part 0 10
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
eth1addr=78:c5:e5:d5:61:69
ethact=cpsw
ethaddr=78:c5:e5:d5:61:68
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usb_boot=setenv devtype usb; run usb_init; if usb dev 0; then run usbargs;run scan_boot; bootz ${loadaddr} - ${fdtaddr}; fi
usb_init=usb start 0;
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbnet_devaddr=78:c5:e5:d5:61:69
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2013.10-g78d8ebd (Mar 06 2014 - 13:09:07)

Environment size: 5439/131067 bytes
U-Boot# 
- 06:57:44 [INFO] Host: setenv bootargs ''${bootargs}' ip=dhcp '
- 06:57:45 [INFO] Target: 
setenv bootargs ''${bootargs}' ip=dhcp '
U-Boot# 
- 06:57:45 [INFO] Host: setenv ipaddr dhcp
- 06:57:45 [INFO] Target: 
setenv ipaddr dhcp
U-Boot# 
- 06:57:45 [INFO] Host: dhcp
- 06:57:47 [INFO] Target: 
dhcp
link up on port 0, speed 100, full duplex
BOOTP broadcast 1
DHCP client bound to address 192.168.0.55
U-Boot# 
- 06:57:47 [INFO] Host: setenv serverip '192.168.0.1'
- 06:57:47 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 06:57:47 [INFO] Host: tftp ${loadaddr} 192.168.0.1:vatf_beaglebone/395694fa45993dc9c9ec7c9a20c98622
- 06:57:48 [INFO] Target: 
tftp ${loadaddr} 192.168.0.1:vatf_beaglebone/395694fa45993dc9c9ec7c9a20c98622
link up on port 0, speed 100, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.55
Filename 'vatf_beaglebone/395694fa45993dc9c9ec7c9a20c98622'.
Load address: 0x80200000
Loading: *#################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 #########
	 5.6 MiB/s
done
Bytes transferred = 4898960 (4ac090 hex)
U-Boot# 
- 06:57:48 [INFO] Host: tftp ${fdtaddr} 192.168.0.1:vatf_beaglebone/a05a883a7028b3915936d7b8b2f3d43a
- 06:57:49 [INFO] Target: 
tftp ${fdtaddr} 192.168.0.1:vatf_beaglebone/a05a883a7028b3915936d7b8b2f3d43a
link up on port 0, speed 100, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.55
Filename 'vatf_beaglebone/a05a883a7028b3915936d7b8b2f3d43a'.
Load address: 0x80f80000
Loading: *##
	 4.5 MiB/s
done
Bytes transferred = 28422 (6f06 hex)
U-Boot# 
- 06:57:49 [INFO] Host: printenv
- 06:57:49 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A335BONE
board_rev=00A6
boot_fdt=try
boot_targets= mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait ip=dhcp
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootcmd_usb=setenv devnum 0; run usb_boot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 100 100;u-boot.img.raw mmc 300 400;spl-os-args.raw mmc 80 80;spl-os-image.raw mmc 900 2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=NAND.SPL part 0 1;NAND.SPL.backup1 part 0 2;NAND.SPL.backup2 part 0 3;NAND.SPL.backup3 part 0 4;NAND.u-boot-spl-os part 0 5;NAND.u-boot part 0 6;NAND.u-boot-env part 0 7;NAND.u-boot-env.backup1 part 0 8;NAND.kernel part 0 9;NAND.rootfs part 0 10
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
dnsip=192.0.2.2
dnsip2=192.0.2.3
eth1addr=78:c5:e5:d5:61:69
ethact=cpsw
ethaddr=78:c5:e5:d5:61:68
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
fileaddr=80f80000
filesize=6f06
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
ipaddr=192.168.0.55
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
netmask=255.255.255.0
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usb_boot=setenv devtype usb; run usb_init; if usb dev 0; then run usbargs;run scan_boot; bootz ${loadaddr} - ${fdtaddr}; fi
usb_init=usb start 0;
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbnet_devaddr=78:c5:e5:d5:61:69
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2013.10-g78d8ebd (Mar 06 2014 - 13:09:07)

Environment size: 5589/131067 bytes
U-Boot# 
- 06:57:49 [INFO] Host: setenv bootargs ''${bootargs}' root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait '
- 06:57:50 [INFO] Target: 
setenv bootargs ''${bootargs}' root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait '
U-Boot# 
- 06:57:50 [INFO] Host: printenv
- 06:57:51 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A335BONE
board_rev=00A6
boot_fdt=try
boot_targets= mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait ip=dhcp root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootcmd_usb=setenv devnum 0; run usb_boot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 100 100;u-boot.img.raw mmc 300 400;spl-os-args.raw mmc 80 80;spl-os-image.raw mmc 900 2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=NAND.SPL part 0 1;NAND.SPL.backup1 part 0 2;NAND.SPL.backup2 part 0 3;NAND.SPL.backup3 part 0 4;NAND.u-boot-spl-os part 0 5;NAND.u-boot part 0 6;NAND.u-boot-env part 0 7;NAND.u-boot-env.backup1 part 0 8;NAND.kernel part 0 9;NAND.rootfs part 0 10
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
dnsip=192.0.2.2
dnsip2=192.0.2.3
eth1addr=78:c5:e5:d5:61:69
ethact=cpsw
ethaddr=78:c5:e5:d5:61:68
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
fileaddr=80f80000
filesize=6f06
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
ipaddr=192.168.0.55
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
netmask=255.255.255.0
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usb_boot=setenv devtype usb; run usb_init; if usb dev 0; then run usbargs;run scan_boot; bootz ${loadaddr} - ${fdtaddr}; fi
usb_init=usb start 0;
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbnet_devaddr=78:c5:e5:d5:61:69
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2013.10-g78d8ebd (Mar 06 2014 - 13:09:07)

Environment size: 5637/131067 bytes
U-Boot# 
- 06:57:51 [INFO] Host: setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} - ${fdtaddr}; else bootz ${loadaddr} - ${fdtaddr}; bootm ${loadaddr} - ${fdtaddr}; fi'
- 06:57:51 [INFO] Target: 
setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} - ${fdtaddr}; else bootz ${loadaddr} - ${fdtaddr}; bootm ${loadaddr} - ${fdtaddr}; fi'
U-Boot# 
- 06:57:51 [INFO] Host: bdinfo
- 06:57:52 [INFO] Target: 
bdinfo
arch_number = 0x00000E05
boot_params = 0x80000100
DRAM bank   = 0x00000000
-> start    = 0x80000000
-> size     = 0x10000000
eth0name    = cpsw
ethaddr     = 78:c5:e5:d5:61:68
eth1name    = usb_ether
eth1addr    = 78:c5:e5:d5:61:69
current eth = cpsw
ip_addr     = 192.168.0.55
baudrate    = 115200 bps
TLB addr    = 0x8FFF0000
relocaddr   = 0x8F74E000
reloc off   = 0x0EF4E000
irq_sp      = 0x8F32DF38
sp start    = 0x8F32DF28
U-Boot# 
- 06:57:52 [INFO] Host: boot
- 07:00:22 [ERROR] On command: boot waiting for (?-mix:login:) >>> error: execution expired
- 07:00:22 [INFO] Target: 
boot

## Checking Image at 80200000 ...
Unknown image format!
Kernel image @ 0x80200000 [ 0x000000 - 0x4ac090 ]
## Flattened Device Tree blob at 80f80000
   Booting using the fdt blob at 0x80f80000
   Loading Device Tree to 8f322000, end 8f32bf05 ... OK

Starting kernel ...

[    0.000000] Booting Linux on physical CPU 0x0
[    0.000000] Linux version 3.15.0-rc7-next-20140602-00002-g1f9f2d3 (nmenon@kahuna) (gcc version 4.6.3 (Ubuntu/Linaro 4.6.3-1ubuntu5) ) #1 SMP Mon Jun 2 05:54:16 CDT 2014
[    0.000000] CPU: ARMv7 Processor [413fc082] revision 2 (ARMv7), cr=10c5387d
[    0.000000] CPU: PIPT / VIPT nonaliasing data cache, VIPT aliasing instruction cache
[    0.000000] Machine model: TI AM335x BeagleBone
[    0.000000] cma: CMA: reserved 64 MiB at 8b000000
[    0.000000] Memory policy: Data cache writeback
[    0.000000] CPU: All CPU(s) started in SVC mode.
[    0.000000] AM335X ES1.0 (sgx neon )
[    0.000000] PERCPU: Embedded 8 pages/cpu @cfcb8000 s8448 r8192 d16128 u32768
[    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 64768
[    0.000000] Kernel command line: console=ttyO0,115200n8 earlyprintk rootwait ip=dhcp root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait
[    0.000000] PID hash table entries: 1024 (order: 0, 4096 bytes)
[    0.000000] Dentry cache hash table entries: 32768 (order: 5, 131072 bytes)
[    0.000000] Inode-cache hash table entries: 16384 (order: 4, 65536 bytes)
[    0.000000] Memory: 182244K/261120K available (6352K kernel code, 892K rwdata, 2556K rodata, 652K init, 303K bss, 78876K reserved, 0K highmem)
[    0.000000] Virtual kernel memory layout:
[    0.000000]     vector  : 0xffff0000 - 0xffff1000   (   4 kB)
[    0.000000]     fixmap  : 0xffc00000 - 0xffe00000   (2048 kB)
[    0.000000]     vmalloc : 0xd0800000 - 0xff000000   ( 744 MB)
[    0.000000]     lowmem  : 0xc0000000 - 0xd0000000   ( 256 MB)
[    0.000000]     pkmap   : 0xbfe00000 - 0xc0000000   (   2 MB)
[    0.000000]     modules : 0xbf000000 - 0xbfe00000   (  14 MB)
[    0.000000]       .text : 0xc0208000 - 0xc0abb2ac   (8909 kB)
[    0.000000]       .init : 0xc0abc000 - 0xc0b5f100   ( 653 kB)
[    0.000000]       .data : 0xc0b60000 - 0xc0c3f040   ( 893 kB)
[    0.000000]        .bss : 0xc0c3f048 - 0xc0c8ae18   ( 304 kB)
[    0.000000] SLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=1, Nodes=1
[    0.000000] Hierarchical RCU implementation.
[    0.000000] 	RCU restricting CPUs from NR_CPUS=8 to nr_cpu_ids=1.
[    0.000000] RCU: Adjusting geometry for rcu_fanout_leaf=16, nr_cpu_ids=1
[    0.000000] NR_IRQS:16 nr_irqs:16 16
[    0.000000] IRQ: Found an INTC at 0xfa200000 (revision 5.0) with 128 interrupts
[    0.000000] Total of 128 interrupts on 1 active controller
[    0.000000] OMAP clockevent source: timer2 at 24000000 Hz
[    0.000014] sched_clock: 32 bits at 24MHz, resolution 41ns, wraps every 178956969942ns
[    0.000039] OMAP clocksource: timer1 at 24000000 Hz
[    0.000268] Console: colour dummy device 80x30
[    0.000305] Calibrating delay loop... 717.61 BogoMIPS (lpj=1794048)
[    0.059334] pid_max: default: 32768 minimum: 301
[    0.059510] Mount-cache hash table entries: 1024 (order: 0, 4096 bytes)
[    0.059523] Mountpoint-cache hash table entries: 1024 (order: 0, 4096 bytes)
[    0.060240] CPU: Testing write buffer coherency: ok
[    0.060614] CPU0: thread -1, cpu 0, socket -1, mpidr 0
[    0.060720] Setting up static identity map for 0x808009d0 - 0x80800a68
[    0.062911] Brought up 1 CPUs
[    0.062930] SMP: Total of 1 processors activated.
[    0.062940] CPU: All CPU(s) started in SVC mode.
[    0.063663] devtmpfs: initialized
[    0.068205] VFP support v0.3: implementor 41 architecture 3 part 30 variant c rev 3
[    0.080477] omap_hwmod: tptc0 using broken dt data from edma
[    0.080644] omap_hwmod: tptc1 using broken dt data from edma
[    0.080770] omap_hwmod: tptc2 using broken dt data from edma
[    0.085634] omap_hwmod: debugss: _wait_target_disable failed
[    0.141620] pinctrl core: initialized pinctrl subsystem
[    0.142253] regulator-dummy: no parameters
[    0.157623] NET: Registered protocol family 16
[    0.158061] DMA: failed to allocate 256 KiB pool for atomic coherent allocation
[    0.160421] cpuidle: using governor ladder
[    0.160445] cpuidle: using governor menu
[    0.168643] platform 49000000.edma: alias fck already exists
[    0.168676] platform 49000000.edma: alias fck already exists
[    0.168692] platform 49000000.edma: alias fck already exists
[    0.169673] OMAP GPIO hardware version 0.1
[    0.177732] No ATAGs?
[    0.177768] hw-breakpoint: debug architecture 0x4 unsupported.
[    0.178820] EXYNOS: PMU not supported
[    0.181222] Serial: AMBA PL011 UART driver
[    0.203732] edma-dma-engine edma-dma-engine.0: TI EDMA DMA engine driver
[    0.204615] vmmcsd_fixed: 3300 mV 
[    0.206945] vgaarb: loaded
[    0.207799] SCSI subsystem initialized
[    0.208606] usbcore: registered new interface driver usbfs
[    0.208699] usbcore: registered new interface driver hub
[    0.208870] usbcore: registered new device driver usb
[    0.209664] omap_i2c 44e0b000.i2c: could not find pctldev for node /pinmux@44e10800/pinmux_i2c0_pins, deferring probe
[    0.209694] platform 44e0b000.i2c: Driver omap_i2c requests probe deferral
[    0.209944] Linux video capture interface: v2.00
[    0.210009] pps_core: LinuxPPS API ver. 1 registered
[    0.210019] pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    0.210056] PTP clock support registered
[    0.210152] EDAC MC: Ver: 3.0.0
[    0.211239] Advanced Linux Sound Architecture Driver Initialized.
[    0.212814] Switched to clocksource timer1
[    0.226250] NET: Registered protocol family 2
[    0.226944] TCP established hash table entries: 2048 (order: 1, 8192 bytes)
[    0.226986] TCP bind hash table entries: 2048 (order: 2, 16384 bytes)
[    0.227032] TCP: Hash tables configured (established 2048 bind 2048)
[    0.227116] TCP: reno registered
[    0.227133] UDP hash table entries: 256 (order: 1, 8192 bytes)
[    0.227159] UDP-Lite hash table entries: 256 (order: 1, 8192 bytes)
[    0.227399] NET: Registered protocol family 1
[    0.227952] RPC: Registered named UNIX socket transport module.
[    0.227969] RPC: Registered udp transport module.
[    0.227977] RPC: Registered tcp transport module.
[    0.227986] RPC: Registered tcp NFSv4.1 backchannel transport module.
[    0.229008] hw perfevents: enabled with ARMv7 Cortex-A8 PMU driver, 5 counters available
[    0.231105] futex hash table entries: 256 (order: 2, 16384 bytes)
[    0.246847] squashfs: version 4.0 (2009/01/31) Phillip Lougher
[    0.247982] NFS: Registering the id_resolver key type
[    0.248068] Key type id_resolver registered
[    0.248078] Key type id_legacy registered
[    0.248157] msgmni has been set to 483
[    0.249086] Block layer SCSI generic (bsg) driver version 0.4 loaded (major 249)
[    0.249115] io scheduler noop registered
[    0.249130] io scheduler deadline registered
[    0.249377] io scheduler cfq registered (default)
[    0.251133] pinctrl-single 44e10800.pinmux: 142 pins at pa f9e10800 size 568
[    0.332025] Serial: 8250/16550 driver, 4 ports, IRQ sharing disabled
[    0.334562] Serial: IMX driver
[    0.334886] msm_serial: driver initialized
[    0.335442] omap_uart 44e09000.serial: no wakeirq for uart0
[    0.335646] 44e09000.serial: ttyO0 at MMIO 0x44e09000 (irq = 88, base_baud = 3000000) is a OMAP UART0
[    1.003593] console [ttyO0] enabled
[    1.007909] STMicroelectronics ASC driver initialized
[    1.013994] serial: Freescale lpuart driver
[    1.018652] [drm] Initialized drm 1.1.0 20060810
[    1.029830] loop: module loaded
[    1.037411] CAN device driver interface
[    1.043373] pegasus: v0.9.3 (2013/04/25), Pegasus/Pegasus II USB Ethernet driver
[    1.051284] usbcore: registered new interface driver pegasus
[    1.057340] usbcore: registered new interface driver asix
[    1.063098] usbcore: registered new interface driver ax88179_178a
[    1.069570] usbcore: registered new interface driver cdc_ether
[    1.075803] usbcore: registered new interface driver smsc75xx
[    1.081945] usbcore: registered new interface driver smsc95xx
[    1.088057] usbcore: registered new interface driver net1080
[    1.094075] usbcore: registered new interface driver cdc_subset
[    1.100373] usbcore: registered new interface driver zaurus
[    1.106375] usbcore: registered new interface driver cdc_ncm
[    1.112382] ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    1.119252] ehci-pci: EHCI PCI platform driver
[    1.124003] ehci-platform: EHCI generic platform driver
[    1.129687] ehci-omap: OMAP-EHCI Host Controller driver
[    1.135314] ehci-orion: EHCI orion driver
[    1.139651] SPEAr-ehci: EHCI SPEAr driver
[    1.143991] tegra-ehci: Tegra EHCI driver
[    1.148345] ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
[    1.154889] ohci-pci: OHCI PCI platform driver
[    1.159651] ohci-platform: OHCI generic platform driver
[    1.165279] ohci-omap3: OHCI OMAP3 driver
[    1.169623] SPEAr-ohci: OHCI SPEAr driver
[    1.174613] usbcore: registered new interface driver usb-storage
[    1.182850] mousedev: PS/2 mouse device common for all mice
[    1.191241] i2c /dev entries driver
[    1.195976] usbcore: registered new interface driver uvcvideo
[    1.202048] USB Video Class driver (1.1.1)
[    1.206365] gspca_main: v2.14.0 registered
[    1.212926] sdhci: Secure Digital Host Controller Interface driver
[    1.219435] sdhci: Copyright(c) Pierre Ossman
[    1.225318] omap_hsmmc 48060000.mmc: unable to get vmmc regulator -517
[    1.232390] platform 48060000.mmc: Driver omap_hsmmc requests probe deferral
[    1.240163] Synopsys Designware Multimedia Card Interface Driver
[    1.246952] sdhci-pltfm: SDHCI platform and OF driver helper
[    1.253806] usbcore: registered new interface driver usbhid
[    1.259685] usbhid: USB HID core driver
[    1.268503] TCP: cubic registered
[    1.272011] NET: Registered protocol family 17
[    1.276757] can: controller area network core (rev 20120528 abi 9)
[    1.283382] NET: Registered protocol family 29
[    1.288074] can: raw protocol (rev 20120528)
[    1.292559] can: broadcast manager protocol (rev 20120528 t)
[    1.298529] can: netlink gateway (rev 20130117) max_hops=1
[    1.304930] Key type dns_resolver registered
[    1.309730] omap_voltage_late_init: Voltage driver support not added
[    1.317184] ThumbEE CPU extension supported.
[    1.321771] Registering SWP/SWPB emulation handler
[    1.331502] omap_i2c 44e0b000.i2c: bus 0 rev0.11 at 400 kHz
[    1.339038] omap_hsmmc 48060000.mmc: unable to get vmmc regulator -517
[    1.346119] platform 48060000.mmc: Driver omap_hsmmc requests probe deferral
[    1.407840] davinci_mdio 4a101000.mdio: davinci mdio revision 1.6
[    1.414277] davinci_mdio 4a101000.mdio: detected phy mask fffffffe
[    1.421653] libphy: 4a101000.mdio: probed
[    1.425937] davinci_mdio 4a101000.mdio: phy[0]: device 4a101000.mdio:00, driver unknown
[    1.435553] cpsw 4a100000.ethernet: Detected MACID = 78:c5:e5:d5:61:68
[    1.444005] drivers/rtc/hctosys.c: unable to open rtc device (rtc0)
[    1.455526] net eth0: initializing cpsw version 1.12 (0)
[    1.464827] omap_hsmmc 48060000.mmc: unable to get vmmc regulator -517
[    1.471964] platform 48060000.mmc: Driver omap_hsmmc requests probe deferral
[    1.528233] net eth0: phy found : id is : 0x7c0f1
[    1.533291] libphy: PHY 4a101000.mdio:01 not found
[    1.538340] net eth0: phy 4a101000.mdio:01 not found on slave 1
[    4.528446] cpsw 4a100000.ethernet eth0: Link is Up - 100Mbps/Full - flow control rx/tx
[    4.547827] Sending DHCP requests ., OK
[    4.613279] IP-Config: Got DHCP answer from 192.168.0.1, my address is 192.168.0.55
[    4.621532] IP-Config: Complete:
[    4.624972]      device=eth0, hwaddr=78:c5:e5:d5:61:68, ipaddr=192.168.0.55, mask=255.255.255.0, gw=192.168.0.1
[    4.635573]      host=192.168.0.55, domain=tim.com, nis-domain=(none)
[    4.642344]      bootserver=192.168.0.1, rootserver=192.168.0.1, rootpath=
[    4.649385]      nameserver0=192.0.2.2, nameserver1=192.0.2.3
[    4.655745] vmmcsd_fixed: disabling
[    4.659553] ALSA device list:
[    4.662662]   No soundcards found.
[    4.667289] Waiting for root device /dev/mmcblk0p2...

