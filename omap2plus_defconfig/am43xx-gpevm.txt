- 06:33:29 [INFO] Starting target session
- 06:33:29 [INFO] Connected to am43xx-gpevm via serial 
- 06:33:29 [INFO] Host: #check prompt
- 06:33:32 [ERROR] On command: #check prompt waiting for #check prompt.+?(?-mix:((?m-ix:.*login:)|[Pp]assword)) >>> error: execution expired
- 06:33:32 [INFO] Target: 
#check prompt
root@am437x-evm:/test# 
- 06:33:32 [INFO] Host: #check prompt
- 06:33:33 [INFO] Target: 
#check prompt
root@am437x-evm:/test# 
- 06:33:33 [INFO] Host: sync;poweroff
- 06:33:42 [INFO] Target: 
sync;poweroff
INIT
INIT: SeUIM SYSFS Node Not Found
Stopping Dropbear SSH server: stopped /usr/sbin/dropbear (pid 509)
dropbear.
Stopping telnet daemon.
Stopping system message bus: dbus.
hwclock: can't open '/dev/misc/rtc': No such file or directory
Error opening /dev/fb0: No such file or directory
Stopping syslogd/klogd: stopped syslogd (pid 544)
stopped klogd (pid 547)
done
Stopping thttpd.
Stopping Weston
stopping statd: done
ALSA: Storing mixer settings...
/usr/sbin/alsactl: save_state:1590: No soundcards found...
Stopping rpcbind daemon...
done.
Stopping Lighttpd Web Server: stopped /usr/sbin/lighttpd (pid 560)
lighttpd.
Deconfiguring network interfaces... done.
Stopping Matrix GUI applicationstart-stop-daemon: warning: killing process 566: No such process
***************************************************************
***************************************************************
NOTICE: This file system contains the followin GPLv3 packages:
	binutils
	elfutils
	gdbserver
	libdw1
	libelf1
If you do not wish to distribute GPLv3 components please remove
the above packages prior to distribution.  This can be done using
the opkg remove command.  i.e.:
    opkg remove <package>
Where <package> is the name printed in the list above
NOTE: If the package is a dependency of another package you
      will be notified of the dependent packages.  You should
      use the --force-removal-of-dependent-packages option to
      also remove the dependent packages as well
***************************************************************
***************************************************************
Sending all processes the TERM signal...
Sending all processes the KILL signal...
Unmounting remote filesystems...
Deactivating swap...
Unmounting local filesystems...
[11058.908477] EXT4-fs (mmcblk0p2): re-mounted. Opts: data=ordered
[11061.092158] reboot: System halted
- 06:33:42 [INFO] Disconnected serial from am43xx-gpevm
- 06:33:43 [INFO] Connected to am43xx-gpevm via serial 
- 06:33:43 [INFO] Host: 
- 06:33:43 [ERROR] On command:  waiting for (?m-ix:U-Boot\s*#) >>> error: execution expired
- 06:33:43 [INFO] Target: 
- 06:33:43 [INFO] Host: 
- 06:33:44 [ERROR] On command:  waiting for (?m-ix:U-Boot\s*#) >>> error: execution expired
- 06:33:44 [INFO] Target: 
U-Boot SPL 2014.07-g8f725ef (Oct 12 2014 - 06:29:01)
- 06:33:44 [INFO] Host: 
- 06:33:44 [ERROR] On command:  waiting for (?m-ix:U-Boot\s*#) >>> error: execution expired
- 06:33:44 [INFO] Target: 
SPL: Please implement spl_start_uboot() for your board
SPL: Direct Linux boot not active!
reading u-boot.img
reading u-boot.img
U-Boot 2014.07-g8f725ef (Oct 12 2014 - 06:29:01)
I2C:   
- 06:33:44 [INFO] Host: 
- 06:33:45 [ERROR] On command:  waiting for (?m-ix:U-Boot\s*#) >>> error: execution expired
- 06:33:45 [INFO] Target: 
ready
DRAM:  1 GiB
NAND:  512 MiB
MMC:   OMAP SD/MMC: 0, OMAP SD/MMC: 1
Using default environment
- 06:33:45 [INFO] Host: 
- 06:33:45 [INFO] Target: 
Net:   <ethaddr> not set. Validating first E-fuse MAC
cpsw
Hit any key to stop autoboot:  1  0 
U-Boot# 
U-Boot# 
- 06:33:45 [INFO] Host: 
- 06:33:46 [INFO] Target: 
U-Boot# 
- 06:33:46 [INFO] Host: version
- 06:33:46 [INFO] Target: 
version
U-Boot 2014.07-g8f725ef (Oct 12 2014 - 06:29:01)
arm-linux-gnueabihf-gcc (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 4.7.3 20130226 (prerelease)
GNU ld (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 2.23.1
U-Boot# 
- 06:33:46 [INFO] Host: setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait '
- 06:33:47 [INFO] Target: 
setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait '
U-Boot# 
- 06:33:47 [INFO] Host: setenv bootcmd  ''
- 06:33:47 [INFO] Target: 
setenv bootcmd  ''
U-Boot# 
- 06:33:47 [INFO] Host: setenv autoload 'no'
- 06:33:48 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 06:33:48 [INFO] Host: setenv serverip '192.168.0.1'
- 06:33:48 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 06:33:48 [INFO] Host: printenv
- 06:33:49 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am43xx
board_name=AM43__GP
board_rev=1.2A
bootargs=console=ttyO0,115200n8 earlyprintk rootwait 
bootcmd=
bootdelay=1
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=MLO raw 0x100 0x100 mmcpart 0;u-boot.img raw 0x300 0x1000 mmcpart 0
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_ram=kernel ram 0x80200000 0x4000000;fdt ram 0x80f80000 0x80000;ramdisk ram 0x81000000 0x4000000
dfu_bufsiz=0x10000
eth1addr=34:b1:f7:31:60:9b
ethact=cpsw
ethaddr=34:b1:f7:31:60:99
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtfile=undefined
findfdt=if test $board_name = AM43EPOS; then setenv fdtfile am43x-epos-evm.dtb; fi; if test $board_name = AM43__GP; then setenv fdtfile am437x-gp-evm.dtb; fi; if test $board_name = AM43__SK; then setenv fdtfile am437x-sk-evm.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree; fi; 
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=load ${devtype} ${devnum} ${loadaddr} ${bootenv}
loadfdt=load ${devtype} ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load ${devtype} ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load ${devtype} ${devnum} ${rdaddr} ramdisk.gz
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; setenv devnum ${mmcdev}; setenv devtype mmc; if mmc rescan; then echo SD/MMC found on device ${devnum};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from mmc${mmcdev} ...; run mmcargs; bootz ${loadaddr} - ${fdtaddr}; fi;fi;
mmcdev=0
mmcroot=/dev/mmcblk0p2 rw
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:256k(NAND.SPL),256k(NAND.SPL.backup1),256k(NAND.SPL.backup2),256k(NAND.SPL.backup3),512k(NAND.u-boot-spl-os),1m(NAND.u-boot),256k(NAND.u-boot-env),256k(NAND.u-boot-env.backup1),7m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,4096
nandrootfstype=ubifs rootwait=1
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
serverip=192.168.0.1
soc=am33xx
stderr=serial
stdin=serial
stdout=serial
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbboot=setenv devnum ${usbdev}; setenv devtype usb; usb start ${usbdev}; if usb dev ${usbdev}; then if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from usb ${usbdev}...; run usbargs;bootz ${loadaddr} - ${fdtaddr}; fi;fi
usbdev=0
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2014.07-g8f725ef (Oct 12 2014 - 06:29:01)
Environment size: 3704/65532 bytes
U-Boot# 
- 06:33:49 [INFO] Host: printenv
- 06:33:49 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am43xx
board_name=AM43__GP
board_rev=1.2A
bootargs=console=ttyO0,115200n8 earlyprintk rootwait 
bootcmd=
bootdelay=1
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=MLO raw 0x100 0x100 mmcpart 0;u-boot.img raw 0x300 0x1000 mmcpart 0
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_ram=kernel ram 0x80200000 0x4000000;fdt ram 0x80f80000 0x80000;ramdisk ram 0x81000000 0x4000000
dfu_bufsiz=0x10000
eth1addr=34:b1:f7:31:60:9b
ethact=cpsw
ethaddr=34:b1:f7:31:60:99
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtfile=undefined
findfdt=if test $board_name = AM43EPOS; then setenv fdtfile am43x-epos-evm.dtb; fi; if test $board_name = AM43__GP; then setenv fdtfile am437x-gp-evm.dtb; fi; if test $board_name = AM43__SK; then setenv fdtfile am437x-sk-evm.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree; fi; 
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=load ${devtype} ${devnum} ${loadaddr} ${bootenv}
loadfdt=load ${devtype} ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load ${devtype} ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load ${devtype} ${devnum} ${rdaddr} ramdisk.gz
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; setenv devnum ${mmcdev}; setenv devtype mmc; if mmc rescan; then echo SD/MMC found on device ${devnum};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from mmc${mmcdev} ...; run mmcargs; bootz ${loadaddr} - ${fdtaddr}; fi;fi;
mmcdev=0
mmcroot=/dev/mmcblk0p2 rw
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:256k(NAND.SPL),256k(NAND.SPL.backup1),256k(NAND.SPL.backup2),256k(NAND.SPL.backup3),512k(NAND.u-boot-spl-os),1m(NAND.u-boot),256k(NAND.u-boot-env),256k(NAND.u-boot-env.backup1),7m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,4096
nandrootfstype=ubifs rootwait=1
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
serverip=192.168.0.1
soc=am33xx
stderr=serial
stdin=serial
stdout=serial
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbboot=setenv devnum ${usbdev}; setenv devtype usb; usb start ${usbdev}; if usb dev ${usbdev}; then if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from usb ${usbdev}...; run usbargs;bootz ${loadaddr} - ${fdtaddr}; fi;fi
usbdev=0
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2014.07-g8f725ef (Oct 12 2014 - 06:29:01)
Environment size: 3704/65532 bytes
U-Boot# 
- 06:33:49 [INFO] Host: setenv bootargs ''${bootargs}' ip=dhcp '
- 06:33:50 [INFO] Target: 
setenv bootargs ''${bootargs}' ip=dhcp '
U-Boot# 
- 06:33:50 [INFO] Host: setenv serverip '192.168.0.1'
- 06:33:50 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 06:33:50 [INFO] Host: setenv ipaddr dhcp
- 06:33:51 [INFO] Target: 
setenv ipaddr dhcp
U-Boot# 
- 06:33:51 [INFO] Host: setenv autoload 'no'
- 06:33:51 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 06:33:51 [INFO] Host: dhcp
- 06:33:53 [INFO] Target: 
dhcp
link up on port 0, speed 1000, full duplex
BOOTP broadcast 1
DHCP client bound to address 192.168.0.80
U-Boot# 
- 06:33:53 [INFO] Host: setenv serverip '192.168.0.1'
- 06:33:53 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 06:33:53 [INFO] Host: tftp ${loadaddr} 192.168.0.1:vatf_am43xx-gpevm/9fbe6863091fa7f19035e382c7bc9ca5
- 06:33:54 [INFO] Target: 
tftp ${loadaddr} 192.168.0.1:vatf_am43xx-gpevm/9fbe6863091fa7f19035e382c7bc9ca5
link up on port 0, speed 1000, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.80
Filename 'vatf_am43xx-gpevm/9fbe6863091fa7f19035e382c7bc9ca5'.
Load address: 0x82000000
Loading: *#################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 ##############################################
	 10.6 MiB/s
done
Bytes transferred = 4478080 (445480 hex)
U-Boot# 
- 06:33:54 [INFO] Host: tftp ${fdt_addr_r} 192.168.0.1:vatf_am43xx-gpevm/eb1da4e255023310d09d780b388db7ba
- 06:33:54 [INFO] Target: 
tftp ${fdt_addr_r} 192.168.0.1:vatf_am43xx-gpevm/eb1da4e255023310d09d780b388db7ba
link up on port 0, speed 1000, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.80
Filename 'vatf_am43xx-gpevm/eb1da4e255023310d09d780b388db7ba'.
Load address: 0x88000000
Loading: *###
	 7.4 MiB/s
done
Bytes transferred = 38673 (9711 hex)
U-Boot# 
- 06:33:54 [INFO] Host: ls mmc 0:1
- 06:33:55 [INFO] Target: 
ls mmc 0:1
   116420   mlo 
     1164   readme 
   401676   u-boot.img 
       14   .ipaddr 
        4   ws-calibrate.rules 
5 file(s), 0 dir(s)
U-Boot# 
- 06:33:55 [INFO] Host: ls mmc 0:2
- 06:33:55 [INFO] Target: 
ls mmc 0:2
<DIR>       4096 .
<DIR>       4096 ..
<DIR>       4096 bin
<DIR>       4096 boot
<DIR>       4096 dev
<DIR>       4096 etc
<DIR>       4096 home
<DIR>       4096 lib
<DIR>       4096 media
<DIR>       4096 mnt
<DIR>       4096 opt
<DIR>       4096 proc
<DIR>       4096 run
<DIR>       4096 sbin
<DIR>       4096 srv
<DIR>       4096 sys
<SYM>          8 tmp
<DIR>       4096 usr
<DIR>       4096 var
<DIR>       4096 www
<DIR>       4096 test
U-Boot# 
- 06:33:55 [INFO] Host: part uuid mmc 0:2
- 06:33:56 [INFO] Target: 
part uuid mmc 0:2
00000000-02
U-Boot# 
- 06:33:56 [INFO] Host: printenv
- 06:33:56 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am43xx
board_name=AM43__GP
board_rev=1.2A
bootargs=console=ttyO0,115200n8 earlyprintk rootwait  ip=dhcp 
bootcmd=
bootdelay=1
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=MLO raw 0x100 0x100 mmcpart 0;u-boot.img raw 0x300 0x1000 mmcpart 0
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_ram=kernel ram 0x80200000 0x4000000;fdt ram 0x80f80000 0x80000;ramdisk ram 0x81000000 0x4000000
dfu_bufsiz=0x10000
dnsip=192.0.2.2
dnsip2=192.0.2.3
eth1addr=34:b1:f7:31:60:9b
ethact=cpsw
ethaddr=34:b1:f7:31:60:99
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtfile=undefined
fileaddr=88000000
filesize=9711
findfdt=if test $board_name = AM43EPOS; then setenv fdtfile am43x-epos-evm.dtb; fi; if test $board_name = AM43__GP; then setenv fdtfile am437x-gp-evm.dtb; fi; if test $board_name = AM43__SK; then setenv fdtfile am437x-sk-evm.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree; fi; 
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
ipaddr=192.168.0.80
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=load ${devtype} ${devnum} ${loadaddr} ${bootenv}
loadfdt=load ${devtype} ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load ${devtype} ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load ${devtype} ${devnum} ${rdaddr} ramdisk.gz
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; setenv devnum ${mmcdev}; setenv devtype mmc; if mmc rescan; then echo SD/MMC found on device ${devnum};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from mmc${mmcdev} ...; run mmcargs; bootz ${loadaddr} - ${fdtaddr}; fi;fi;
mmcdev=0
mmcroot=/dev/mmcblk0p2 rw
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:256k(NAND.SPL),256k(NAND.SPL.backup1),256k(NAND.SPL.backup2),256k(NAND.SPL.backup3),512k(NAND.u-boot-spl-os),1m(NAND.u-boot),256k(NAND.u-boot-env),256k(NAND.u-boot-env.backup1),7m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,4096
nandrootfstype=ubifs rootwait=1
netmask=255.255.255.0
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
serverip=192.168.0.1
soc=am33xx
stderr=serial
stdin=serial
stdout=serial
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbboot=setenv devnum ${usbdev}; setenv devtype usb; usb start ${usbdev}; if usb dev ${usbdev}; then if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from usb ${usbdev}...; run usbargs;bootz ${loadaddr} - ${fdtaddr}; fi;fi
usbdev=0
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2014.07-g8f725ef (Oct 12 2014 - 06:29:01)
Environment size: 3856/65532 bytes
U-Boot# 
- 06:33:56 [INFO] Host: setenv bootargs ''${bootargs}' root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait '
- 06:33:57 [INFO] Target: 
setenv bootargs ''${bootargs}' root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait '
U-Boot# 
- 06:33:57 [INFO] Host: printenv
- 06:34:17 [ERROR] On command: printenv waiting for printenv.+?(?m-ix:U-Boot\s*#) >>> error: execution expired
- 06:34:17 [INFO] Target: 
URL:gtsystest.telogy.design.ti.com/vatf/tigtfarm06/tigtfarm06_vatf@am43xx-gpevm/tigtfarm0602_16_2015_06_33_29/files/session_iteration_1/test_1
