- 06:40:21 [INFO] Starting target session
- 06:40:21 [INFO] Connected to am43xx-gpevm via serial 
- 06:40:21 [INFO] Host: #check prompt
- 06:40:24 [ERROR] On command: #check prompt waiting for #check prompt.+?(?-mix:((?-mix:login:)|[Pp]assword)) >>> error: execution expired
- 06:40:24 [INFO] Target: 
- 06:40:24 [INFO] Host: #check prompt
- 06:40:26 [ERROR] On command: #check prompt waiting for #check prompt.+?(?-mix:[\w\d]+@.+[@:#]+) >>> error: execution expired
- 06:40:26 [INFO] Target: 
- 06:40:26 [INFO] Disconnected serial from am43xx-gpevm
- 06:40:27 [INFO] Connected to am43xx-gpevm via serial 
- 06:40:27 [INFO] Host: 
- 06:40:27 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 06:40:27 [INFO] Target: 
- 06:40:27 [INFO] Host: 
- 06:40:28 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 06:40:28 [INFO] Target: 
U-Boot SPL 2014.07-00071-gaca0808 (Oct 02 2014 - 11:23:51)
- 06:40:28 [INFO] Host: 
- 06:40:28 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 06:40:28 [INFO] Target: 
SPL: Please implement spl_start_uboot() for your board
SPL: Direct Linux boot not active!
reading u-boot.img
reading u-boot.img
U-Boot 2014.07-00071-gaca0808 (Oct 02 2014 - 11:23:51), Build: jenkins-ti-linux-3-14-y_op
- 06:40:28 [INFO] Host: 
- 06:40:29 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 06:40:29 [INFO] Target: 
entest-216
I2C:   ready
DRAM:  1 GiB
NAND:  512 MiB
MMC:   OMAP SD/MMC: 0, OMAP SD/MMC: 1
Using default environment
- 06:40:29 [INFO] Host: 
- 06:40:29 [INFO] Target: 
Net:   <ethaddr> not set. Validating first E-fuse MAC
cpsw
Hit any key to stop autoboot:  1  0 
U-Boot# 
U-Boot# 
- 06:40:29 [INFO] Host: 
- 06:40:30 [INFO] Target: 
U-Boot# 
- 06:40:30 [INFO] Host: version
- 06:40:30 [INFO] Target: 
version
U-Boot 2014.07-00071-gaca0808 (Oct 02 2014 - 11:23:51)
arm-linux-gnueabihf-gcc (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 4.7.3 20130226 (prerelease)
GNU ld (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 2.23.1
U-Boot# 
- 06:40:30 [INFO] Host: setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait '
- 06:40:31 [INFO] Target: 
setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait '
U-Boot# 
- 06:40:31 [INFO] Host: setenv bootcmd  ''
- 06:40:31 [INFO] Target: 
setenv bootcmd  ''
U-Boot# 
- 06:40:31 [INFO] Host: setenv autoload 'no'
- 06:40:32 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 06:40:32 [INFO] Host: setenv serverip '192.168.0.1'
- 06:40:32 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 06:40:32 [INFO] Host: printenv
- 06:40:33 [INFO] Target: 
printenv
arch=arm
atoload=no
baudrate=115200
board=am43xx
board_nae=AM43__GP
board_rev=1.4A
bootargs=console=ttyO0,115200n8 earlyprintk rootwait 
bootcmd=
bootdelay=1
bootdir=/boot
bootenv=uEnv.txt
bootnile=zImage
bootm_size=0x10000000
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=MLO raw 0x100 0x100 mmcpart 0;u-boot.img raw 0x300 0xq000 mmcpart 0
dfu_alt_nfo_mmc=boot part 0 1;rootfs part 0 2;M\O fat 0 1;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu%Z22jD%jT
2jT5R*2jd%jdW>jdV-V5R2J"}
E*j2
**"2J"}
:*"2J"}
E5jr
*"2J"2e = undefined; then echo WARNING: Could not determine device tree; fi; 
importbootenv=echo Importing environment from mmc ...; e~v import -t $loadaddr $filesize
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadWWb""""5Rbb"""""5Rbb"""""ootfile}
loadradisk=load ${devtype} ${devnum} ${rdaddr} ramdisk.gz
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; setenv devnum ${mmcdev}; setenv devtype mmc; if mm rescan; then echo SD/MMC found on evice ${devnum};if run loadbootenv; then eco Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Runing uenvcmd ...;run uenvmd;fi;if run loadimage; then run loadfdt; egho Booting from }mc${mmcdev} ...; run mmcargs; bootz ${loadaddr} - ${fdtaddr}; fi;fi;
mmcdev=0
mmcroot=/dev/mmcblk0p2 rw
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:256k(NAND.SPL),256k(NAND.SPL.backup1),256k(NAND.SPL.backu2),256k(NAND.SPL.backup3),512k(NAND.u-boot-spl-os),1m(NAND.u-boot),256k(NAND.u-boot-env),256k(NAND.u-boot-env.ackup1),7m(NAND.kernel),-(NAND.file-system)
nandargs=seY bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run Xargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} P.kernel; "j"5Rrjr92j+.W/YO]Z.HW-]OLCartitions=uuid_disk=$uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv botars console=${consoe} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 r
ramrootfstype=ext2
rdaddr=0x8808000
serverip=192.168.0.1
soc=a}33xx
stderr=seral
stdin=serial
stdout=serial
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbboot=setenv evnum $usbdev}; setenv devtype usb; usb start ${usbdev}; if usb dev ${usbdev}; then if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from usb ${usbdev}...; run usbargs;bootz ${lodaddr} - $fdtaddr}; fi;fi
usbdev=0
usbroot=/dev/sda2 rw
ubrootf.]^YOY4 rootwait
vendor=ti
ver=U-Boot 201t.07-00071-oaca0808 (Oct 02 2014 - 11:23:51)
Environment size: 3710/65532 bytes
U-Boot# 
- 06:40:33 [INFO] Host: printenv
- 06:40:33 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrte=115200
board=am43xx
bord_name=AM43__GP
board_rev=1.4A
bootargs=console=ttyO0,115200n8 earlyprintk rootwait 
bootcmd=
bootdelay=1
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
boot}_size=0x10000000
bootpart=0:Ck=brjR4
jRD}}}j1=joot.img raw 0x700 0x1000 mmcpart 0
dfu_alt_info_mmc=bot part 0 1;rootfs part 0 2;MLO fat 0 1;spl-os-args fat 0 1;spl-os-image fat 0 1?u-boot.img fat 0 1;uEnv.tt fat 0 1
dfu_alt_info_ram=kernel ram px80200000 0x4000000;fdt ram 0x80f8p000 0x80000;ramdisk ram 0x81000000 0x4000000
dfu_bufsiz=0x10000
eth1addr=34:b1:f7:31:12:72
ethact=cpsw
ethaddr=34:b1:f7:31:12:70
fdt_addr_r=0x88000000
fdtaddr=0x8800000
fdtfkle=undefined
findfdt=in test $board_name = AM43EPOS; then setenv fdtfile am43x-epos-evm.dtb; fi; if tewt $board_name } AM43__GP; then setenv ntfle am437x-gp-evm.dtb; fi; if test $boar_name = AM43__SK; then setnv fdtfile am437x-sk-evm.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determie device tree; fi; 
importootenv=echo Importing environment nrom mmc ...; env import -t $+V,.$IV-W-YCY.%j+V,j+WWbd ${devtype} ${devnum} ${loadaddr} ${bootenv}
loadfdtO+$/VW/Y_{bootpart} ${fdtaddr} ${bootdir}/${fdtfie}
loadimage=load ${devtype} ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load ${devtype} ${devnum} ${rdaddr} ramdisk.gz
mmcargs=setenv bootargs conwole=${onsole} ${optargs} root=${mmcroot} rootfstype=${mmcroofstype}
mmcboot=mmc dev ${m}cdev}; setenv devnum ${mmcdev}; setenv devtype m}c; if mmc rescan; then echo SD/MMG found on device ${devnum};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uevcmd; then echo Running uenvcmd ...;run unvcmd;fi;if run loadimage; then run loadfdt; echo Booting from mmc${}mcdev} ...; run mmcargs; bootz $loadaddr} - ${fdaddr}; fi;fi;
mmcdev=0
mmcroot=/dev/mmcblo0p2 rw
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:256k(NAND.SPL),256k(NAND.SPL.backup1),2u6k(AND.SPL.backup2J56k(NAND.SPL.backup3),512k(NAND.u-boot-spl-os),1m(NAND.u-boot),25-J*WIWWIS-%*WIWIV]\LJS
*i/	*VViWjR""ptargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Bootin from nand ...; run nandavgs; nand read ${fdtaddr} NAND.u-boot-spl-os? nad read ${|oadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,4096
nandrootfstype=ubifs rootwait=1
partitins=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uui=${uuid_gpt_rootfs}
ramargs=setenvbootargs cosole=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
radisk_addr_r=0x88080000
ramroot=/dev/ramp rw
ramrootfstype=ext2
rdaddr=0x880800
serverip=1N168.0.1
soc=m33xx
stderr=serial
stdin=serial
stdout=seria|
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfwtype}
usbboot=setenv devnum ${usbdev}; setenv devtype usb; usb start ${usbdev}; if usb dev ${usbdev}; then if run loadbootenv; then echo Loaded en~iron}ent fro ${botenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenv[Y..;run uenvcmd;fi;if run loadimage; thmn run loadfdt; echo Booting from usb ${usbdev}...; run usbars;bootz ${loadaddr} - ${fdtaddr}; fi;fi
usbdev=0
usbroot=/dev/sda2 rw
usbrootstype=ext4 rootwat
vendor=ti
ver=U-Boot 2014.07-00071-gcap808 (Oct 02 2014 - 11:23:51)
Environment size: 3710/65532 bytes
U-Boot# 
- 06:40:33 [INFO] Host: setenv bootargs ''${bootargs}' ip=dhcp '
- 06:40:53 [ERROR] On command: setenv bootargs ''${bootargs}' ip=dhcp ' waiting for setenv bootargs ''${bootargs}' ip=dhcp '.+?(?-mix:U-Boot#) >>> error: execution expired
- 06:40:53 [INFO] Target: 
setY bootargs ''${bootargs}' ip=dhcp '
U-Boot# 
URL:gtsystest.telogy.design.ti.com/vatf/tigtfarm07/tigtfarm07_vatf@am43xx-gpevm2/tigtfarm0702_19_2015_06_40_21/files/session_iteration_1/test_1
