- 06:30:44 [INFO] Starting target session
- 06:30:44 [INFO] Connected to am43xx-gpevm via serial 
- 06:30:44 [INFO] Host: 
- 06:30:46 [ERROR] On command:  waiting for (?m-ix:.*login:) >>> error: execution expired
- 06:30:46 [INFO] Target: 

- 06:30:46 [INFO] Host: 
- 06:30:51 [ERROR] On command:  waiting for (?-mix:root@am437x-evm:.*?#) >>> error: execution expired
- 06:30:51 [INFO] Target: 

- 06:30:52 [INFO] Disconnected serial from am43xx-gpevm
- 06:30:52 [INFO] Connected to am43xx-gpevm via serial 
- 06:30:52 [INFO] Host: 
- 06:30:52 [ERROR] On command:  waiting for (?m-ix:(U-Boot|AM335X_EVM)\s*#) >>> error: execution expired
- 06:30:52 [INFO] Target: 

- 06:30:52 [INFO] Host: 
- 06:30:53 [ERROR] On command:  waiting for (?m-ix:(U-Boot|AM335X_EVM)\s*#) >>> error: execution expired
- 06:30:53 [INFO] Target: 

U-Boot SPL 2013.10-g78d8ebd (Mar 06 2014 - 13:09:07)
SPL: Please implement spl_start_uboot() for your board
SPL: Direct Linux boot not active!
reading u-boot.img
reading u-boot.img


U-Boot 2013.10-g78d8ebd (Mar 06 2014 - 13:09:07)

I2C:   
- 06:30:53 [INFO] Host: 
- 06:30:53 [ERROR] On command:  waiting for (?m-ix:(U-Boot|AM335X_EVM)\s*#) >>> error: execution expired
- 06:30:53 [INFO] Target: 
ready
DRAM:  1 GiB
NAND:  512 MiB
MMC:   OMAP SD/MMC: 0, OMAP SD/MMC: 1

- 06:30:53 [INFO] Host: 
- 06:30:54 [INFO] Target: 
Net:   <ethaddr> not set. Validating first E-fuse MAC
cpsw
Hit any key to stop autoboot:  3  0 
U-Boot# 
U-Boot# 
- 06:30:54 [INFO] Host: 
- 06:30:54 [INFO] Target: 

U-Boot# 
- 06:30:54 [INFO] Host: version
- 06:30:55 [INFO] Target: 
version

U-Boot 2013.10-g78d8ebd (Mar 06 2014 - 13:09:07)
arm-linux-gnueabihf-gcc (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 4.7.3 20130226 (prerelease)
GNU ld (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 2.23.1
U-Boot# 
- 06:30:55 [INFO] Host: setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait '
- 06:30:55 [INFO] Target: 
setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait '
U-Boot# 
- 06:30:55 [INFO] Host: setenv bootcmd  ''
- 06:30:56 [INFO] Target: 
setenv bootcmd  ''
U-Boot# 
- 06:30:56 [INFO] Host: setenv autoload 'no'
- 06:30:56 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 06:30:56 [INFO] Host: setenv serverip '192.168.0.1'
- 06:30:57 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 06:30:57 [INFO] Host: printenv
- 06:30:57 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am43xx
board_name=AM43__GP
board_rev=1.2A
boot_targets=usb mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait 
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootcmd_usb=setenv devnum 0; run usb_boot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
eth1addr=34:b1:f7:31:60:9b
ethact=cpsw
ethaddr=34:b1:f7:31:60:99
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
findfdt=if test $board_name = AM43EPOS; then setenv fdtfile am43x-epos-evm.dtb; fi; if test $board_name = AM43__GP; then setenv fdtfile am437x-gp-evm.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree; fi; 
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from mmc${mmcdev} ...; run mmcargs; bootz ${loadaddr} - ${fdtaddr}; fi;fi;
mmcdev=0
mmcroot=/dev/mmcblk0p2 rw
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:256k(NAND.SPL),256k(NAND.SPL.backup1),256k(NAND.SPL.backup2),256k(NAND.SPL.backup3),512k(NAND.u-boot-spl-os),1m(NAND.u-boot),256k(NAND.u-boot-env),256k(NAND.u-boot-env.backup1),7m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,4096
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usb_boot=setenv devtype usb; run usb_init; if usb dev 0; then run usbargs;run scan_boot; bootz ${loadaddr} - ${fdtaddr}; fi
usb_init=usb start 0;
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2013.10-g78d8ebd (Mar 06 2014 - 13:09:07)

Environment size: 3985/131067 bytes
U-Boot# 
- 06:30:57 [INFO] Host: printenv
- 06:30:58 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am43xx
board_name=AM43__GP
board_rev=1.2A
boot_targets=usb mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait 
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootcmd_usb=setenv devnum 0; run usb_boot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
eth1addr=34:b1:f7:31:60:9b
ethact=cpsw
ethaddr=34:b1:f7:31:60:99
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
findfdt=if test $board_name = AM43EPOS; then setenv fdtfile am43x-epos-evm.dtb; fi; if test $board_name = AM43__GP; then setenv fdtfile am437x-gp-evm.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree; fi; 
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from mmc${mmcdev} ...; run mmcargs; bootz ${loadaddr} - ${fdtaddr}; fi;fi;
mmcdev=0
mmcroot=/dev/mmcblk0p2 rw
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:256k(NAND.SPL),256k(NAND.SPL.backup1),256k(NAND.SPL.backup2),256k(NAND.SPL.backup3),512k(NAND.u-boot-spl-os),1m(NAND.u-boot),256k(NAND.u-boot-env),256k(NAND.u-boot-env.backup1),7m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,4096
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usb_boot=setenv devtype usb; run usb_init; if usb dev 0; then run usbargs;run scan_boot; bootz ${loadaddr} - ${fdtaddr}; fi
usb_init=usb start 0;
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2013.10-g78d8ebd (Mar 06 2014 - 13:09:07)

Environment size: 3985/131067 bytes
U-Boot# 
- 06:30:58 [INFO] Host: setenv bootargs ''${bootargs}' ip=dhcp '
- 06:30:58 [INFO] Target: 
setenv bootargs ''${bootargs}' ip=dhcp '
U-Boot# 
- 06:30:58 [INFO] Host: setenv ipaddr dhcp
- 06:30:59 [INFO] Target: 
setenv ipaddr dhcp
U-Boot# 
- 06:30:59 [INFO] Host: dhcp
- 06:31:00 [INFO] Target: 
dhcp
cpsw Waiting for PHY auto negotiation to complete. done
link up on port 0, speed 1000, full duplex
BOOTP broadcast 1
DHCP client bound to address 192.168.0.85
U-Boot# 
- 06:31:00 [INFO] Host: setenv serverip '192.168.0.1'
- 06:31:01 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 06:31:01 [INFO] Host: tftp ${loadaddr} 192.168.0.1:vatf_am43xx-gpevm/9b66bb113c04a064c580f94bc8d7bd6c
- 06:31:01 [INFO] Target: 
tftp ${loadaddr} 192.168.0.1:vatf_am43xx-gpevm/9b66bb113c04a064c580f94bc8d7bd6c
link up on port 0, speed 1000, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.85
Filename 'vatf_am43xx-gpevm/9b66bb113c04a064c580f94bc8d7bd6c'.
Load address: 0x80200000
Loading: *#################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 ##################################
	 10.4 MiB/s
done
Bytes transferred = 4307240 (41b928 hex)
U-Boot# 
- 06:31:01 [INFO] Host: tftp ${fdtaddr} 192.168.0.1:vatf_am43xx-gpevm/8a8ca4fb6a185b672664096f7d056758
- 06:31:02 [INFO] Target: 
tftp ${fdtaddr} 192.168.0.1:vatf_am43xx-gpevm/8a8ca4fb6a185b672664096f7d056758
link up on port 0, speed 1000, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.85
Filename 'vatf_am43xx-gpevm/8a8ca4fb6a185b672664096f7d056758'.
Load address: 0x80f80000
Loading: *##
	 8.3 MiB/s
done
Bytes transferred = 26050 (65c2 hex)
U-Boot# 
- 06:31:02 [INFO] Host: printenv
- 06:31:02 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am43xx
board_name=AM43__GP
board_rev=1.2A
boot_targets=usb mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait ip=dhcp
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootcmd_usb=setenv devnum 0; run usb_boot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dnsip=192.0.2.2
dnsip2=192.0.2.3
eth1addr=34:b1:f7:31:60:9b
ethact=cpsw
ethaddr=34:b1:f7:31:60:99
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
fileaddr=80f80000
filesize=65c2
findfdt=if test $board_name = AM43EPOS; then setenv fdtfile am43x-epos-evm.dtb; fi; if test $board_name = AM43__GP; then setenv fdtfile am437x-gp-evm.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree; fi; 
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
ipaddr=192.168.0.85
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from mmc${mmcdev} ...; run mmcargs; bootz ${loadaddr} - ${fdtaddr}; fi;fi;
mmcdev=0
mmcroot=/dev/mmcblk0p2 rw
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:256k(NAND.SPL),256k(NAND.SPL.backup1),256k(NAND.SPL.backup2),256k(NAND.SPL.backup3),512k(NAND.u-boot-spl-os),1m(NAND.u-boot),256k(NAND.u-boot-env),256k(NAND.u-boot-env.backup1),7m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,4096
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
netmask=255.255.255.0
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usb_boot=setenv devtype usb; run usb_init; if usb dev 0; then run usbargs;run scan_boot; bootz ${loadaddr} - ${fdtaddr}; fi
usb_init=usb start 0;
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2013.10-g78d8ebd (Mar 06 2014 - 13:09:07)

Environment size: 4135/131067 bytes
U-Boot# 
- 06:31:02 [INFO] Host: setenv bootargs ''${bootargs}' root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait '
- 06:31:03 [INFO] Target: 
setenv bootargs ''${bootargs}' root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait '
U-Boot# 
- 06:31:03 [INFO] Host: printenv
- 06:31:03 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am43xx
board_name=AM43__GP
board_rev=1.2A
boot_targets=usb mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait ip=dhcp root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootcmd_usb=setenv devnum 0; run usb_boot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dnsip=192.0.2.2
dnsip2=192.0.2.3
eth1addr=34:b1:f7:31:60:9b
ethact=cpsw
ethaddr=34:b1:f7:31:60:99
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
fileaddr=80f80000
filesize=65c2
findfdt=if test $board_name = AM43EPOS; then setenv fdtfile am43x-epos-evm.dtb; fi; if test $board_name = AM43__GP; then setenv fdtfile am437x-gp-evm.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree; fi; 
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
ipaddr=192.168.0.85
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from mmc${mmcdev} ...; run mmcargs; bootz ${loadaddr} - ${fdtaddr}; fi;fi;
mmcdev=0
mmcroot=/dev/mmcblk0p2 rw
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:256k(NAND.SPL),256k(NAND.SPL.backup1),256k(NAND.SPL.backup2),256k(NAND.SPL.backup3),512k(NAND.u-boot-spl-os),1m(NAND.u-boot),256k(NAND.u-boot-env),256k(NAND.u-boot-env.backup1),7m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,4096
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
netmask=255.255.255.0
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usb_boot=setenv devtype usb; run usb_init; if usb dev 0; then run usbargs;run scan_boot; bootz ${loadaddr} - ${fdtaddr}; fi
usb_init=usb start 0;
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2013.10-g78d8ebd (Mar 06 2014 - 13:09:07)

Environment size: 4183/131067 bytes
U-Boot# 
- 06:31:03 [INFO] Host: setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} - ${fdtaddr}; else bootz ${loadaddr} - ${fdtaddr}; bootm ${loadaddr} - ${fdtaddr}; fi'
- 06:31:04 [INFO] Target: 
setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} - ${fdtaddr}; else bootz ${loadaddr} - ${fdtaddr}; bootm ${loadaddr} - ${fdtaddr}; fi'
U-Boot# 
- 06:31:04 [INFO] Host: bdinfo
- 06:31:04 [INFO] Target: 
bdinfo
arch_number = 0x00000000
boot_params = 0x80000100
DRAM bank   = 0x00000000
-> start    = 0x80000000
-> size     = 0x40000000
eth0name    = cpsw
ethaddr     = 34:b1:f7:31:60:99
current eth = cpsw
ip_addr     = 192.168.0.85
baudrate    = 115200 bps
TLB addr    = 0xBFFF0000
relocaddr   = 0xBFF41000
reloc off   = 0x3F741000
irq_sp      = 0xBFB20F38
sp start    = 0xBFB20F28
U-Boot# 
- 06:31:04 [INFO] Host: boot
- 06:33:34 [ERROR] On command: boot waiting for (?m-ix:.*login:) >>> error: execution expired
- 06:33:34 [INFO] Target: 
boot

## Checking Image at 80200000 ...
Unknown image format!
Kernel image @ 0x80200000 [ 0x000000 - 0x41b928 ]
## Flattened Device Tree blob at 80f80000
   Booting using the fdt blob at 0x80f80000
   Loading Device Tree to 9fff6000, end 9ffff5c1 ... OK

Starting kernel ...

[    0.000000] Booting Linux on physical CPU 0x0
[    0.000000] Linux version 3.15.0-rc5-next-20140513-00002-gf406298 (nmenon@kahuna) (gcc version 4.6.3 (Ubuntu/Linaro 4.6.3-1ubuntu5) ) #1 SMP Tue May 13 05:28:26 CDT 2014
[    0.000000] CPU: ARMv7 Processor [412fc09a] revision 10 (ARMv7), cr=10c5387d
[    0.000000] CPU: PIPT / VIPT nonaliasing data cache, VIPT aliasing instruction cache
[    0.000000] Machine model: TI AM437x GP EVM
[    0.000000] cma: CMA: reserved 16 MiB at ae800000
[    0.000000] Memory policy: Data cache writeback
[    0.000000] CPU: All CPU(s) started in SVC mode.
[    0.000000] AM437x ES1.1 (sgx neon )
[    0.000000] PERCPU: Embedded 9 pages/cpu @edfbf000 s13568 r8192 d15104 u36864
[    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 260624
[    0.000000] Kernel command line: console=ttyO0,115200n8 earlyprintk rootwait ip=dhcp root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait
[    0.000000] PID hash table entries: 4096 (order: 2, 16384 bytes)
[    0.000000] Dentry cache hash table entries: 131072 (order: 7, 524288 bytes)
[    0.000000] Inode-cache hash table entries: 65536 (order: 6, 262144 bytes)
[    0.000000] Memory: 1005732K/1048576K available (5604K kernel code, 672K rwdata, 2168K rodata, 393K init, 8339K bss, 42844K reserved, 270336K highmem)
[    0.000000] Virtual kernel memory layout:
[    0.000000]     vector  : 0xffff0000 - 0xffff1000   (   4 kB)
[    0.000000]     fixmap  : 0xffc00000 - 0xffe00000   (2048 kB)
[    0.000000]     vmalloc : 0xf0000000 - 0xff000000   ( 240 MB)
[    0.000000]     lowmem  : 0xc0000000 - 0xef800000   ( 760 MB)
[    0.000000]     pkmap   : 0xbfe00000 - 0xc0000000   (   2 MB)
[    0.000000]     modules : 0xbf000000 - 0xbfe00000   (  14 MB)
[    0.000000]       .text : 0xc0008000 - 0xc079f3d0   (7773 kB)
[    0.000000]       .init : 0xc07a0000 - 0xc0802500   ( 394 kB)
[    0.000000]       .data : 0xc0804000 - 0xc08ac098   ( 673 kB)
[    0.000000]        .bss : 0xc08ac098 - 0xc10d0d58   (8340 kB)
[    0.000000] Hierarchical RCU implementation.
[    0.000000] 	RCU restricting CPUs from NR_CPUS=2 to nr_cpu_ids=1.
[    0.000000] RCU: Adjusting geometry for rcu_fanout_leaf=16, nr_cpu_ids=1
[    0.000000] NR_IRQS:16 nr_irqs:16 16
[    0.000000] GIC CPU mask not found - kernel will fail to boot.
[    0.000000] GIC CPU mask not found - kernel will fail to boot.
[    0.000000] OMAP clockevent source: timer2 at 24000000 Hz
[    0.000025] sched_clock: 32 bits at 24MHz, resolution 41ns, wraps every 178956969942ns
[    0.000144] OMAP clocksource: timer1 at 24000000 Hz
[    0.001348] Console: colour dummy device 80x30
[    0.001438] Lock dependency validator: Copyright (c) 2006 Red Hat, Inc., Ingo Molnar
[    0.001467] ... MAX_LOCKDEP_SUBCLASSES:  8
[    0.001485] ... MAX_LOCK_DEPTH:          48
[    0.001501] ... MAX_LOCKDEP_KEYS:        8191
[    0.001518] ... CLASSHASH_SIZE:          4096
[    0.001533] ... MAX_LOCKDEP_ENTRIES:     32768
[    0.001548] ... MAX_LOCKDEP_CHAINS:      65536
[    0.001564] ... CHAINHASH_SIZE:          32768
[    0.001579]  memory used by lock dependency info: 5167 kB
[    0.001596]  per task-struct memory footprint: 1152 bytes
[    0.001685] Calibrating delay loop... 1191.11 BogoMIPS (lpj=5955584)
[    0.158690] pid_max: default: 32768 minimum: 301
[    0.159441] Security Framework initialized
[    0.159697] Mount-cache hash table entries: 2048 (order: 1, 8192 bytes)
[    0.159742] Mountpoint-cache hash table entries: 2048 (order: 1, 8192 bytes)
[    0.163749] CPU: Testing write buffer coherency: ok
[    0.165879] CPU0: thread -1, cpu 0, socket 0, mpidr 80000000
[    0.166060] Setting up static identity map for 0x8054fae8 - 0x8054fb58
[    0.173187] Brought up 1 CPUs
[    0.173229] SMP: Total of 1 processors activated.
[    0.173254] CPU: All CPU(s) started in SVC mode.
[    0.178621] devtmpfs: initialized
[    0.200241] VFP support v0.3: implementor 41 architecture 3 part 30 variant 9 rev 4
[    0.229037] ------------[ cut here ]------------
[    0.229111] WARNING: CPU: 0 PID: 1 at arch/arm/mach-omap2/omap_hwmod.c:2538 _init+0x1c0/0x3e0()
[    0.229139] omap_hwmod: qspi: doesn't have mpu register target base
[    0.229158] Modules linked in:
[    0.229198] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 3.15.0-rc5-next-20140513-00002-gf406298 #1
[    0.229268] [<c0014b90>] (unwind_backtrace) from [<c0011824>] (show_stack+0x10/0x14)
[    0.229314] [<c0011824>] (show_stack) from [<c0547c98>] (dump_stack+0x78/0x94)
[    0.229355] [<c0547c98>] (dump_stack) from [<c003f5bc>] (warn_slowpath_common+0x6c/0x8c)
[    0.229389] [<c003f5bc>] (warn_slowpath_common) from [<c003f670>] (warn_slowpath_fmt+0x30/0x40)
[    0.229421] [<c003f670>] (warn_slowpath_fmt) from [<c07acc90>] (_init+0x1c0/0x3e0)
[    0.229459] [<c07acc90>] (_init) from [<c0027958>] (omap_hwmod_for_each+0x34/0x5c)
[    0.229494] [<c0027958>] (omap_hwmod_for_each) from [<c07ad404>] (__omap_hwmod_setup_all+0x24/0x40)
[    0.229526] [<c07ad404>] (__omap_hwmod_setup_all) from [<c0008904>] (do_one_initcall+0x80/0x1cc)
[    0.229561] [<c0008904>] (do_one_initcall) from [<c07a0d2c>] (kernel_init_freeable+0xfc/0x1cc)
[    0.229600] [<c07a0d2c>] (kernel_init_freeable) from [<c0542818>] (kernel_init+0x8/0xe4)
[    0.229637] [<c0542818>] (kernel_init) from [<c000e5a8>] (ret_from_fork+0x14/0x2c)
[    0.229824] ---[ end trace 4d604b9127e12860 ]---
[    0.262115] omap_hwmod: tptc0 using broken dt data from edma
[    0.262686] omap_hwmod: tptc1 using broken dt data from edma
[    0.263229] omap_hwmod: tptc2 using broken dt data from edma
[    0.270936] ------------[ cut here ]------------
[    0.271006] WARNING: CPU: 0 PID: 1 at arch/arm/mach-omap2/omap_hwmod.c:2538 _init+0x1c0/0x3e0()
[    0.271034] omap_hwmod: usb_otg_ss0: doesn't have mpu register target base
[    0.271053] Modules linked in:
[    0.271091] CPU: 0 PID: 1 Comm: swapper/0 Tainted: G        W     3.15.0-rc5-next-20140513-00002-gf406298 #1
[    0.271161] [<c0014b90>] (unwind_backtrace) from [<c0011824>] (show_stack+0x10/0x14)
[    0.271208] [<c0011824>] (show_stack) from [<c0547c98>] (dump_stack+0x78/0x94)
[    0.271246] [<c0547c98>] (dump_stack) from [<c003f5bc>] (warn_slowpath_common+0x6c/0x8c)
[    0.271278] [<c003f5bc>] (warn_slowpath_common) from [<c003f670>] (warn_slowpath_fmt+0x30/0x40)
[    0.271311] [<c003f670>] (warn_slowpath_fmt) from [<c07acc90>] (_init+0x1c0/0x3e0)
[    0.271348] [<c07acc90>] (_init) from [<c0027958>] (omap_hwmod_for_each+0x34/0x5c)
[    0.271383] [<c0027958>] (omap_hwmod_for_each) from [<c07ad404>] (__omap_hwmod_setup_all+0x24/0x40)
[    0.271413] [<c07ad404>] (__omap_hwmod_setup_all) from [<c0008904>] (do_one_initcall+0x80/0x1cc)
[    0.271448] [<c0008904>] (do_one_initcall) from [<c07a0d2c>] (kernel_init_freeable+0xfc/0x1cc)
[    0.271487] [<c07a0d2c>] (kernel_init_freeable) from [<c0542818>] (kernel_init+0x8/0xe4)
[    0.271522] [<c0542818>] (kernel_init) from [<c000e5a8>] (ret_from_fork+0x14/0x2c)
[    0.271545] ---[ end trace 4d604b9127e12861 ]---
[    0.272552] ------------[ cut here ]------------
[    0.272605] WARNING: CPU: 0 PID: 1 at arch/arm/mach-omap2/omap_hwmod.c:2538 _init+0x1c0/0x3e0()
[    0.272626] omap_hwmod: usb_otg_ss1: doesn't have mpu register target base
[    0.272643] Modules linked in:
[    0.272677] CPU: 0 PID: 1 Comm: swapper/0 Tainted: G        W     3.15.0-rc5-next-20140513-00002-gf406298 #1
[    0.272740] [<c0014b90>] (unwind_backtrace) from [<c0011824>] (show_stack+0x10/0x14)
[    0.272779] [<c0011824>] (show_stack) from [<c0547c98>] (dump_stack+0x78/0x94)
[    0.272815] [<c0547c98>] (dump_stack) from [<c003f5bc>] (warn_slowpath_common+0x6c/0x8c)
[    0.272848] [<c003f5bc>] (warn_slowpath_common) from [<c003f670>] (warn_slowpath_fmt+0x30/0x40)
[    0.272880] [<c003f670>] (warn_slowpath_fmt) from [<c07acc90>] (_init+0x1c0/0x3e0)
[    0.272919] [<c07acc90>] (_init) from [<c0027958>] (omap_hwmod_for_each+0x34/0x5c)
[    0.272953] [<c0027958>] (omap_hwmod_for_each) from [<c07ad404>] (__omap_hwmod_setup_all+0x24/0x40)
[    0.272984] [<c07ad404>] (__omap_hwmod_setup_all) from [<c0008904>] (do_one_initcall+0x80/0x1cc)
[    0.273021] [<c0008904>] (do_one_initcall) from [<c07a0d2c>] (kernel_init_freeable+0xfc/0x1cc)
[    0.273058] [<c07a0d2c>] (kernel_init_freeable) from [<c0542818>] (kernel_init+0x8/0xe4)
[    0.273093] [<c0542818>] (kernel_init) from [<c000e5a8>] (ret_from_fork+0x14/0x2c)
[    0.273116] ---[ end trace 4d604b9127e12862 ]---
[    0.335797] pinctrl core: initialized pinctrl subsystem
[    0.340776] regulator-dummy: no parameters
[    0.375021] NET: Registered protocol family 16
[    0.389192] DMA: preallocated 256 KiB pool for atomic coherent allocations
[    0.412948] platform 49000000.edma: alias fck already exists
[    0.413122] platform 49000000.edma: alias fck already exists
[    0.413166] platform 49000000.edma: alias fck already exists
[    0.415225] No ATAGs?
[    0.415375] hw-breakpoint: found 5 (+1 reserved) breakpoint and 1 watchpoint registers.
[    0.415462] hw-breakpoint: maximum watchpoint size is 4 bytes.
[    0.485638] edma-dma-engine edma-dma-engine.0: TI EDMA DMA engine driver
[    0.490275] SCSI subsystem initialized
[    0.491797] usbcore: registered new interface driver usbfs
[    0.492164] usbcore: registered new interface driver hub
[    0.505104] usbcore: registered new device driver usb
[    0.513399] Switched to clocksource timer1
[    0.771548] NET: Registered protocol family 2
[    0.775241] TCP established hash table entries: 8192 (order: 3, 32768 bytes)
[    0.775580] TCP bind hash table entries: 8192 (order: 6, 294912 bytes)
[    0.778538] TCP: Hash tables configured (established 8192 bind 8192)
[    0.779017] TCP: reno registered
[    0.779147] UDP hash table entries: 512 (order: 3, 40960 bytes)
[    0.779594] UDP-Lite hash table entries: 512 (order: 3, 40960 bytes)
[    0.781637] NET: Registered protocol family 1
[    0.786026] RPC: Registered named UNIX socket transport module.
[    0.786121] RPC: Registered udp transport module.
[    0.786147] RPC: Registered tcp transport module.
[    0.786168] RPC: Registered tcp NFSv4.1 backchannel transport module.
[    0.793520] futex hash table entries: 256 (order: 2, 16384 bytes)
[    0.801499] bounce: pool size: 64 pages
[    0.804824] VFS: Disk quotas dquot_6.5.2
[    0.805064] Dquot-cache hash table entries: 1024 (order 0, 4096 bytes)
[    0.809735] NFS: Registering the id_resolver key type
[    0.810607] Key type id_resolver registered
[    0.810707] Key type id_legacy registered
[    0.811079] jffs2: version 2.2. (NAND) (SUMMARY)   2001-2006 Red Hat, Inc.
[    0.811938] msgmni has been set to 1468
[    0.824726] io scheduler noop registered
[    0.824812] io scheduler deadline registered
[    0.824951] io scheduler cfq registered (default)
[    0.827740] pinctrl-single 44e10800.pinmux: 199 pins at pa f9e10800 size 796
[    0.831354] Serial: 8250/16550 driver, 4 ports, IRQ sharing enabled
[    0.842249] omap_uart 44e09000.serial: no wakeirq for uart0
[    0.842380] omap_uart 44e09000.serial: No clock speed specified: using default: 48000000
[    0.843830] 44e09000.serial: ttyO0 at MMIO 0x44e09000 (irq = 104, base_baud = 3000000) is a OMAP UART0
[    1.893526] console [ttyO0] enabled
[    1.949582] brd: module loaded
[    1.985621] loop: module loaded
[    1.993575] mtdoops: mtd device (mtddev=name/number) must be supplied
[    2.004994] usbcore: registered new interface driver asix
[    2.011031] usbcore: registered new interface driver ax88179_178a
[    2.017987] usbcore: registered new interface driver cdc_ether
[    2.024663] usbcore: registered new interface driver smsc95xx
[    2.031034] usbcore: registered new interface driver net1080
[    2.037453] usbcore: registered new interface driver cdc_subset
[    2.044952] usbcore: registered new interface driver zaurus
[    2.051308] usbcore: registered new interface driver cdc_ncm
[    2.063357] usbcore: registered new interface driver cdc_wdm
[    2.069727] usbcore: registered new interface driver usb-storage
[    2.076621] usbcore: registered new interface driver usbtest
[    2.095301] mousedev: PS/2 mouse device common for all mice
[    2.108053] i2c /dev entries driver
[    2.111936] Driver for 1-wire Dallas network protocol.
[    2.120253] ledtrig-cpu: registered to indicate activity on CPUs
[    2.127836] usbcore: registered new interface driver usbhid
[    2.133875] usbhid: USB HID core driver
[    2.139459] oprofile: no performance counters
[    2.146856] oprofile: using timer interrupt.
[    2.152581] TCP: cubic registered
[    2.156321] Initializing XFRM netlink socket
[    2.161175] NET: Registered protocol family 17
[    2.166170] NET: Registered protocol family 15
[    2.171605] Key type dns_resolver registered
[    2.178619] ThumbEE CPU extension supported.
[    2.183380] Registering SWP/SWPB emulation handler
[    2.200910] drivers/rtc/hctosys.c: unable to open rtc device (rtc0)
[   14.348706] Waiting for root device /dev/mmcblk0p2...

