- 06:28:23 [INFO] Starting target session
- 06:28:23 [INFO] Connected to am335x-evm via serial 
- 06:28:23 [INFO] Host: 
- 06:28:25 [ERROR] On command:  waiting for (?-mix:login:) >>> error: execution expired
- 06:28:25 [INFO] Target: 

root@am335x-evm:/test# 
- 06:28:25 [INFO] Host: 
- 06:28:26 [INFO] Target: 

root@am335x-evm:/test# 
- 06:28:26 [INFO] Host: sync;poweroff
- 06:28:59 [INFO] Target: 
sync;poweroff


Broadcast message from root@am335x-evm (ttyO0) (Fri May 30 05:11:06 2014):



The system is going down for system halt NOW!


INIT: Switching to runlevel: 0


INIT: Sending processes the TERM signal

root@am335x-evm:/test# 
INIT: Sending processes the KILL signal

[18211.402552] omap_i2c 44e0b000.i2c: timeout waiting for bus ready
UIM SYSFS Node Found at /sys/./devices/kim.12/install
Stopping uim-sysfs daemon.
Stopping Dropbear SSH server: stopped /usr/sbin/dropbear (pid 1791)
dropbear.
Stopping telnet daemon.
Stopping system message bus: dbus.
Stopping syslogd/klogd: stopped syslogd (pid 1803)
stopped klogd (pid 1806)
done
Stopping thttpd.
ALSA: Storing mixer settings...
NOT deconfiguring network interfaces: / is an NFS mount
Stopping PVR
[18213.472500] PVR_K: SGX debug (SGX_DDK_Linux_CustomerTI sgxddk 1.10@2359475)
[18213.479932] PVR_K:  Host Ctl flags= 00000006
[18213.484483] PVR_K: SGX Host control:
[18213.488289] PVR_K: 	(HC-0) 0x00000001 0x0000002C 0x00000000 0x00000001
[18213.495242] PVR_K: 	(HC-10) 0x00000000 0x00000000 0x0000000A 0x00030D40
[18213.502267] PVR_K: 	(HC-20) 0x00000000 0x00000004 0x00000000 0x00000000
[18213.509313] PVR_K: 	(HC-30) 0x00000000 0x0115855E 0xEF9852D0 0x00000000
[18213.516354] PVR_K: 	(HC-40) 0x00000000 0x00000000 0x00000FBE 0x00000000
[18213.523388] PVR_K: SGX TA/3D control:
[18213.527289] PVR_K: 	(T3C-0) 0x0F003000 0x0F003120 0x0F002000 0x00000000
[18213.534329] PVR_K: 	(T3C-10) 0x0F09DC40 0x00000001 0x00000002 0x00000001
[18213.541452] PVR_K: 	(T3C-20) 0x0F00AEA0 0x00000000 0x00000000 0x00000000
[18213.548584] PVR_K: 	(T3C-30) 0x00000000 0x00000000 0x00000000 0x00000000
[18213.555724] PVR_K: 	(T3C-40) 0x00000000 0x00000000 0x00000000 0x00000000
[18213.562865] PVR_K: 	(T3C-50) 0x00000000 0x00000000 0x00000000 0x00000000
[18213.569982] PVR_K: 	(T3C-60) 0x00000000 0x00000000 0x00000000 0x00000000
[18213.577118] PVR_K: 	(T3C-70) 0x00000000 0x00000000 0x00000000 0x00000000
[18213.584252] PVR_K: 	(T3C-80) 0x00000000 0x00000000 0x00000000 0x0F000000
[18213.591373] PVR_K: 	(T3C-90) 0x9C31D000 0x0F094600 0x00000000 0x0F08B4C0
[18213.598506] PVR_K: 	(T3C-A0) 0x0F00AEA0 0x00000000 0x0F08B4C0 0x00000000
[18213.605642] PVR_K: 	(T3C-B0) 0x00000000 0x00000000 0x00000000 0x00000000
[18213.612775] PVR_K: 	(T3C-C0) 0x00000000 0x00000000 0x000003E8 0x000003E8
[18213.619892] PVR_K: 	(T3C-D0) 0x0F000000 0x8000B000 0x8004B000 0x0F004000
[18213.627028] PVR_K: 	(T3C-E0) 0x0F00A420 0x0F00A740 0x00000000 0x00000000
[18213.634162] PVR_K: 	(T3C-F0) 0x00000000 0x00000882 0x00000882 0x00000000
[18213.641283] PVR_K: 	(T3C-100) 0x00000003 0x00000001 0x00000000 0x00000001
[18213.648507] PVR_K: 	(T3C-110) 0x00000000 0x00000000 0x00000000 0x00000000
[18213.655733] PVR_K: SGX Kernel CCB WO:0xC9 RO:0xC9
[18213.660935] omap_i2c 44e0b000.i2c: timeout waiting for bus ready
Stopping Lighttpd Web Server: stopped /usr/sbin/lighttpd (pid 1873)
lighttpd.
Stopping Matrix GUI application.
[18214.982486] omap_i2c 44e0b000.i2c: timeout waiting for bus ready
***************************************************************
***************************************************************
NOTICE: This file system contains the followin GPLv3 packages:
	binutils-symlinks
	binutils
	gdbserver

If you do not wish to distribute GPLv3 components please remove
the above packages prior to distribution.  This can be done using
the opkg remove command.  i.e.:
    opkg remove <package>
Where <package> is the name printed in the list above

NOTE: If the package is a dependency of another package you
      will be notified of the dependent packages.  You should
      use the --force-removal-of-dependent-packages option to
      also remove the dependent packages as well
***************************************************************
***************************************************************
Sending all processes the TERM signal...
Error VT_WAITACTIVE failed
: Interrupted system call
[18216.432603] omap_i2c 44e0b000.i2c: timeout waiting for bus ready
Sending all processes the KILL signal...
Unmounting remote filesystems...
Deactivating swap...
Unmounting local filesystems...
[18221.632671] omap_i2c 44e0b000.i2c: timeout waiting for bus ready
[18223.032668] omap_i2c 44e0b000.i2c: timeout waiting for bus ready
[18224.052654] omap_i2c 44e0b000.i2c: timeout waiting for bus ready
[18224.059149] tps65910 0-002d: Error in configuring external control EN1
[18224.066205] tps65910-pmic tps65910-pmic: Error in clearing external control
[18225.092651] omap_i2c 44e0b000.i2c: timeout waiting for bus ready
[18225.099170] tps65910 0-002d: Error in configuring external control EN1
[18225.106200] tps65910-pmic tps65910-pmic: Error in clearing external control
[18226.132648] omap_i2c 44e0b000.i2c: timeout waiting for bus ready
[18226.139141] tps65910 0-002d: Error in configuring external control EN1
[18226.146186] tps65910-pmic tps65910-pmic: Error in clearing external control
[18227.172651] omap_i2c 44e0b000.i2c: timeout waiting for bus ready
[18227.179145] tps65910 0-002d: Error in configuring external control EN1
[18227.186197] tps65910-pmic tps65910-pmic: Error in clearing external control
[18228.212766] omap_i2c 44e0b000.i2c: timeout waiting for bus ready
[18228.219279] tps65910 0-002d: Error in configuring external control EN1
[18228.226313] tps65910-pmic tps65910-pmic: Error in clearing external control
[18229.252651] omap_i2c 44e0b000.i2c: timeout waiting for bus ready
[18229.259143] tps65910 0-002d: Error in configuring external control EN1
[18229.266195] tps65910-pmic tps65910-pmic: Error in clearing external control
[18230.292652] omap_i2c 44e0b000.i2c: timeout waiting for bus ready
[18230.299164] tps65910 0-002d: Error in configuring external control EN1
[18230.306197] tps65910-pmic tps65910-pmic: Error in clearing external control
[18231.332650] omap_i2c 44e0b000.i2c: timeout waiting for bus ready
[18231.339167] tps65910 0-002d: Error in configuring external control EN1
[18231.346202] tps65910-pmic tps65910-pmic: Error in clearing external control
[18232.372653] omap_i2c 44e0b000.i2c: timeout waiting for bus ready
[18232.379140] tps65910 0-002d: Error in configuring external control EN1
[18232.386195] tps65910-pmic tps65910-pmic: Error in clearing external control
[18233.412762] omap_i2c 44e0b000.i2c: timeout waiting for bus ready
[18233.419277] tps65910 0-002d: Error in configuring external control EN1
[18233.426308] tps65910-pmic tps65910-pmic: Error in clearing external control
[18234.452653] omap_i2c 44e0b000.i2c: timeout waiting for bus ready
[18234.459144] tps65910 0-002d: Error in configuring external control EN1
[18234.466187] tps65910-pmic tps65910-pmic: Error in clearing external control
[18235.492645] omap_i2c 44e0b000.i2c: timeout waiting for bus ready
[18235.499138] tps65910 0-002d: Error in configuring external control EN1
[18235.506192] tps65910-pmic tps65910-pmic: Error in clearing external control
[18236.532736] omap_i2c 44e0b000.i2c: timeout waiting for bus ready
[18236.539253] tps65910 0-002d: Error in configuring external control EN1
[18236.546289] tps65910-pmic tps65910-pmic: Error in clearing external control
[18236.554633] reboot: System halted

- 06:29:20 [INFO] Disconnected serial from am335x-evm
- 06:29:20 [INFO] Connected to am335x-evm via serial 
- 06:29:20 [INFO] Host: 
- 06:29:21 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 06:29:21 [INFO] Target: 

U-Boot SPL 2013.10-gaa25212 (Feb 06 2014 - 21:36:54)

- 06:29:21 [INFO] Host: 
- 06:29:21 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 06:29:21 [INFO] Target: 
reading args
spl: error reading image args, err - -1
reading u-boot.img
reading u-boot.img


U-Boot 2013.10-gaa25212 (Feb 06 2014 - 21:36:54)

I2C:   ready
DRAM:  512 MiB

- 06:29:21 [INFO] Host: 
- 06:29:22 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 06:29:22 [INFO] Target: 
NAND:  256 MiB
MMC:   OMAP SD/MMC: 0, OMAP SD/MMC: 1

- 06:29:22 [INFO] Host: 
- 06:29:22 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 06:29:22 [INFO] Target: 
*** Warning - bad CRC, using default environment


- 06:29:22 [INFO] Host: 
- 06:29:23 [INFO] Target: 
Net:   <ethaddr> not set. Validating first E-fuse MAC
cpsw, usb_ether
Hit any key to stop autoboot:  3  0 
U-Boot# 
U-Boot# 
U-Boot# 
- 06:29:23 [INFO] Host: 
- 06:29:23 [INFO] Target: 

U-Boot# 
- 06:29:23 [INFO] Host: version
- 06:29:24 [INFO] Target: 
version

U-Boot 2013.10-gaa25212 (Feb 06 2014 - 21:36:54)
arm-linux-gnueabihf-gcc (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 4.7.3 20130226 (prerelease)
GNU ld (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 2.23.1
U-Boot# 
- 06:29:24 [INFO] Host: setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait  '
- 06:29:24 [INFO] Target: 
setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait  '
U-Boot# 
- 06:29:24 [INFO] Host: setenv bootcmd  ''
- 06:29:25 [INFO] Target: 
setenv bootcmd  ''
U-Boot# 
- 06:29:25 [INFO] Host: setenv autoload 'no'
- 06:29:25 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 06:29:25 [INFO] Host: setenv serverip '192.168.0.1'
- 06:29:26 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 06:29:26 [INFO] Host: printenv
- 06:29:26 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A33515BB
board_rev=1.1A
boot_fdt=try
boot_targets= mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait  
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootcmd_usb=setenv devnum 0; run usb_boot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 100 100;u-boot.img.raw mmc 300 400;spl-os-args.raw mmc 80 80;spl-os-image.raw mmc 900 2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=NAND.SPL part 0 1;NAND.SPL.backup1 part 0 2;NAND.SPL.backup2 part 0 3;NAND.SPL.backup3 part 0 4;NAND.u-boot-spl-os part 0 5;NAND.u-boot part 0 6;NAND.u-boot-env part 0 7;NAND.u-boot-env.backup1 part 0 8;NAND.kernel part 0 9;NAND.rootfs part 0 10
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
eth1addr=40:5f:c2:76:54:11
ethact=cpsw
ethaddr=40:5f:c2:76:54:10
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usb_boot=setenv devtype usb; run usb_init; if usb dev 0; then run usbargs;run scan_boot; bootz ${loadaddr} - ${fdtaddr}; fi
usb_init=usb start 0;
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbnet_devaddr=40:5f:c2:76:54:11
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2013.10-gaa25212 (Feb 06 2014 - 21:36:54)

Environment size: 5440/131067 bytes
U-Boot# 
- 06:29:26 [INFO] Host: printenv
- 06:29:27 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A33515BB
board_rev=1.1A
boot_fdt=try
boot_targets= mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait  
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootcmd_usb=setenv devnum 0; run usb_boot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 100 100;u-boot.img.raw mmc 300 400;spl-os-args.raw mmc 80 80;spl-os-image.raw mmc 900 2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=NAND.SPL part 0 1;NAND.SPL.backup1 part 0 2;NAND.SPL.backup2 part 0 3;NAND.SPL.backup3 part 0 4;NAND.u-boot-spl-os part 0 5;NAND.u-boot part 0 6;NAND.u-boot-env part 0 7;NAND.u-boot-env.backup1 part 0 8;NAND.kernel part 0 9;NAND.rootfs part 0 10
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
eth1addr=40:5f:c2:76:54:11
ethact=cpsw
ethaddr=40:5f:c2:76:54:10
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usb_boot=setenv devtype usb; run usb_init; if usb dev 0; then run usbargs;run scan_boot; bootz ${loadaddr} - ${fdtaddr}; fi
usb_init=usb start 0;
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbnet_devaddr=40:5f:c2:76:54:11
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2013.10-gaa25212 (Feb 06 2014 - 21:36:54)

Environment size: 5440/131067 bytes
U-Boot# 
- 06:29:27 [INFO] Host: setenv bootargs ''${bootargs}' ip=dhcp '
- 06:29:27 [INFO] Target: 
setenv bootargs ''${bootargs}' ip=dhcp '
U-Boot# 
- 06:29:27 [INFO] Host: setenv ipaddr dhcp
- 06:29:28 [INFO] Target: 
setenv ipaddr dhcp
U-Boot# 
- 06:29:28 [INFO] Host: dhcp
- 06:29:29 [INFO] Target: 
dhcp
link up on port 0, speed 1000, full duplex
BOOTP broadcast 1
DHCP client bound to address 192.168.0.75
U-Boot# 
- 06:29:29 [INFO] Host: setenv serverip '192.168.0.1'
- 06:29:30 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 06:29:30 [INFO] Host: tftp ${loadaddr} 192.168.0.1:vatf_am335x-evm/6c1ac7aafab2d3e9495457ce7b0b3070
- 06:29:30 [INFO] Target: 
tftp ${loadaddr} 192.168.0.1:vatf_am335x-evm/6c1ac7aafab2d3e9495457ce7b0b3070
link up on port 0, speed 1000, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.75
Filename 'vatf_am335x-evm/6c1ac7aafab2d3e9495457ce7b0b3070'.
Load address: 0x80200000
Loading: *#################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 ####################################
	 13.7 MiB/s
done
Bytes transferred = 4339296 (423660 hex)
U-Boot# 
- 06:29:30 [INFO] Host: tftp ${fdtaddr} 192.168.0.1:vatf_am335x-evm/1adb53ce9408c0f4db99772e87471fe2
- 06:29:31 [INFO] Target: 
tftp ${fdtaddr} 192.168.0.1:vatf_am335x-evm/1adb53ce9408c0f4db99772e87471fe2
link up on port 0, speed 1000, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.75
Filename 'vatf_am335x-evm/1adb53ce9408c0f4db99772e87471fe2'.
Load address: 0x80f80000
Loading: *###
	 11 MiB/s
done
Bytes transferred = 34536 (86e8 hex)
U-Boot# 
- 06:29:31 [INFO] Host: printenv
- 06:29:31 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A33515BB
board_rev=1.1A
boot_fdt=try
boot_targets= mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait ip=dhcp
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootcmd_usb=setenv devnum 0; run usb_boot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 100 100;u-boot.img.raw mmc 300 400;spl-os-args.raw mmc 80 80;spl-os-image.raw mmc 900 2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=NAND.SPL part 0 1;NAND.SPL.backup1 part 0 2;NAND.SPL.backup2 part 0 3;NAND.SPL.backup3 part 0 4;NAND.u-boot-spl-os part 0 5;NAND.u-boot part 0 6;NAND.u-boot-env part 0 7;NAND.u-boot-env.backup1 part 0 8;NAND.kernel part 0 9;NAND.rootfs part 0 10
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
dnsip=192.0.2.2
dnsip2=192.0.2.3
eth1addr=40:5f:c2:76:54:11
ethact=cpsw
ethaddr=40:5f:c2:76:54:10
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
fileaddr=80f80000
filesize=86e8
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
ipaddr=192.168.0.75
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
netmask=255.255.255.0
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usb_boot=setenv devtype usb; run usb_init; if usb dev 0; then run usbargs;run scan_boot; bootz ${loadaddr} - ${fdtaddr}; fi
usb_init=usb start 0;
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbnet_devaddr=40:5f:c2:76:54:11
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2013.10-gaa25212 (Feb 06 2014 - 21:36:54)

Environment size: 5589/131067 bytes
U-Boot# 
- 06:29:31 [INFO] Host: setenv bootargs ''${bootargs}' root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait '
- 06:29:32 [INFO] Target: 
setenv bootargs ''${bootargs}' root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait '
U-Boot# 
- 06:29:32 [INFO] Host: printenv
- 06:29:32 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A33515BB
board_rev=1.1A
boot_fdt=try
boot_targets= mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait ip=dhcp root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootcmd_usb=setenv devnum 0; run usb_boot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 100 100;u-boot.img.raw mmc 300 400;spl-os-args.raw mmc 80 80;spl-os-image.raw mmc 900 2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=NAND.SPL part 0 1;NAND.SPL.backup1 part 0 2;NAND.SPL.backup2 part 0 3;NAND.SPL.backup3 part 0 4;NAND.u-boot-spl-os part 0 5;NAND.u-boot part 0 6;NAND.u-boot-env part 0 7;NAND.u-boot-env.backup1 part 0 8;NAND.kernel part 0 9;NAND.rootfs part 0 10
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
dnsip=192.0.2.2
dnsip2=192.0.2.3
eth1addr=40:5f:c2:76:54:11
ethact=cpsw
ethaddr=40:5f:c2:76:54:10
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
fileaddr=80f80000
filesize=86e8
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
ipaddr=192.168.0.75
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
netmask=255.255.255.0
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usb_boot=setenv devtype usb; run usb_init; if usb dev 0; then run usbargs;run scan_boot; bootz ${loadaddr} - ${fdtaddr}; fi
usb_init=usb start 0;
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbnet_devaddr=40:5f:c2:76:54:11
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2013.10-gaa25212 (Feb 06 2014 - 21:36:54)

Environment size: 5637/131067 bytes
U-Boot# 
- 06:29:32 [INFO] Host: setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} - ${fdtaddr}; else bootz ${loadaddr} - ${fdtaddr}; bootm ${loadaddr} - ${fdtaddr}; fi'
- 06:29:33 [INFO] Target: 
setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} - ${fdtaddr}; else bootz ${loadaddr} - ${fdtaddr}; bootm ${loadaddr} - ${fdtaddr}; fi'
U-Boot# 
- 06:29:33 [INFO] Host: bdinfo
- 06:29:33 [INFO] Target: 
bdinfo
arch_number = 0x00000E05
boot_params = 0x80000100
DRAM bank   = 0x00000000
-> start    = 0x80000000
-> size     = 0x20000000
eth0name    = cpsw
ethaddr     = 40:5f:c2:76:54:10
eth1name    = usb_ether
eth1addr    = 40:5f:c2:76:54:11
current eth = cpsw
ip_addr     = 192.168.0.75
baudrate    = 115200 bps
TLB addr    = 0x9FFF0000
relocaddr   = 0x9F74E000
reloc off   = 0x1EF4E000
irq_sp      = 0x9F62DF38
sp start    = 0x9F62DF28
U-Boot# 
- 06:29:33 [INFO] Host: boot
- 06:32:03 [ERROR] On command: boot waiting for (?-mix:login:) >>> error: execution expired
- 06:32:03 [INFO] Target: 
boot

## Checking Image at 80200000 ...
Unknown image format!
Kernel image @ 0x80200000 [ 0x000000 - 0x423660 ]
## Flattened Device Tree blob at 80f80000
   Booting using the fdt blob at 0x80f80000
   Loading Device Tree to 9f621000, end 9f62c6e7 ... OK

Starting kernel ...

[    0.000000] Booting Linux on physical CPU 0x0
[    0.000000] Linux version 3.15.0-rc8-next-20140604-00002-ga8e1087 (nmenon@kahuna) (gcc version 4.6.3 (Ubuntu/Linaro 4.6.3-1ubuntu5) ) #1 SMP Wed Jun 4 05:33:10 CDT 2014
[    0.000000] CPU: ARMv7 Processor [413fc082] revision 2 (ARMv7), cr=10c5387d
[    0.000000] CPU: PIPT / VIPT nonaliasing data cache, VIPT aliasing instruction cache
[    0.000000] Machine model: TI AM335x EVM
[    0.000000] cma: CMA: reserved 16 MiB at 9e000000
[    0.000000] Memory policy: Data cache writeback
[    0.000000] CPU: All CPU(s) started in SVC mode.
[    0.000000] AM335X ES1.0 (sgx neon )
[    0.000000] PERCPU: Embedded 9 pages/cpu @dfac2000 s14336 r8192 d14336 u36864
[    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 129792
[    0.000000] Kernel command line: console=ttyO0,115200n8 earlyprintk rootwait ip=dhcp root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait
[    0.000000] PID hash table entries: 2048 (order: 1, 8192 bytes)
[    0.000000] Dentry cache hash table entries: 65536 (order: 6, 262144 bytes)
[    0.000000] Inode-cache hash table entries: 32768 (order: 5, 131072 bytes)
[    0.000000] Memory: 484840K/523264K available (5641K kernel code, 680K rwdata, 2192K rodata, 402K init, 8337K bss, 38424K reserved, 0K highmem)
[    0.000000] Virtual kernel memory layout:
[    0.000000]     vector  : 0xffff0000 - 0xffff1000   (   4 kB)
[    0.000000]     fixmap  : 0xffc00000 - 0xffe00000   (2048 kB)
[    0.000000]     vmalloc : 0xe0800000 - 0xff000000   ( 488 MB)
[    0.000000]     lowmem  : 0xc0000000 - 0xe0000000   ( 512 MB)
[    0.000000]     pkmap   : 0xbfe00000 - 0xc0000000   (   2 MB)
[    0.000000]     modules : 0xbf000000 - 0xbfe00000   (  14 MB)
[    0.000000]       .text : 0xc0008000 - 0xc07ae8fc   (7835 kB)
[    0.000000]       .init : 0xc07af000 - 0xc0813800   ( 402 kB)
[    0.000000]       .data : 0xc0814000 - 0xc08be078   ( 681 kB)
[    0.000000]        .bss : 0xc08be078 - 0xc10e2558   (8338 kB)
[    0.000000] Hierarchical RCU implementation.
[    0.000000] 	RCU restricting CPUs from NR_CPUS=2 to nr_cpu_ids=1.
[    0.000000] RCU: Adjusting geometry for rcu_fanout_leaf=16, nr_cpu_ids=1
[    0.000000] NR_IRQS:16 nr_irqs:16 16
[    0.000000] IRQ: Found an INTC at 0xfa200000 (revision 5.0) with 128 interrupts
[    0.000000] Total of 128 interrupts on 1 active controller
[    0.000000] OMAP clockevent source: timer2 at 24000000 Hz
[    0.000018] sched_clock: 32 bits at 24MHz, resolution 41ns, wraps every 178956969942ns
[    0.000085] OMAP clocksource: timer1 at 24000000 Hz
[    0.001072] Console: colour dummy device 80x30
[    0.001128] Lock dependency validator: Copyright (c) 2006 Red Hat, Inc., Ingo Molnar
[    0.001146] ... MAX_LOCKDEP_SUBCLASSES:  8
[    0.001163] ... MAX_LOCK_DEPTH:          48
[    0.001179] ... MAX_LOCKDEP_KEYS:        8191
[    0.001195] ... CLASSHASH_SIZE:          4096
[    0.001211] ... MAX_LOCKDEP_ENTRIES:     32768
[    0.001227] ... MAX_LOCKDEP_CHAINS:      65536
[    0.001243] ... CHAINHASH_SIZE:          32768
[    0.001258]  memory used by lock dependency info: 5167 kB
[    0.001275]  per task-struct memory footprint: 1152 bytes
[    0.001336] Calibrating delay loop... 715.16 BogoMIPS (lpj=3575808)
[    0.098648] pid_max: default: 32768 minimum: 301
[    0.099238] Security Framework initialized
[    0.099412] Mount-cache hash table entries: 1024 (order: 0, 4096 bytes)
[    0.099437] Mountpoint-cache hash table entries: 1024 (order: 0, 4096 bytes)
[    0.102344] CPU: Testing write buffer coherency: ok
[    0.103831] CPU0: thread -1, cpu 0, socket -1, mpidr 0
[    0.103982] Setting up static identity map for 0x80558368 - 0x805583d8
[    0.108291] Brought up 1 CPUs
[    0.108322] SMP: Total of 1 processors activated.
[    0.108341] CPU: All CPU(s) started in SVC mode.
[    0.112185] devtmpfs: initialized
[    0.124196] VFP support v0.3: implementor 41 architecture 3 part 30 variant c rev 3
[    0.173957] omap_hwmod: tptc0 using broken dt data from edma
[    0.174463] omap_hwmod: tptc1 using broken dt data from edma
[    0.174938] omap_hwmod: tptc2 using broken dt data from edma
[    0.184705] omap_hwmod: debugss: _wait_target_disable failed
[    0.243479] pinctrl core: initialized pinctrl subsystem
[    0.246790] regulator-dummy: no parameters
[    0.289468] NET: Registered protocol family 16
[    0.297222] DMA: preallocated 256 KiB pool for atomic coherent allocations
[    0.300430] cpuidle: using governor ladder
[    0.300504] cpuidle: using governor menu
[    0.313388] platform 49000000.edma: alias fck already exists
[    0.313499] platform 49000000.edma: alias fck already exists
[    0.313532] platform 49000000.edma: alias fck already exists
[    0.317200] OMAP GPIO hardware version 0.1
[    0.336924] omap-gpmc 50000000.gpmc: could not find pctldev for node /pinmux@44e10800/nandflash_pins_s0, deferring probe
[    0.336984] platform 50000000.gpmc: Driver omap-gpmc requests probe deferral
[    0.343010] No ATAGs?
[    0.343058] hw-breakpoint: debug architecture 0x4 unsupported.
[    0.402879] edma-dma-engine edma-dma-engine.0: TI EDMA DMA engine driver
[    0.404591] vbat: 5000 mV 
[    0.405710] lis3_reg: no parameters
[    0.410276] SCSI subsystem initialized
[    0.411411] usbcore: registered new interface driver usbfs
[    0.411652] usbcore: registered new interface driver hub
[    0.418092] usbcore: registered new device driver usb
[    0.419349] omap_i2c 44e0b000.i2c: could not find pctldev for node /pinmux@44e10800/pinmux_i2c0_pins, deferring probe
[    0.419423] platform 44e0b000.i2c: Driver omap_i2c requests probe deferral
[    0.419505] omap_i2c 4802a000.i2c: could not find pctldev for node /pinmux@44e10800/pinmux_i2c1_pins, deferring probe
[    0.419544] platform 4802a000.i2c: Driver omap_i2c requests probe deferral
[    0.425261] Switched to clocksource timer1
[    0.639323] NET: Registered protocol family 2
[    0.641733] TCP established hash table entries: 4096 (order: 2, 16384 bytes)
[    0.641985] TCP bind hash table entries: 4096 (order: 5, 147456 bytes)
[    0.643849] TCP: Hash tables configured (established 4096 bind 4096)
[    0.644089] TCP: reno registered
[    0.644159] UDP hash table entries: 256 (order: 2, 20480 bytes)
[    0.644424] UDP-Lite hash table entries: 256 (order: 2, 20480 bytes)
[    0.646133] NET: Registered protocol family 1
[    0.648612] RPC: Registered named UNIX socket transport module.
[    0.648675] RPC: Registered udp transport module.
[    0.648694] RPC: Registered tcp transport module.
[    0.648714] RPC: Registered tcp NFSv4.1 backchannel transport module.
[    0.650360] hw perfevents: enabled with ARMv7 Cortex-A8 PMU driver, 5 counters available
[    0.656171] futex hash table entries: 256 (order: 2, 16384 bytes)
[    0.662702] VFS: Disk quotas dquot_6.5.2
[    0.662890] Dquot-cache hash table entries: 1024 (order 0, 4096 bytes)
[    0.666375] NFS: Registering the id_resolver key type
[    0.666862] Key type id_resolver registered
[    0.666919] Key type id_legacy registered
[    0.667129] jffs2: version 2.2. (NAND) (SUMMARY)   2001-2006 Red Hat, Inc.
[    0.667757] msgmni has been set to 978
[    0.674229] io scheduler noop registered
[    0.674278] io scheduler deadline registered
[    0.674376] io scheduler cfq registered (default)
[    0.677532] pinctrl-single 44e10800.pinmux: 142 pins at pa f9e10800 size 568
[    0.681112] Serial: 8250/16550 driver, 4 ports, IRQ sharing enabled
[    0.690334] omap_uart 44e09000.serial: no wakeirq for uart0
[    0.691120] 44e09000.serial: ttyO0 at MMIO 0x44e09000 (irq = 88, base_baud = 3000000) is a OMAP UART0
[    1.401143] console [ttyO0] enabled
[    1.411407] omap_rng 48310000.rng: OMAP Random Number Generator ver. 20
[    1.449893] brd: module loaded
[    1.474285] loop: module loaded
[    1.481691] mtdoops: mtd device (mtddev=name/number) must be supplied
[    1.492605] usbcore: registered new interface driver asix
[    1.498570] usbcore: registered new interface driver ax88179_178a
[    1.505197] usbcore: registered new interface driver cdc_ether
[    1.511540] usbcore: registered new interface driver smsc95xx
[    1.517781] usbcore: registered new interface driver net1080
[    1.523877] usbcore: registered new interface driver cdc_subset
[    1.530295] usbcore: registered new interface driver zaurus
[    1.536470] usbcore: registered new interface driver cdc_ncm
[    1.543968] usbcore: registered new interface driver cdc_wdm
[    1.550356] usbcore: registered new interface driver usb-storage
[    1.556959] usbcore: registered new interface driver usbtest
[    1.567929] mousedev: PS/2 mouse device common for all mice
[    1.580260] omap_rtc 44e3e000.rtc: rtc core: registered 44e3e000.rtc as rtc0
[    1.588752] i2c /dev entries driver
[    1.592532] Driver for 1-wire Dallas network protocol.
[    1.604566] omap_wdt: OMAP Watchdog Timer Rev 0x01: initial timeout 60 sec
[    1.615495] omap_hsmmc 48060000.mmc: unable to get vmmc regulator -517
[    1.622979] platform 48060000.mmc: Driver omap_hsmmc requests probe deferral
[    1.631382] ledtrig-cpu: registered to indicate activity on CPUs
[    1.638554] usbcore: registered new interface driver usbhid
[    1.644402] usbhid: USB HID core driver
[    1.649931] oprofile: using arm/armv7
[    1.654673] TCP: cubic registered
[    1.658329] Initializing XFRM netlink socket
[    1.662995] NET: Registered protocol family 17
[    1.667833] NET: Registered protocol family 15
[    1.672918] Key type dns_resolver registered
[    1.677778] omap_voltage_late_init: Voltage driver support not added
[    1.684463] sr_dev_init: No voltage domain specified for smartreflex0. Cannot initialize
[    1.693001] sr_dev_init: No voltage domain specified for smartreflex1. Cannot initialize
[    1.702831] ThumbEE CPU extension supported.
[    1.707479] Registering SWP/SWPB emulation handler
[    1.712519] SmartReflex Class3 initialized
[    1.725544] omap-gpmc 50000000.gpmc: GPMC revision 6.0
[    1.733027] nand: device found, Manufacturer ID: 0x2c, Chip ID: 0xda
[    1.739883] nand: Micron MT29F2G08ABAEAWP
[    1.744100] nand: 256MiB, SLC, page size: 2048, OOB size: 64
[    1.750088] nand: error: CONFIG_MTD_NAND_OMAP_BCH not enabled
[    1.756267] omap2-nand: probe of omap2-nand.0 failed with error -22
[    1.903111] tps65910 0-002d: No interrupt support, no core IRQ
[    1.921980] vrtc: 1800 mV 
[    1.925837] vrtc: supplied by vbat
[    1.933879] vio: at 1800 mV 
[    1.937409] vio: supplied by vbat
[    1.945357] vdd_mpu: 912 <--> 1312 mV at 1137 mV 
[    1.950612] vdd_mpu: supplied by vbat
[    1.958642] vdd_core: 912 <--> 1150 mV at 1137 mV 
[    1.963976] vdd_core: supplied by vbat
[    1.971570] vdd3: 5000 mV 
[    1.977866] vdig1: at 1800 mV 
[    1.981381] vdig1: supplied by vbat
[    1.988624] vdig2: at 1800 mV 
[    1.992132] vdig2: supplied by vbat
[    2.996083] omap_i2c 44e0b000.i2c: controller timed out
[    4.035034] omap_i2c 44e0b000.i2c: timeout waiting for bus ready
[    4.041364] tps65910 0-002d: Error in configuring external control EN3
[    4.048352] tps65910 0-002d: Failed to initialise ext control config
[    5.075083] omap_i2c 44e0b000.i2c: timeout waiting for bus ready
[    5.081478] vpll: failed to enable
[    5.087935] tps65910 0-002d: failed to register tps65910-pmic regulator
[    5.103301] tps65910-pmic: probe of tps65910-pmic failed with error -110
[    5.111782] omap_i2c 44e0b000.i2c: bus 0 rev0.11 at 400 kHz
[    5.130255] omap_i2c 4802a000.i2c: bus 1 rev0.11 at 100 kHz
[    5.138055] omap_hsmmc 48060000.mmc: unable to get vmmc regulator -517
[    5.145463] platform 48060000.mmc: Driver omap_hsmmc requests probe deferral
[    5.215059] davinci_mdio 4a101000.mdio: davinci mdio revision 1.6
[    5.221524] davinci_mdio 4a101000.mdio: detected phy mask fffffffe
[    5.230733] libphy: 4a101000.mdio: probed
[    5.235146] davinci_mdio 4a101000.mdio: phy[0]: device 4a101000.mdio:00, driver Atheros 8031 ethernet
[    5.246402] cpsw 4a100000.ethernet: Detected MACID = 40:5f:c2:76:54:10
[    5.259050] input: volume_keys@0 as /devices/volume_keys@0/input/input0
[    5.269126] omap_hsmmc 48060000.mmc: unable to get vmmc regulator -517
[    5.276413] platform 48060000.mmc: Driver omap_hsmmc requests probe deferral
[    5.285644] omap_rtc 44e3e000.rtc: setting system clock to 2000-01-01 00:00:03 UTC (946684803)
[    5.294695] sr_init: No PMIC hook to init smartreflex
[    5.300427] sr_init: platform driver register failed for SR
[    5.330239] net eth0: initializing cpsw version 1.12 (0)
[    5.340208] omap_hsmmc 48060000.mmc: unable to get vmmc regulator -517
[    5.347627] platform 48060000.mmc: Driver omap_hsmmc requests probe deferral
[    5.416126] net eth0: phy found : id is : 0x4dd074
[    5.421378] libphy: PHY 4a101000.mdio:01 not found
[    5.426505] net eth0: phy 4a101000.mdio:01 not found on slave 1
[    9.416034] cpsw 4a100000.ethernet eth0: Link is Up - 1Gbps/Full - flow control rx/tx
[    9.435064] Sending DHCP requests ., OK
[    9.485516] IP-Config: Got DHCP answer from 192.168.0.1, my address is 192.168.0.75
[    9.493986] IP-Config: Complete:
[    9.497502]      device=eth0, hwaddr=40:5f:c2:76:54:10, ipaddr=192.168.0.75, mask=255.255.255.0, gw=192.168.0.1
[    9.508123]      host=192.168.0.75, domain=ti.com, nis-domain=(none)
[    9.514783]      bootserver=192.168.0.1, rootserver=192.168.0.1, rootpath=
[    9.521848]      nameserver0=192.0.2.2, nameserver1=192.0.2.3
[    9.528405] lis3_reg: disabling
[    9.535563] Waiting for root device /dev/mmcblk0p2...

