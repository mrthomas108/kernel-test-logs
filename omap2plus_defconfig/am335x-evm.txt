- 03:24:19 [INFO] Starting target session
- 03:24:19 [INFO] Connected to am335x-evm via serial 
- 03:24:19 [INFO] Host: #check prompt
- 03:24:21 [ERROR] On command: #check prompt waiting for (?-mix:((?-mix:login:)|[Pp]assword)) >>> error: execution expired
- 03:24:21 [INFO] Target: 
#check prompt
root@am335x-evm:~# 
- 03:24:21 [INFO] Host: #check prompt
- 03:24:22 [INFO] Target: 
#check prompt
root@am335x-evm:~# 
- 03:24:22 [INFO] Host: sync;poweroff
- 03:24:40 [INFO] Target: 
sync;poweroff


Broadcast message from root@am335x-evm (ttyO0) (Sat Jul 26 07:09:27 2014):



The system is going down for system halt NOW!


INIT: Switching to runlevel: 0

root@am335x-evm:~# 
INIT: Sending processes the TERM signal


INIT: Sending processes UIM SYSFS Node Not Found
Stopping Dropbear SSH server: stopped /usr/sbin/dropbear (pid 921)
dropbear.
Stopping telnet daemon.
Stopping system message bus: dbus.
Error opening /dev/fb0: No such file or directory
Stopping syslogd/klogd: stopped syslogd (pid 956)
stopped klogd (pid 959)
done
Stopping thttpd.
stopping statd: done
ALSA: Storing mixer settings...
/usr/sbin/alsactl: save_state:1590: No soundcards found...
Stopping rpcbind daemon...
done.
Stopping Lighttpd Web Server: stopped /usr/sbin/lighttpd (pid 970)
lighttpd.
NOT deconfiguring network interfaces: / is an NFS mount
Stopping Matrix GUI applicationstart-stop-daemon: warning: killing process 983: No such process
.
***************************************************************
***************************************************************
NOTICE: This file system contains the followin GPLv3 packages:
	binutils
	elfutils
	gdbserver
	libdw1
	libelf1
	m4

If you do not wish to distribute GPLv3 components please remove
the above packages prior to distribution.  This can be done using
the opkg remove command.  i.e.:
    opkg remove <package>
Where <package> is the name printed in the list above

NOTE: If the package is a dependency of another package you
      will be notified of the dependent packages.  You should
      use the --force-removal-of-dependent-packages option to
      also remove the dependent packages as well
***************************************************************
***************************************************************
Sending all processes the TERM signal...
Sending all processes the KILL signal...
Unmounting remote filesystems...
Deactivating swap...
Unmounting local filesystems...
[ 9004.743325] reboot: System halted

- 03:24:40 [INFO] Disconnected serial from am335x-evm
- 03:25:01 [INFO] Connected to am335x-evm via serial 
- 03:25:01 [INFO] Host: 
- 03:25:02 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 03:25:02 [INFO] Target: 

U-Boot SPL 2014.07-rc2 (May 29 2014 - 18:04:30)
i2c_read: error waiting for addr ACK (status=0x106)
Could not probe the EEPROM; something fundamentally wrong on the I2C bus.
Could not get board ID.

- 03:25:02 [INFO] Host: 
- 03:25:02 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 03:25:02 [INFO] Target: 
Timed out in wait_for_bb: status=1000
Could not probe the EEPROM; something fundamentally wrong on the I2C bus.
Could not get board ID.

- 03:25:02 [INFO] Host: 
- 03:25:03 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 03:25:03 [INFO] Target: 
Timed out in wait_for_bb: status=1000
reading u-boot.img
reading u-boot.img


U-Boot 2014.07-rc2 (May 29 2014 - 18:04:30)

I2C:   
- 03:25:03 [INFO] Host: 
- 03:25:03 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 03:25:03 [INFO] Target: 
ready
DRAM:  512 MiB

- 03:25:03 [INFO] Host: 
- 03:25:04 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 03:25:04 [INFO] Target: 
NAND:  256 MiB
MMC:   OMAP SD/MMC: 0, OMAP SD/MMC: 1

- 03:25:04 [INFO] Host: 
- 03:25:04 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 03:25:04 [INFO] Target: 

- 03:25:04 [INFO] Host: 
- 03:25:05 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 03:25:05 [INFO] Target: 

- 03:25:05 [INFO] Host: 
- 03:25:05 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 03:25:05 [INFO] Target: 

- 03:25:05 [INFO] Host: 
- 03:25:06 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 03:25:06 [INFO] Target: 
Net:   <ethaddr> not set. Validating first E-fuse MAC
cpsw, usb_ether
Hit any key to stop autoboot:  1  0 
U-Boot# 
U-Boot# 
U-Boot# 
U-Boot# 
U-Boot# 
U-Boot# 
- 03:25:06 [INFO] Host: 
- 03:25:06 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 03:25:06 [INFO] Target: 

U-Boot# 
- 03:25:06 [INFO] Host: 
- 03:25:07 [INFO] Target: 

U-Boot# 
- 03:25:07 [INFO] Host: 
- 03:25:07 [INFO] Target: 

U-Boot# 
- 03:25:07 [INFO] Host: version
- 03:25:08 [INFO] Target: 
version

U-Boot 2014.07-rc2 (May 29 2014 - 18:04:30)
arm-linux-gnueabihf-gcc (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 4.7.3 20130226 (prerelease)
GNU ld (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 2.23.1
U-Boot# 
- 03:25:08 [INFO] Host: setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait  '
- 03:25:08 [INFO] Target: 
setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait  '
U-Boot# 
- 03:25:08 [INFO] Host: setenv bootcmd  ''
- 03:25:09 [INFO] Target: 
setenv bootcmd  ''
U-Boot# 
- 03:25:09 [INFO] Host: setenv autoload 'no'
- 03:25:09 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 03:25:09 [INFO] Host: setenv serverip '192.168.0.1'
- 03:25:10 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 03:25:10 [INFO] Host: printenv
- 03:25:10 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A33515BB
board_rev=1.1A
boot_fdt=try
bootargs=console=ttyO0,115200n8 earlyprintk rootwait  
bootcmd=
bootcount=1
bootdelay=1
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 0x100 0x100;u-boot.img.raw mmc 0x300 0x400;spl-os-args.raw mmc 0x80 0x80;spl-os-image.raw mmc 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
eth1addr=40:5f:c2:76:54:11
ethact=cpsw
ethaddr=40:5f:c2:76:54:10
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=omap2-nand.0
mtdparts=mtdparts=omap2-nand.0:128k(SPL),128k(SPL.backup1),128k(SPL.backup2),128k(SPL.backup3),1792k(u-boot),128k(u-boot-spl-os),128k(u-boot-env),5m(kernel),-(rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} u-boot-spl-os; nand read ${loadaddr} kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=7,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usbnet_devaddr=40:5f:c2:76:54:11
vendor=ti
ver=U-Boot 2014.07-rc2 (May 29 2014 - 18:04:30)

Environment size: 4367/131068 bytes
U-Boot# 
- 03:25:10 [INFO] Host: printenv
- 03:25:11 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A33515BB
board_rev=1.1A
boot_fdt=try
bootargs=console=ttyO0,115200n8 earlyprintk rootwait  
bootcmd=
bootcount=1
bootdelay=1
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 0x100 0x100;u-boot.img.raw mmc 0x300 0x400;spl-os-args.raw mmc 0x80 0x80;spl-os-image.raw mmc 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
eth1addr=40:5f:c2:76:54:11
ethact=cpsw
ethaddr=40:5f:c2:76:54:10
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=omap2-nand.0
mtdparts=mtdparts=omap2-nand.0:128k(SPL),128k(SPL.backup1),128k(SPL.backup2),128k(SPL.backup3),1792k(u-boot),128k(u-boot-spl-os),128k(u-boot-env),5m(kernel),-(rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} u-boot-spl-os; nand read ${loadaddr} kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=7,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usbnet_devaddr=40:5f:c2:76:54:11
vendor=ti
ver=U-Boot 2014.07-rc2 (May 29 2014 - 18:04:30)

Environment size: 4367/131068 bytes
U-Boot# 
- 03:25:11 [INFO] Host: setenv bootargs ''${bootargs}' ip=dhcp '
- 03:25:11 [INFO] Target: 
setenv bootargs ''${bootargs}' ip=dhcp '
U-Boot# 
- 03:25:11 [INFO] Host: setenv serverip '192.168.0.1'
- 03:25:12 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 03:25:12 [INFO] Host: setenv ipaddr dhcp
- 03:25:12 [INFO] Target: 
setenv ipaddr dhcp
U-Boot# 
- 03:25:12 [INFO] Host: setenv autoload 'no'
- 03:25:13 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 03:25:13 [INFO] Host: dhcp
- 03:26:13 [ERROR] On command: dhcp waiting for (?-mix:U-Boot#) >>> error: execution expired
- 03:26:13 [INFO] Target: 
dhcp
link up on port 0, speed 1000, full duplex
BOOTP broadcast 1
BOOTP broadcast 2
BOOTP broadcast 3
BOOTP broadcast 4
BOOTP broadcast 5
BOOTP broadcast 6
BOOTP broadcast 7
BOOTP broadcast 8
BOOTP broadcast 9
BOOTP broadcast 10

Retry count exceeded; starting again
using musb-hdrc, OUT ep1out IN ep1in STATUS ep2in
MAC 40:5f:c2:76:54:11
HOST MAC de:ad:be:af:00:00
RNDIS ready
ERROR: The remote end did not respond in time.
at drivers/usb/gadget/ether.c:2388/usb_eth_init()
link up on port 0, speed 1000, full duplex
BOOTP broadcast 1
BOOTP broadcast 2
BOOTP broadcast 3
BOOTP broadcast 4
BOOTP broadcast 5
BOOTP broadcast 6

