- 14:23:00 [INFO] Starting target session
- 14:23:00 [INFO] Connected to am335x-evm via serial 
- 14:23:00 [INFO] Host: 
- 14:23:02 [ERROR] On command:  waiting for (?-mix:login:) >>> error: execution expired
- 14:23:02 [INFO] Target: 

- 14:23:02 [INFO] Host: 
- 14:23:07 [ERROR] On command:  waiting for (?-mix:[\w\d]+@.+[@:#]+) >>> error: execution expired
- 14:23:07 [INFO] Target: 

- 14:23:28 [INFO] Disconnected serial from am335x-evm
- 14:23:28 [INFO] Connected to am335x-evm via serial 
- 14:23:28 [INFO] Host: 
- 14:23:29 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 14:23:29 [INFO] Target: 

U-Boot SPL 2013.10-g310aa48 (Dec 15 2013 - 22:31:18)

- 14:23:29 [INFO] Host: 
- 14:23:29 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 14:23:29 [INFO] Target: 
reading args
spl: error reading image args, err - -1
reading u-boot.img
reading u-boot.img


U-Boot 2013.10-g310aa48 (Dec 15 2013 - 22:31:18)

I2C:   ready
DRAM:  1 GiB

- 14:23:29 [INFO] Host: 
- 14:23:30 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 14:23:30 [INFO] Target: 
NAND:  256 MiB
MMC:   OMAP SD/MMC: 0, OMAP SD/MMC: 1

- 14:23:30 [INFO] Host: 
- 14:23:30 [INFO] Target: 
*** Warning - bad CRC, using default environment

Net:   <ethaddr> not set. Validating first E-fuse MAC
cpsw, usb_ether
Hit any key to stop autoboot:  3  0 
U-Boot# 
U-Boot# 
- 14:23:30 [INFO] Host: 
- 14:23:31 [INFO] Target: 

U-Boot# 
- 14:23:31 [INFO] Host: version
- 14:23:31 [INFO] Target: 
version

U-Boot 2013.10-g310aa48 (Dec 15 2013 - 22:31:18)
arm-linux-gnueabihf-gcc (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 4.7.3 20130226 (prerelease)
GNU ld (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 2.23.1
U-Boot# 
- 14:23:31 [INFO] Host: setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait  '
- 14:23:32 [INFO] Target: 
setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait  '
U-Boot# 
- 14:23:32 [INFO] Host: setenv bootcmd  ''
- 14:23:32 [INFO] Target: 
setenv bootcmd  ''
U-Boot# 
- 14:23:32 [INFO] Host: setenv autoload 'no'
- 14:23:33 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 14:23:33 [INFO] Host: setenv serverip '192.168.0.1'
- 14:23:33 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 14:23:33 [INFO] Host: printenv
- 14:23:34 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A33515BB
board_rev=1.5B
boot_fdt=try
boot_targets= mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait  
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 100 100;u-boot.img.raw mmc 300 400;spl-os-args.raw mmc 80 80;spl-os-image.raw mmc 900 2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
eth1addr=c8:a0:30:a1:b6:c2
ethact=cpsw
ethaddr=c8:a0:30:a1:b6:c0
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(SPL),128k(SPL.backup1),128k(SPL.backup2),640k(SPL.backup3),1m(u-boot),512k(u-boot-spl-os),256k(u-boot-env),256k(u-boot-env.backup1),5m(kernel),-(rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} u-boot-spl-os; nand read ${loadaddr} kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=9,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
nfsopts=nolock
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usbnet_devaddr=c8:a0:30:a1:b6:c2
vendor=ti
ver=U-Boot 2013.10-g310aa48 (Dec 15 2013 - 22:31:18)

Environment size: 4824/131067 bytes
U-Boot# 
- 14:23:34 [INFO] Host: printenv
- 14:23:34 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A33515BB
board_rev=1.5B
boot_fdt=try
boot_targets= mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait  
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 100 100;u-boot.img.raw mmc 300 400;spl-os-args.raw mmc 80 80;spl-os-image.raw mmc 900 2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
eth1addr=c8:a0:30:a1:b6:c2
ethact=cpsw
ethaddr=c8:a0:30:a1:b6:c0
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(SPL),128k(SPL.backup1),128k(SPL.backup2),640k(SPL.backup3),1m(u-boot),512k(u-boot-spl-os),256k(u-boot-env),256k(u-boot-env.backup1),5m(kernel),-(rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} u-boot-spl-os; nand read ${loadaddr} kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=9,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
nfsopts=nolock
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usbnet_devaddr=c8:a0:30:a1:b6:c2
vendor=ti
ver=U-Boot 2013.10-g310aa48 (Dec 15 2013 - 22:31:18)

Environment size: 4824/131067 bytes
U-Boot# 
- 14:23:34 [INFO] Host: setenv bootargs ''${bootargs}' ip=dhcp '
- 14:23:35 [INFO] Target: 
setenv bootargs ''${bootargs}' ip=dhcp '
U-Boot# 
- 14:23:35 [INFO] Host: setenv ipaddr dhcp
- 14:23:35 [INFO] Target: 
setenv ipaddr dhcp
U-Boot# 
- 14:23:35 [INFO] Host: dhcp
- 14:23:37 [INFO] Target: 
dhcp
link up on port 0, speed 1000, full duplex
BOOTP broadcast 1
DHCP client bound to address 192.168.0.126
U-Boot# 
- 14:23:37 [INFO] Host: setenv serverip '192.168.0.1'
- 14:23:37 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 14:23:37 [INFO] Host: tftp ${loadaddr} 192.168.0.1:vatf_am335x-evm/9b66bb113c04a064c580f94bc8d7bd6c
- 14:23:38 [INFO] Target: 
tftp ${loadaddr} 192.168.0.1:vatf_am335x-evm/9b66bb113c04a064c580f94bc8d7bd6c
link up on port 0, speed 1000, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.126
Filename 'vatf_am335x-evm/9b66bb113c04a064c580f94bc8d7bd6c'.
Load address: 0x80200000
Loading: *#################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 ##################################
	 9.2 MiB/s
done
Bytes transferred = 4307240 (41b928 hex)
U-Boot# 
- 14:23:38 [INFO] Host: tftp ${fdtaddr} 192.168.0.1:vatf_am335x-evm/e1bcc7547f3167900bc41f210736d37b
- 14:23:38 [INFO] Target: 
tftp ${fdtaddr} 192.168.0.1:vatf_am335x-evm/e1bcc7547f3167900bc41f210736d37b
link up on port 0, speed 1000, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.126
Filename 'vatf_am335x-evm/e1bcc7547f3167900bc41f210736d37b'.
Load address: 0x80f80000
Loading: *###
	 6.7 MiB/s
done
Bytes transferred = 34983 (88a7 hex)
U-Boot# 
- 14:23:38 [INFO] Host: printenv
- 14:23:39 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A33515BB
board_rev=1.5B
boot_fdt=try
boot_targets= mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait ip=dhcp
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 100 100;u-boot.img.raw mmc 300 400;spl-os-args.raw mmc 80 80;spl-os-image.raw mmc 900 2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
dnsip=192.0.2.2
dnsip2=192.0.2.3
eth1addr=c8:a0:30:a1:b6:c2
ethact=cpsw
ethaddr=c8:a0:30:a1:b6:c0
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
fileaddr=80f80000
filesize=88a7
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
ipaddr=192.168.0.126
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(SPL),128k(SPL.backup1),128k(SPL.backup2),640k(SPL.backup3),1m(u-boot),512k(u-boot-spl-os),256k(u-boot-env),256k(u-boot-env.backup1),5m(kernel),-(rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} u-boot-spl-os; nand read ${loadaddr} kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=9,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
netmask=255.255.255.0
nfsopts=nolock
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usbnet_devaddr=c8:a0:30:a1:b6:c2
vendor=ti
ver=U-Boot 2013.10-g310aa48 (Dec 15 2013 - 22:31:18)

Environment size: 4974/131067 bytes
U-Boot# 
- 14:23:39 [INFO] Host: setenv bootargs ''${bootargs}' root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait '
- 14:23:39 [INFO] Target: 
setenv bootargs ''${bootargs}' root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait '
U-Boot# 
- 14:23:39 [INFO] Host: printenv
- 14:23:40 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A33515BB
board_rev=1.5B
boot_fdt=try
boot_targets= mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait ip=dhcp root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 100 100;u-boot.img.raw mmc 300 400;spl-os-args.raw mmc 80 80;spl-os-image.raw mmc 900 2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
dnsip=192.0.2.2
dnsip2=192.0.2.3
eth1addr=c8:a0:30:a1:b6:c2
ethact=cpsw
ethaddr=c8:a0:30:a1:b6:c0
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
fileaddr=80f80000
filesize=88a7
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
ipaddr=192.168.0.126
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(SPL),128k(SPL.backup1),128k(SPL.backup2),640k(SPL.backup3),1m(u-boot),512k(u-boot-spl-os),256k(u-boot-env),256k(u-boot-env.backup1),5m(kernel),-(rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} u-boot-spl-os; nand read ${loadaddr} kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=9,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
netmask=255.255.255.0
nfsopts=nolock
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usbnet_devaddr=c8:a0:30:a1:b6:c2
vendor=ti
ver=U-Boot 2013.10-g310aa48 (Dec 15 2013 - 22:31:18)

Environment size: 5022/131067 bytes
U-Boot# 
- 14:23:40 [INFO] Host: setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} - ${fdtaddr}; else bootz ${loadaddr} - ${fdtaddr}; bootm ${loadaddr} - ${fdtaddr}; fi'
- 14:23:40 [INFO] Target: 
setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} - ${fdtaddr}; else bootz ${loadaddr} - ${fdtaddr}; bootm ${loadaddr} - ${fdtaddr}; fi'
U-Boot# 
- 14:23:40 [INFO] Host: bdinfo
- 14:23:41 [INFO] Target: 
bdinfo
arch_number = 0x00000E05
boot_params = 0x80000100
DRAM bank   = 0x00000000
-> start    = 0x80000000
-> size     = 0x40000000
eth0name    = cpsw
ethaddr     = c8:a0:30:a1:b6:c0
eth1name    = usb_ether
eth1addr    = c8:a0:30:a1:b6:c2
current eth = cpsw
ip_addr     = 192.168.0.126
baudrate    = 115200 bps
TLB addr    = 0xBFFF0000
relocaddr   = 0xBF750000
reloc off   = 0x3EF50000
irq_sp      = 0xBF62FF38
sp start    = 0xBF62FF28
U-Boot# 
- 14:23:41 [INFO] Host: boot
- 14:26:11 [ERROR] On command: boot waiting for (?-mix:login:) >>> error: execution expired
- 14:26:11 [INFO] Target: 
boot

## Checking Image at 80200000 ...
Unknown image format!
Kernel image @ 0x80200000 [ 0x000000 - 0x41b928 ]
## Flattened Device Tree blob at 80f80000
   Booting using the fdt blob at 0x80f80000
   Loading Device Tree to 9fff4000, end 9ffff8a6 ... OK

Starting kernel ...

[    0.000000] Booting Linux on physical CPU 0x0
[    0.000000] Linux version 3.15.0-rc5-next-20140513-00002-gf406298 (nmenon@kahuna) (gcc version 4.6.3 (Ubuntu/Linaro 4.6.3-1ubuntu5) ) #1 SMP Tue May 13 05:28:26 CDT 2014
[    0.000000] CPU: ARMv7 Processor [413fc082] revision 2 (ARMv7), cr=10c5387d
[    0.000000] CPU: PIPT / VIPT nonaliasing data cache, VIPT aliasing instruction cache
[    0.000000] Machine model: TI AM335x EVM
[    0.000000] cma: CMA: reserved 16 MiB at ae800000
[    0.000000] Memory policy: Data cache writeback
[    0.000000] CPU: All CPU(s) started in SVC mode.
[    0.000000] AM335X ES2.1 (sgx neon )
[    0.000000] PERCPU: Embedded 9 pages/cpu @edfb7000 s13568 r8192 d15104 u36864
[    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 260368
[    0.000000] Kernel command line: console=ttyO0,115200n8 earlyprintk rootwait ip=dhcp root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait
[    0.000000] PID hash table entries: 4096 (order: 2, 16384 bytes)
[    0.000000] Dentry cache hash table entries: 131072 (order: 7, 524288 bytes)
[    0.000000] Inode-cache hash table entries: 65536 (order: 6, 262144 bytes)
[    0.000000] Memory: 1004668K/1047552K available (5604K kernel code, 672K rwdata, 2168K rodata, 393K init, 8339K bss, 42884K reserved, 269312K highmem)
[    0.000000] Virtual kernel memory layout:
[    0.000000]     vector  : 0xffff0000 - 0xffff1000   (   4 kB)
[    0.000000]     fixmap  : 0xffc00000 - 0xffe00000   (2048 kB)
[    0.000000]     vmalloc : 0xf0000000 - 0xff000000   ( 240 MB)
[    0.000000]     lowmem  : 0xc0000000 - 0xef800000   ( 760 MB)
[    0.000000]     pkmap   : 0xbfe00000 - 0xc0000000   (   2 MB)
[    0.000000]     modules : 0xbf000000 - 0xbfe00000   (  14 MB)
[    0.000000]       .text : 0xc0008000 - 0xc079f3d0   (7773 kB)
[    0.000000]       .init : 0xc07a0000 - 0xc0802500   ( 394 kB)
[    0.000000]       .data : 0xc0804000 - 0xc08ac098   ( 673 kB)
[    0.000000]        .bss : 0xc08ac098 - 0xc10d0d58   (8340 kB)
[    0.000000] Hierarchical RCU implementation.
[    0.000000] 	RCU restricting CPUs from NR_CPUS=2 to nr_cpu_ids=1.
[    0.000000] RCU: Adjusting geometry for rcu_fanout_leaf=16, nr_cpu_ids=1
[    0.000000] NR_IRQS:16 nr_irqs:16 16
[    0.000000] IRQ: Found an INTC at 0xfa200000 (revision 5.0) with 128 interrupts
[    0.000000] Total of 128 interrupts on 1 active controller
[    0.000000] OMAP clockevent source: timer2 at 24000000 Hz
[    0.000015] sched_clock: 32 bits at 24MHz, resolution 41ns, wraps every 178956969942ns
[    0.000067] OMAP clocksource: timer1 at 24000000 Hz
[    0.000836] Console: colour dummy device 80x30
[    0.000881] Lock dependency validator: Copyright (c) 2006 Red Hat, Inc., Ingo Molnar
[    0.000896] ... MAX_LOCKDEP_SUBCLASSES:  8
[    0.000908] ... MAX_LOCK_DEPTH:          48
[    0.000920] ... MAX_LOCKDEP_KEYS:        8191
[    0.000932] ... CLASSHASH_SIZE:          4096
[    0.000943] ... MAX_LOCKDEP_ENTRIES:     32768
[    0.000955] ... MAX_LOCKDEP_CHAINS:      65536
[    0.000966] ... CHAINHASH_SIZE:          32768
[    0.000978]  memory used by lock dependency info: 5167 kB
[    0.000990]  per task-struct memory footprint: 1152 bytes
[    0.001044] Calibrating delay loop... 996.14 BogoMIPS (lpj=4980736)
[    0.079017] pid_max: default: 32768 minimum: 301
[    0.079432] Security Framework initialized
[    0.079564] Mount-cache hash table entries: 2048 (order: 1, 8192 bytes)
[    0.079584] Mountpoint-cache hash table entries: 2048 (order: 1, 8192 bytes)
[    0.081890] CPU: Testing write buffer coherency: ok
[    0.083106] CPU0: thread -1, cpu 0, socket -1, mpidr 0
[    0.083241] Setting up static identity map for 0x8054fae8 - 0x8054fb58
[    0.086544] Brought up 1 CPUs
[    0.086570] SMP: Total of 1 processors activated.
[    0.086585] CPU: All CPU(s) started in SVC mode.
[    0.089720] devtmpfs: initialized
[    0.098398] VFP support v0.3: implementor 41 architecture 3 part 30 variant c rev 3
[    0.135219] omap_hwmod: tptc0 using broken dt data from edma
[    0.135600] omap_hwmod: tptc1 using broken dt data from edma
[    0.135953] omap_hwmod: tptc2 using broken dt data from edma
[    0.143922] omap_hwmod: debugss: _wait_target_disable failed
[    0.201773] pinctrl core: initialized pinctrl subsystem
[    0.204355] regulator-dummy: no parameters
[    0.236028] NET: Registered protocol family 16
[    0.242178] DMA: preallocated 256 KiB pool for atomic coherent allocations
[    0.254801] platform 49000000.edma: alias fck already exists
[    0.254898] platform 49000000.edma: alias fck already exists
[    0.254922] platform 49000000.edma: alias fck already exists
[    0.257709] OMAP GPIO hardware version 0.1
[    0.264418] No ATAGs?
[    0.264454] hw-breakpoint: debug architecture 0x4 unsupported.
[    0.308010] edma-dma-engine edma-dma-engine.0: TI EDMA DMA engine driver
[    0.310797] SCSI subsystem initialized
[    0.311628] usbcore: registered new interface driver usbfs
[    0.311809] usbcore: registered new interface driver hub
[    0.314952] usbcore: registered new device driver usb
[    0.319952] Switched to clocksource timer1
[    0.472618] NET: Registered protocol family 2
[    0.474487] TCP established hash table entries: 8192 (order: 3, 32768 bytes)
[    0.474740] TCP bind hash table entries: 8192 (order: 6, 294912 bytes)
[    0.477416] TCP: Hash tables configured (established 8192 bind 8192)
[    0.477656] TCP: reno registered
[    0.477713] UDP hash table entries: 512 (order: 3, 40960 bytes)
[    0.478080] UDP-Lite hash table entries: 512 (order: 3, 40960 bytes)
[    0.479283] NET: Registered protocol family 1
[    0.481583] RPC: Registered named UNIX socket transport module.
[    0.481635] RPC: Registered udp transport module.
[    0.481650] RPC: Registered tcp transport module.
[    0.481665] RPC: Registered tcp NFSv4.1 backchannel transport module.
[    0.482914] hw perfevents: enabled with ARMv7 Cortex-A8 PMU driver, 5 counters available
[    0.485853] futex hash table entries: 256 (order: 2, 16384 bytes)
[    0.489456] bounce: pool size: 64 pages
[    0.491485] VFS: Disk quotas dquot_6.5.2
[    0.491631] Dquot-cache hash table entries: 1024 (order 0, 4096 bytes)
[    0.493792] NFS: Registering the id_resolver key type
[    0.494191] Key type id_resolver registered
[    0.494239] Key type id_legacy registered
[    0.494391] jffs2: version 2.2. (NAND) (SUMMARY)   2001-2006 Red Hat, Inc.
[    0.494862] msgmni has been set to 1468
[    0.500301] io scheduler noop registered
[    0.500344] io scheduler deadline registered
[    0.500421] io scheduler cfq registered (default)
[    0.502398] pinctrl-single 44e10800.pinmux: 142 pins at pa f9e10800 size 568
[    0.505052] Serial: 8250/16550 driver, 4 ports, IRQ sharing enabled
[    0.510869] omap_uart 44e09000.serial: no wakeirq for uart0
[    0.511478] 44e09000.serial: ttyO0 at MMIO 0x44e09000 (irq = 88, base_baud = 3000000) is a OMAP UART0
[    1.153034] console [ttyO0] enabled
[    1.182070] brd: module loaded
[    1.200671] loop: module loaded
[    1.206574] mtdoops: mtd device (mtddev=name/number) must be supplied
[    1.215767] usbcore: registered new interface driver asix
[    1.221657] usbcore: registered new interface driver ax88179_178a
[    1.228156] usbcore: registered new interface driver cdc_ether
[    1.234482] usbcore: registered new interface driver smsc95xx
[    1.240655] usbcore: registered new interface driver net1080
[    1.246694] usbcore: registered new interface driver cdc_subset
[    1.253043] usbcore: registered new interface driver zaurus
[    1.259098] usbcore: registered new interface driver cdc_ncm
[    1.266285] usbcore: registered new interface driver cdc_wdm
[    1.272497] usbcore: registered new interface driver usb-storage
[    1.278949] usbcore: registered new interface driver usbtest
[    1.289383] mousedev: PS/2 mouse device common for all mice
[    1.298103] i2c /dev entries driver
[    1.301967] Driver for 1-wire Dallas network protocol.
[    1.308947] ledtrig-cpu: registered to indicate activity on CPUs
[    1.315863] usbcore: registered new interface driver usbhid
[    1.321738] usbhid: USB HID core driver
[    1.326619] oprofile: using arm/armv7
[    1.331170] TCP: cubic registered
[    1.334693] Initializing XFRM netlink socket
[    1.339291] NET: Registered protocol family 17
[    1.344118] NET: Registered protocol family 15
[    1.349113] Key type dns_resolver registered
[    1.354939] ThumbEE CPU extension supported.
[    1.359466] Registering SWP/SWPB emulation handler
[    1.370948] drivers/rtc/hctosys.c: unable to open rtc device (rtc0)
[   13.512906] Waiting for root device /dev/mmcblk0p2...

