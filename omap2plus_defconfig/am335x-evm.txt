- 06:34:11 [INFO] Starting target session
- 06:34:12 [INFO] Connected to am335x-evm via serial 
- 06:34:12 [INFO] Host: 
- 06:34:14 [ERROR] On command:  waiting for (?-mix:login:) >>> error: execution expired
- 06:34:14 [INFO] Target: 

- 06:34:14 [INFO] Host: 
- 06:34:19 [ERROR] On command:  waiting for (?-mix:[\w\d]+@.+[@:#]+) >>> error: execution expired
- 06:34:19 [INFO] Target: 

- 06:34:40 [INFO] Disconnected serial from am335x-evm
- 06:34:40 [INFO] Connected to am335x-evm via serial 
- 06:34:40 [INFO] Host: 
- 06:34:40 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 06:34:40 [INFO] Target: 

U-Boot SPL 2013.10-gaa25212 (Feb 06 2014 - 21:36:54)

- 06:34:40 [INFO] Host: 
- 06:34:41 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 06:34:41 [INFO] Target: 
reading args
spl: error reading image args, err - -1
reading u-boot.img
reading u-boot.img


U-Boot 2013.10-gaa25212 (Feb 06 2014 - 21:36:54)

I2C:   ready
DRAM:  512 MiB

- 06:34:41 [INFO] Host: 
- 06:34:41 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 06:34:41 [INFO] Target: 
NAND:  256 MiB
MMC:   OMAP SD/MMC: 0, OMAP SD/MMC: 1

- 06:34:41 [INFO] Host: 
- 06:34:42 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 06:34:42 [INFO] Target: 
*** Warning - bad CRC, using default environment


- 06:34:42 [INFO] Host: 
- 06:34:42 [INFO] Target: 
Net:   <ethaddr> not set. Validating first E-fuse MAC
cpsw, usb_ether
Hit any key to stop autoboot:  3  0 
U-Boot# 
U-Boot# 
U-Boot# 
- 06:34:42 [INFO] Host: 
- 06:34:43 [INFO] Target: 

U-Boot# 
- 06:34:43 [INFO] Host: version
- 06:34:43 [INFO] Target: 
version

U-Boot 2013.10-gaa25212 (Feb 06 2014 - 21:36:54)
arm-linux-gnueabihf-gcc (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 4.7.3 20130226 (prerelease)
GNU ld (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 2.23.1
U-Boot# 
- 06:34:43 [INFO] Host: setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait  '
- 06:34:44 [INFO] Target: 
setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait  '
U-Boot# 
- 06:34:44 [INFO] Host: setenv bootcmd  ''
- 06:34:44 [INFO] Target: 
setenv bootcmd  ''
U-Boot# 
- 06:34:44 [INFO] Host: setenv autoload 'no'
- 06:34:45 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 06:34:45 [INFO] Host: setenv serverip '192.168.0.1'
- 06:34:45 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 06:34:45 [INFO] Host: printenv
- 06:34:46 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A33515BB
board_rev=1.1A
boot_fdt=try
boot_targets= mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait  
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootcmd_usb=setenv devnum 0; run usb_boot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 100 100;u-boot.img.raw mmc 300 400;spl-os-args.raw mmc 80 80;spl-os-image.raw mmc 900 2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=NAND.SPL part 0 1;NAND.SPL.backup1 part 0 2;NAND.SPL.backup2 part 0 3;NAND.SPL.backup3 part 0 4;NAND.u-boot-spl-os part 0 5;NAND.u-boot part 0 6;NAND.u-boot-env part 0 7;NAND.u-boot-env.backup1 part 0 8;NAND.kernel part 0 9;NAND.rootfs part 0 10
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
eth1addr=40:5f:c2:76:54:11
ethact=cpsw
ethaddr=40:5f:c2:76:54:10
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usb_boot=setenv devtype usb; run usb_init; if usb dev 0; then run usbargs;run scan_boot; bootz ${loadaddr} - ${fdtaddr}; fi
usb_init=usb start 0;
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbnet_devaddr=40:5f:c2:76:54:11
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2013.10-gaa25212 (Feb 06 2014 - 21:36:54)

Environment size: 5440/131067 bytes
U-Boot# 
- 06:34:46 [INFO] Host: printenv
- 06:34:46 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A33515BB
board_rev=1.1A
boot_fdt=try
boot_targets= mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait  
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootcmd_usb=setenv devnum 0; run usb_boot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 100 100;u-boot.img.raw mmc 300 400;spl-os-args.raw mmc 80 80;spl-os-image.raw mmc 900 2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=NAND.SPL part 0 1;NAND.SPL.backup1 part 0 2;NAND.SPL.backup2 part 0 3;NAND.SPL.backup3 part 0 4;NAND.u-boot-spl-os part 0 5;NAND.u-boot part 0 6;NAND.u-boot-env part 0 7;NAND.u-boot-env.backup1 part 0 8;NAND.kernel part 0 9;NAND.rootfs part 0 10
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
eth1addr=40:5f:c2:76:54:11
ethact=cpsw
ethaddr=40:5f:c2:76:54:10
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usb_boot=setenv devtype usb; run usb_init; if usb dev 0; then run usbargs;run scan_boot; bootz ${loadaddr} - ${fdtaddr}; fi
usb_init=usb start 0;
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbnet_devaddr=40:5f:c2:76:54:11
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2013.10-gaa25212 (Feb 06 2014 - 21:36:54)

Environment size: 5440/131067 bytes
U-Boot# 
- 06:34:46 [INFO] Host: setenv bootargs ''${bootargs}' ip=dhcp '
- 06:34:47 [INFO] Target: 
setenv bootargs ''${bootargs}' ip=dhcp '
U-Boot# 
- 06:34:47 [INFO] Host: setenv ipaddr dhcp
- 06:34:47 [INFO] Target: 
setenv ipaddr dhcp
U-Boot# 
- 06:34:47 [INFO] Host: dhcp
- 06:34:49 [INFO] Target: 
dhcp
link up on port 0, speed 1000, full duplex
BOOTP broadcast 1
DHCP client bound to address 192.168.0.61
U-Boot# 
- 06:34:49 [INFO] Host: setenv serverip '192.168.0.1'
- 06:34:49 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 06:34:49 [INFO] Host: tftp ${loadaddr} 192.168.0.1:vatf_am335x-evm/0cda013cb7809e116139fa194fad7043
- 06:34:50 [INFO] Target: 
tftp ${loadaddr} 192.168.0.1:vatf_am335x-evm/0cda013cb7809e116139fa194fad7043
link up on port 0, speed 1000, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.61
Filename 'vatf_am335x-evm/0cda013cb7809e116139fa194fad7043'.
Load address: 0x80200000
Loading: *#################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 ####################################
	 13.6 MiB/s
done
Bytes transferred = 4336696 (422c38 hex)
U-Boot# 
- 06:34:50 [INFO] Host: tftp ${fdtaddr} 192.168.0.1:vatf_am335x-evm/1adb53ce9408c0f4db99772e87471fe2
- 06:34:50 [INFO] Target: 
tftp ${fdtaddr} 192.168.0.1:vatf_am335x-evm/1adb53ce9408c0f4db99772e87471fe2
link up on port 0, speed 1000, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.61
Filename 'vatf_am335x-evm/1adb53ce9408c0f4db99772e87471fe2'.
Load address: 0x80f80000
Loading: *###
	 8.2 MiB/s
done
Bytes transferred = 34536 (86e8 hex)
U-Boot# 
- 06:34:50 [INFO] Host: printenv
- 06:34:51 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A33515BB
board_rev=1.1A
boot_fdt=try
boot_targets= mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait ip=dhcp
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootcmd_usb=setenv devnum 0; run usb_boot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 100 100;u-boot.img.raw mmc 300 400;spl-os-args.raw mmc 80 80;spl-os-image.raw mmc 900 2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=NAND.SPL part 0 1;NAND.SPL.backup1 part 0 2;NAND.SPL.backup2 part 0 3;NAND.SPL.backup3 part 0 4;NAND.u-boot-spl-os part 0 5;NAND.u-boot part 0 6;NAND.u-boot-env part 0 7;NAND.u-boot-env.backup1 part 0 8;NAND.kernel part 0 9;NAND.rootfs part 0 10
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
dnsip=192.0.2.2
dnsip2=192.0.2.3
eth1addr=40:5f:c2:76:54:11
ethact=cpsw
ethaddr=40:5f:c2:76:54:10
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
fileaddr=80f80000
filesize=86e8
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
ipaddr=192.168.0.61
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
netmask=255.255.255.0
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usb_boot=setenv devtype usb; run usb_init; if usb dev 0; then run usbargs;run scan_boot; bootz ${loadaddr} - ${fdtaddr}; fi
usb_init=usb start 0;
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbnet_devaddr=40:5f:c2:76:54:11
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2013.10-gaa25212 (Feb 06 2014 - 21:36:54)

Environment size: 5589/131067 bytes
U-Boot# 
- 06:34:51 [INFO] Host: setenv bootargs ''${bootargs}' root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait '
- 06:34:51 [INFO] Target: 
setenv bootargs ''${bootargs}' root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait '
U-Boot# 
- 06:34:51 [INFO] Host: printenv
- 06:34:52 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A33515BB
board_rev=1.1A
boot_fdt=try
boot_targets= mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait ip=dhcp root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootcmd_usb=setenv devnum 0; run usb_boot;
bootdelay=3
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 100 100;u-boot.img.raw mmc 300 400;spl-os-args.raw mmc 80 80;spl-os-image.raw mmc 900 2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=NAND.SPL part 0 1;NAND.SPL.backup1 part 0 2;NAND.SPL.backup2 part 0 3;NAND.SPL.backup3 part 0 4;NAND.u-boot-spl-os part 0 5;NAND.u-boot part 0 6;NAND.u-boot-env part 0 7;NAND.u-boot-env.backup1 part 0 8;NAND.kernel part 0 9;NAND.rootfs part 0 10
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
dnsip=192.0.2.2
dnsip2=192.0.2.3
eth1addr=40:5f:c2:76:54:11
ethact=cpsw
ethaddr=40:5f:c2:76:54:10
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
fileaddr=80f80000
filesize=86e8
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
ipaddr=192.168.0.61
loadaddr=0x80200000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
netmask=255.255.255.0
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramroot=/dev/ram0 rw ramdisk_size=65536 initrd=${rdaddr},64M
ramrootfstype=ext2
rdaddr=0x81000000
rootpart=2
rootpath=/export/rootfs
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usb_boot=setenv devtype usb; run usb_init; if usb dev 0; then run usbargs;run scan_boot; bootz ${loadaddr} - ${fdtaddr}; fi
usb_init=usb start 0;
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbnet_devaddr=40:5f:c2:76:54:11
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2013.10-gaa25212 (Feb 06 2014 - 21:36:54)

Environment size: 5637/131067 bytes
U-Boot# 
- 06:34:52 [INFO] Host: setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} - ${fdtaddr}; else bootz ${loadaddr} - ${fdtaddr}; bootm ${loadaddr} - ${fdtaddr}; fi'
- 06:34:52 [INFO] Target: 
setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} - ${fdtaddr}; else bootz ${loadaddr} - ${fdtaddr}; bootm ${loadaddr} - ${fdtaddr}; fi'
U-Boot# 
- 06:34:52 [INFO] Host: bdinfo
- 06:34:53 [INFO] Target: 
bdinfo
arch_number = 0x00000E05
boot_params = 0x80000100
DRAM bank   = 0x00000000
-> start    = 0x80000000
-> size     = 0x20000000
eth0name    = cpsw
ethaddr     = 40:5f:c2:76:54:10
eth1name    = usb_ether
eth1addr    = 40:5f:c2:76:54:11
current eth = cpsw
ip_addr     = 192.168.0.61
baudrate    = 115200 bps
TLB addr    = 0x9FFF0000
relocaddr   = 0x9F74E000
reloc off   = 0x1EF4E000
irq_sp      = 0x9F62DF38
sp start    = 0x9F62DF28
U-Boot# 
- 06:34:53 [INFO] Host: boot
- 06:37:23 [ERROR] On command: boot waiting for (?-mix:login:) >>> error: execution expired
- 06:37:23 [INFO] Target: 
boot

## Checking Image at 80200000 ...
Unknown image format!
Kernel image @ 0x80200000 [ 0x000000 - 0x422c38 ]
## Flattened Device Tree blob at 80f80000
   Booting using the fdt blob at 0x80f80000
   Loading Device Tree to 9f621000, end 9f62c6e7 ... OK

Starting kernel ...

[    0.000000] Booting Linux on physical CPU 0x0
[    0.000000] Linux version 3.15.0-rc7-next-20140530-00002-gcb6bd38 (nmenon@kahuna) (gcc version 4.6.3 (Ubuntu/Linaro 4.6.3-1ubuntu5) ) #1 SMP Fri May 30 05:35:13 CDT 2014
[    0.000000] CPU: ARMv7 Processor [413fc082] revision 2 (ARMv7), cr=10c5387d
[    0.000000] CPU: PIPT / VIPT nonaliasing data cache, VIPT aliasing instruction cache
[    0.000000] Machine model: TI AM335x EVM
[    0.000000] cma: CMA: reserved 16 MiB at 9e000000
[    0.000000] Memory policy: Data cache writeback
[    0.000000] CPU: All CPU(s) started in SVC mode.
[    0.000000] AM335X ES1.0 (sgx neon )
[    0.000000] PERCPU: Embedded 9 pages/cpu @dfac2000 s14336 r8192 d14336 u36864
[    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 129792
[    0.000000] Kernel command line: console=ttyO0,115200n8 earlyprintk rootwait ip=dhcp root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait
[    0.000000] PID hash table entries: 2048 (order: 1, 8192 bytes)
[    0.000000] Dentry cache hash table entries: 65536 (order: 6, 262144 bytes)
[    0.000000] Inode-cache hash table entries: 32768 (order: 5, 131072 bytes)
[    0.000000] Memory: 484848K/523264K available (5633K kernel code, 679K rwdata, 2188K rodata, 402K init, 8337K bss, 38416K reserved, 0K highmem)
[    0.000000] Virtual kernel memory layout:
[    0.000000]     vector  : 0xffff0000 - 0xffff1000   (   4 kB)
[    0.000000]     fixmap  : 0xffc00000 - 0xffe00000   (2048 kB)
[    0.000000]     vmalloc : 0xe0800000 - 0xff000000   ( 488 MB)
[    0.000000]     lowmem  : 0xc0000000 - 0xe0000000   ( 512 MB)
[    0.000000]     pkmap   : 0xbfe00000 - 0xc0000000   (   2 MB)
[    0.000000]     modules : 0xbf000000 - 0xbfe00000   (  14 MB)
[    0.000000]       .text : 0xc0008000 - 0xc07ab8b4   (7823 kB)
[    0.000000]       .init : 0xc07ac000 - 0xc0810800   ( 402 kB)
[    0.000000]       .data : 0xc0812000 - 0xc08bbcb8   ( 680 kB)
[    0.000000]        .bss : 0xc08bbcb8 - 0xc10e0198   (8338 kB)
[    0.000000] Hierarchical RCU implementation.
[    0.000000] 	RCU restricting CPUs from NR_CPUS=2 to nr_cpu_ids=1.
[    0.000000] RCU: Adjusting geometry for rcu_fanout_leaf=16, nr_cpu_ids=1
[    0.000000] NR_IRQS:16 nr_irqs:16 16
[    0.000000] IRQ: Found an INTC at 0xfa200000 (revision 5.0) with 128 interrupts
[    0.000000] Total of 128 interrupts on 1 active controller
[    0.000000] OMAP clockevent source: timer2 at 24000000 Hz
[    0.000019] sched_clock: 32 bits at 24MHz, resolution 41ns, wraps every 178956969942ns
[    0.000088] OMAP clocksource: timer1 at 24000000 Hz
[    0.001086] Console: colour dummy device 80x30
[    0.001146] Lock dependency validator: Copyright (c) 2006 Red Hat, Inc., Ingo Molnar
[    0.001164] ... MAX_LOCKDEP_SUBCLASSES:  8
[    0.001181] ... MAX_LOCK_DEPTH:          48
[    0.001198] ... MAX_LOCKDEP_KEYS:        8191
[    0.001214] ... CLASSHASH_SIZE:          4096
[    0.001230] ... MAX_LOCKDEP_ENTRIES:     32768
[    0.001246] ... MAX_LOCKDEP_CHAINS:      65536
[    0.001263] ... CHAINHASH_SIZE:          32768
[    0.001279]  memory used by lock dependency info: 5167 kB
[    0.001296]  per task-struct memory footprint: 1152 bytes
[    0.001357] Calibrating delay loop... 715.16 BogoMIPS (lpj=3575808)
[    0.098685] pid_max: default: 32768 minimum: 301
[    0.099278] Security Framework initialized
[    0.099450] Mount-cache hash table entries: 1024 (order: 0, 4096 bytes)
[    0.099475] Mountpoint-cache hash table entries: 1024 (order: 0, 4096 bytes)
[    0.102540] CPU: Testing write buffer coherency: ok
[    0.104086] CPU0: thread -1, cpu 0, socket -1, mpidr 0
[    0.104248] Setting up static identity map for 0x80556da8 - 0x80556e18
[    0.108566] Brought up 1 CPUs
[    0.108597] SMP: Total of 1 processors activated.
[    0.108617] CPU: All CPU(s) started in SVC mode.
[    0.112372] devtmpfs: initialized
[    0.124311] VFP support v0.3: implementor 41 architecture 3 part 30 variant c rev 3
[    0.173880] omap_hwmod: tptc0 using broken dt data from edma
[    0.174377] omap_hwmod: tptc1 using broken dt data from edma
[    0.174851] omap_hwmod: tptc2 using broken dt data from edma
[    0.184572] omap_hwmod: debugss: _wait_target_disable failed
[    0.244788] pinctrl core: initialized pinctrl subsystem
[    0.248205] regulator-dummy: no parameters
[    0.290487] NET: Registered protocol family 16
[    0.291923] DMA: failed to allocate 256 KiB pool for atomic coherent allocation
[    0.294682] cpuidle: using governor ladder
[    0.294752] cpuidle: using governor menu
[    0.307511] platform 49000000.edma: alias fck already exists
[    0.307627] platform 49000000.edma: alias fck already exists
[    0.307660] platform 49000000.edma: alias fck already exists
[    0.311860] OMAP GPIO hardware version 0.1
[    0.331502] omap-gpmc 50000000.gpmc: could not find pctldev for node /pinmux@44e10800/nandflash_pins_s0, deferring probe
[    0.331567] platform 50000000.gpmc: Driver omap-gpmc requests probe deferral
[    0.337447] No ATAGs?
[    0.337496] hw-breakpoint: debug architecture 0x4 unsupported.
[    0.396651] edma-dma-engine edma-dma-engine.0: TI EDMA DMA engine driver
[    0.398416] vbat: 5000 mV 
[    0.399613] lis3_reg: no parameters
[    0.404041] SCSI subsystem initialized
[    0.405171] usbcore: registered new interface driver usbfs
[    0.405411] usbcore: registered new interface driver hub
[    0.412266] usbcore: registered new device driver usb
[    0.413403] omap_i2c 44e0b000.i2c: could not find pctldev for node /pinmux@44e10800/pinmux_i2c0_pins, deferring probe
[    0.413473] platform 44e0b000.i2c: Driver omap_i2c requests probe deferral
[    0.413555] omap_i2c 4802a000.i2c: could not find pctldev for node /pinmux@44e10800/pinmux_i2c1_pins, deferring probe
[    0.413595] platform 4802a000.i2c: Driver omap_i2c requests probe deferral
[    0.419483] Switched to clocksource timer1
[    0.633842] NET: Registered protocol family 2
[    0.636092] TCP established hash table entries: 4096 (order: 2, 16384 bytes)
[    0.636345] TCP bind hash table entries: 4096 (order: 5, 147456 bytes)
[    0.638208] TCP: Hash tables configured (established 4096 bind 4096)
[    0.638464] TCP: reno registered
[    0.638537] UDP hash table entries: 256 (order: 2, 20480 bytes)
[    0.638803] UDP-Lite hash table entries: 256 (order: 2, 20480 bytes)
[    0.640457] NET: Registered protocol family 1
[    0.642972] RPC: Registered named UNIX socket transport module.
[    0.643036] RPC: Registered udp transport module.
[    0.643056] RPC: Registered tcp transport module.
[    0.643076] RPC: Registered tcp NFSv4.1 backchannel transport module.
[    0.644733] hw perfevents: enabled with ARMv7 Cortex-A8 PMU driver, 5 counters available
[    0.650583] futex hash table entries: 256 (order: 2, 16384 bytes)
[    0.657059] VFS: Disk quotas dquot_6.5.2
[    0.657242] Dquot-cache hash table entries: 1024 (order 0, 4096 bytes)
[    0.660815] NFS: Registering the id_resolver key type
[    0.661327] Key type id_resolver registered
[    0.661385] Key type id_legacy registered
[    0.661591] jffs2: version 2.2. (NAND) (SUMMARY)   2001-2006 Red Hat, Inc.
[    0.662216] msgmni has been set to 978
[    0.669577] io scheduler noop registered
[    0.669629] io scheduler deadline registered
[    0.669731] io scheduler cfq registered (default)
[    0.672686] pinctrl-single 44e10800.pinmux: 142 pins at pa f9e10800 size 568
[    0.676200] Serial: 8250/16550 driver, 4 ports, IRQ sharing enabled
[    0.684654] omap_uart 44e09000.serial: no wakeirq for uart0
[    0.685405] 44e09000.serial: ttyO0 at MMIO 0x44e09000 (irq = 88, base_baud = 3000000) is a OMAP UART0
[    1.396328] console [ttyO0] enabled
[    1.406183] omap_rng 48310000.rng: OMAP Random Number Generator ver. 20
[    1.445632] brd: module loaded
[    1.468592] loop: module loaded
[    1.475812] mtdoops: mtd device (mtddev=name/number) must be supplied
[    1.486679] usbcore: registered new interface driver asix
[    1.492652] usbcore: registered new interface driver ax88179_178a
[    1.499284] usbcore: registered new interface driver cdc_ether
[    1.505632] usbcore: registered new interface driver smsc95xx
[    1.511872] usbcore: registered new interface driver net1080
[    1.517976] usbcore: registered new interface driver cdc_subset
[    1.524398] usbcore: registered new interface driver zaurus
[    1.530579] usbcore: registered new interface driver cdc_ncm
[    1.538074] usbcore: registered new interface driver cdc_wdm
[    1.544528] usbcore: registered new interface driver usb-storage
[    1.551205] usbcore: registered new interface driver usbtest
[    1.562590] mousedev: PS/2 mouse device common for all mice
[    1.574956] omap_rtc 44e3e000.rtc: rtc core: registered 44e3e000.rtc as rtc0
[    1.583485] i2c /dev entries driver
[    1.587263] Driver for 1-wire Dallas network protocol.
[    1.598925] omap_wdt: OMAP Watchdog Timer Rev 0x01: initial timeout 60 sec
[    1.609918] omap_hsmmc 48060000.mmc: unable to get vmmc regulator -517
[    1.617422] platform 48060000.mmc: Driver omap_hsmmc requests probe deferral
[    1.625868] ledtrig-cpu: registered to indicate activity on CPUs
[    1.633054] usbcore: registered new interface driver usbhid
[    1.638908] usbhid: USB HID core driver
[    1.644446] oprofile: using arm/armv7
[    1.649326] TCP: cubic registered
[    1.652872] Initializing XFRM netlink socket
[    1.657533] NET: Registered protocol family 17
[    1.662378] NET: Registered protocol family 15
[    1.667473] Key type dns_resolver registered
[    1.672350] omap_voltage_late_init: Voltage driver support not added
[    1.679042] sr_dev_init: No voltage domain specified for smartreflex0. Cannot initialize
[    1.687583] sr_dev_init: No voltage domain specified for smartreflex1. Cannot initialize
[    1.697420] ThumbEE CPU extension supported.
[    1.702069] Registering SWP/SWPB emulation handler
[    1.707124] SmartReflex Class3 initialized
[    1.718297] lis3_reg: disabling
[    1.721995] vbat: disabling
[    1.728358] omap-gpmc 50000000.gpmc: GPMC revision 6.0
[    1.736146] nand: device found, Manufacturer ID: 0x2c, Chip ID: 0xda
[    1.743062] nand: Micron MT29F2G08ABAEAWP
[    1.747280] nand: 256MiB, SLC, page size: 2048, OOB size: 64
[    1.753316] nand: error: CONFIG_MTD_NAND_OMAP_BCH not enabled
[    1.759550] omap2-nand: probe of omap2-nand.0 failed with error -22
[    1.906634] tps65910 0-002d: No interrupt support, no core IRQ
[    1.922165] omap_i2c 44e0b000.i2c: Arbitration lost
[    1.927675] vrtc: failed to enable
[    1.934318] tps65910 0-002d: failed to register tps65910-pmic regulator
[    1.941585] tps65910-pmic: probe of tps65910-pmic failed with error -5
[    1.949792] omap_i2c 44e0b000.i2c: bus 0 rev0.11 at 400 kHz
[    1.966507] omap_i2c 4802a000.i2c: bus 1 rev0.11 at 100 kHz
[    1.974272] omap_hsmmc 48060000.mmc: unable to get vmmc regulator -517
[    1.981652] platform 48060000.mmc: Driver omap_hsmmc requests probe deferral
[    2.049363] davinci_mdio 4a101000.mdio: davinci mdio revision 1.6
[    2.055826] davinci_mdio 4a101000.mdio: detected phy mask fffffffe
[    2.064984] libphy: 4a101000.mdio: probed
[    2.069373] davinci_mdio 4a101000.mdio: phy[0]: device 4a101000.mdio:00, driver Atheros 8031 ethernet
[    2.080640] cpsw 4a100000.ethernet: Detected MACID = 40:5f:c2:76:54:10
[    2.093310] input: volume_keys@0 as /devices/volume_keys@0/input/input0
[    2.103402] omap_hsmmc 48060000.mmc: unable to get vmmc regulator -517
[    2.110702] platform 48060000.mmc: Driver omap_hsmmc requests probe deferral
[    2.119960] omap_rtc 44e3e000.rtc: setting system clock to 2000-01-01 00:00:00 UTC (946684800)
[    2.129017] sr_init: No PMIC hook to init smartreflex
[    2.134751] sr_init: platform driver register failed for SR
[    2.165036] net eth0: initializing cpsw version 1.12 (0)
[    2.174973] omap_hsmmc 48060000.mmc: unable to get vmmc regulator -517
[    2.182401] platform 48060000.mmc: Driver omap_hsmmc requests probe deferral
[    2.250293] net eth0: phy found : id is : 0x4dd074
[    2.255544] libphy: PHY 4a101000.mdio:01 not found
[    2.260664] net eth0: phy 4a101000.mdio:01 not found on slave 1
[    6.250269] cpsw 4a100000.ethernet eth0: Link is Up - 1Gbps/Full - flow control rx/tx
[    6.269278] Sending DHCP requests ., OK
[    6.319735] IP-Config: Got DHCP answer from 192.168.0.1, my address is 192.168.0.61
[    6.328203] IP-Config: Complete:
[    6.331708]      device=eth0, hwaddr=40:5f:c2:76:54:10, ipaddr=192.168.0.61, mask=255.255.255.0, gw=192.168.0.1
[    6.342327]      host=192.168.0.61, domain=ti.com, nis-domain=(none)
[    6.348991]      bootserver=192.168.0.1, rootserver=192.168.0.1, rootpath=
[    6.356059]      nameserver0=192.0.2.2, nameserver1=192.0.2.3
[    6.366237] Waiting for root device /dev/mmcblk0p2...

