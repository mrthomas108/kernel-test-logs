- 05:40:09 [INFO] Starting target session
- 05:40:10 [INFO] Connected to dra72x-evm via serial 
- 05:40:10 [INFO] Host: 
- 05:40:12 [ERROR] On command:  waiting for (?-mix:.*\s+login) >>> error: execution expired
- 05:40:12 [INFO] Target: 

- 05:40:12 [INFO] Host: 
- 05:40:17 [ERROR] On command:  waiting for (?m-ix:root.*#) >>> error: execution expired
- 05:40:17 [INFO] Target: 

- 05:40:18 [INFO] Disconnected serial from dra72x-evm
- 05:40:18 [INFO] Connected to dra72x-evm via serial 
- 05:40:18 [INFO] Host: 
- 05:40:19 [ERROR] On command:  waiting for (?-mix:U-Boot#\s) >>> error: execution expired
- 05:40:19 [INFO] Target: 

U-Boot SPL 2013.10-00204-g6d29e34 (Jul 02 2014 - 10:47:56)
DRA722 ES1.0

 DRA iterations=20SPL: Please implement spl_start_uboot() for your board
SPL: Direct Linux boot not active!
reading u-boot.img
reading u-boot.img


U-Boot 2013.10-00204-g6d29e34 (Jul 02 2014 - 10:47:56)

CPU  : DRA722 ES1.0
Board: DRA7xx
I2C:   ready
DRAM:  1 GiB

- 05:40:19 [INFO] Host: 
- 05:40:19 [INFO] Target: 
boot:  3  0 
U-Boot# 
- 05:40:19 [INFO] Host: 
- 05:40:20 [INFO] Target: 

U-Boot# 
- 05:40:20 [INFO] Host: version
- 05:40:20 [INFO] Target: 
version

U-Boot 2013.10-00204-g6d29e34 (Jul 02 2014 - 10:47:56)
arm-linux-gnueabi-gcc (Ubuntu/Linaro 4.6.3-1ubuntu5) 4.6.3
GNU ld (GNU Binutils for Ubuntu) 2.22
U-Boot# 
- 05:40:20 [INFO] Host: setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait '
- 05:40:21 [INFO] Target: 
setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait '
U-Boot# 
- 05:40:21 [INFO] Host: setenv bootcmd  ''
- 05:40:22 [INFO] Target: 
setenv bootcmd  ''
U-Boot# 
- 05:40:22 [INFO] Host: setenv autoload 'no'
- 05:40:22 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 05:40:22 [INFO] Host: setenv serverip '128.247.105.47'
- 05:40:23 [INFO] Target: 
setenv serverip '128.247.105.47'
U-Boot# 
- 05:40:23 [INFO] Host: printenv
- 05:40:23 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=dra7xx
board_name=dra72x
boot_targets=usb mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait 
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootcmd_usb=setenv devnum 0; run usb_boot;
bootdelay=3
bootdir=/boot
bootfile=zImage
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
eth1addr=08:00:28:01:f6:af
ethact=cpsw
ethaddr=08:00:28:01:f6:ae
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
findfdt=if test $board_name = dra72x; then setenv fdtfile dra72-evm.dtb; fi;if test $board_name = dra7xx; then setenv fdtfile dra7-evm.dtb; fi;if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
loadaddr=0x80200000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} uEnv.txt
loadbootscript=fatload mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load ${devtype} ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile};
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} vram=${vram} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from mmc${mmcdev} ...; run mmcargs; bootz ${loadaddr} - ${fdtaddr}; fi;fi;
mmcdev=0
mmcroot=/dev/mmcblk1p2 rw
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
rdaddr=0x81000000
rootpart=2
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
scsidevs=0
serverip=128.247.105.47
soc=omap5
stderr=serial
stdin=serial
stdout=serial
usb_boot=setenv devtype usb; run usb_init; if usb dev 0; then run usbargs;run scan_boot; bootz ${loadaddr} - ${fdtaddr}; fi
usb_init=usb start 0;
usbargs=setenv bootargs console=${console} ${optargs} vram=${vram}root=${usbroot} rootfstype=${usbrootfstype}
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
usbtty=cdc_acm
vendor=ti
ver=U-Boot 2013.10-00204-g6d29e34 (Jul 02 2014 - 10:47:56)
vram=16M 

Environment size: 3520/131067 bytes
U-Boot# 
- 05:40:23 [INFO] Host: printenv
- 05:40:24 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=dra7xx
board_name=dra72x
boot_targets=usb mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait 
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootcmd_usb=setenv devnum 0; run usb_boot;
bootdelay=3
bootdir=/boot
bootfile=zImage
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
eth1addr=08:00:28:01:f6:af
ethact=cpsw
ethaddr=08:00:28:01:f6:ae
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
findfdt=if test $board_name = dra72x; then setenv fdtfile dra72-evm.dtb; fi;if test $board_name = dra7xx; then setenv fdtfile dra7-evm.dtb; fi;if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
loadaddr=0x80200000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} uEnv.txt
loadbootscript=fatload mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load ${devtype} ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile};
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} vram=${vram} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from mmc${mmcdev} ...; run mmcargs; bootz ${loadaddr} - ${fdtaddr}; fi;fi;
mmcdev=0
mmcroot=/dev/mmcblk1p2 rw
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
rdaddr=0x81000000
rootpart=2
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
scsidevs=0
serverip=128.247.105.47
soc=omap5
stderr=serial
stdin=serial
stdout=serial
usb_boot=setenv devtype usb; run usb_init; if usb dev 0; then run usbargs;run scan_boot; bootz ${loadaddr} - ${fdtaddr}; fi
usb_init=usb start 0;
usbargs=setenv bootargs console=${console} ${optargs} vram=${vram}root=${usbroot} rootfstype=${usbrootfstype}
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
usbtty=cdc_acm
vendor=ti
ver=U-Boot 2013.10-00204-g6d29e34 (Jul 02 2014 - 10:47:56)
vram=16M 

Environment size: 3520/131067 bytes
U-Boot# 
- 05:40:24 [INFO] Host: setenv bootargs ''${bootargs}' ip=dhcp '
- 05:40:25 [INFO] Target: 
setenv bootargs ''${bootargs}' ip=dhcp '
U-Boot# 
- 05:40:25 [INFO] Host: setenv serverip '128.247.105.47'
- 05:40:25 [INFO] Target: 
setenv serverip '128.247.105.47'
U-Boot# 
- 05:40:25 [INFO] Host: setenv ipaddr dhcp
- 05:40:26 [INFO] Target: 
setenv ipaddr dhcp
U-Boot# 
- 05:40:26 [INFO] Host: setenv autoload 'no'
- 05:40:26 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 05:40:26 [INFO] Host: dhcp
- 05:40:28 [INFO] Target: 
dhcp
link up on port 1, speed 1000, full duplex
BOOTP broadcast 1
DHCP client bound to address 192.168.1.197
U-Boot# 
- 05:40:28 [INFO] Host: setenv serverip '128.247.105.47'
- 05:40:28 [INFO] Target: 
setenv serverip '128.247.105.47'
U-Boot# 
- 05:40:28 [INFO] Host: tftp ${loadaddr} 128.247.105.47:vatf_11/04a643a0c97cf1ec68c636eb6335d9ff
- 05:40:29 [INFO] Target: 
tftp ${loadaddr} 128.247.105.47:vatf_11/04a643a0c97cf1ec68c636eb6335d9ff
link up on port 1, speed 1000, full duplex
Using cpsw device
TFTP from server 128.247.105.47; our IP address is 192.168.1.197; sending through gateway 192.168.1.254
Filename 'vatf_11/04a643a0c97cf1ec68c636eb6335d9ff'.
Load address: 0x80200000
Loading: *#################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 ######################################
	 11.9 MiB/s
done
Bytes transferred = 4366416 (42a050 hex)
U-Boot# 
- 05:40:29 [INFO] Host: tftp ${fdtaddr} 128.247.105.47:vatf_11/f1df9d4fcfa0e1cbd15bac383fc93db1
- 05:40:30 [INFO] Target: 
tftp ${fdtaddr} 128.247.105.47:vatf_11/f1df9d4fcfa0e1cbd15bac383fc93db1
link up on port 1, speed 1000, full duplex
Using cpsw device
TFTP from server 128.247.105.47; our IP address is 192.168.1.197; sending through gateway 192.168.1.254
Filename 'vatf_11/f1df9d4fcfa0e1cbd15bac383fc93db1'.
Load address: 0x80f80000
Loading: *#####
	 9.5 MiB/s
done
Bytes transferred = 59574 (e8b6 hex)
U-Boot# 
- 05:40:30 [INFO] Host: ls mmc 0:1
- 05:40:30 [INFO] Target: 
ls mmc 0:1
    60249   dra72-evm.dtb 
    59704   dra7-evm.dtb 
    69132   mlo 
  3543639   ramdisk.gz 
   376700   u-boot.img 
      790   uenv-old.txt 
      657   uenv-ramdisk.txt 
      390   uenv.txt 
            working/
  4316880   zimage 
      506   uenv-netmmc.txt 

10 file(s), 1 dir(s)

U-Boot# 
- 05:40:30 [INFO] Host: ls mmc 0:2
- 05:40:31 [INFO] Target: 
ls mmc 0:2
<DIR>       4096 .
<DIR>       4096 ..
<DIR>      16384 lost+found
<DIR>       4096 bin
<DIR>       4096 boot
<DIR>       4096 dev
<DIR>       4096 etc
<DIR>       4096 home
<DIR>       4096 lib
<DIR>       4096 media
<DIR>       4096 mnt
<DIR>       4096 opt
<DIR>       4096 proc
<DIR>       4096 run
<DIR>       4096 sbin
<DIR>       4096 Settings
<DIR>       4096 srv
<DIR>       4096 sys
<DIR>       4096 test
<SYM>          8 tmp
<DIR>       4096 usr
<DIR>       4096 var
<DIR>       4096 www
U-Boot# 
- 05:40:31 [INFO] Host: part uuid mmc 0:2
- 05:40:31 [INFO] Target: 
part uuid mmc 0:2
00000000-02
U-Boot# 
- 05:40:31 [INFO] Host: printenv
- 05:40:32 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=dra7xx
board_name=dra72x
boot_targets=usb mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait ip=dhcp
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootcmd_usb=setenv devnum 0; run usb_boot;
bootdelay=3
bootdir=/boot
bootfile=zImage
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dnsip=192.0.2.2
dnsip2=192.0.2.3
eth1addr=08:00:28:01:f6:af
ethact=cpsw
ethaddr=08:00:28:01:f6:ae
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
fileaddr=80f80000
filesize=e8b6
findfdt=if test $board_name = dra72x; then setenv fdtfile dra72-evm.dtb; fi;if test $board_name = dra7xx; then setenv fdtfile dra7-evm.dtb; fi;if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
gatewayip=192.168.1.254
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
ipaddr=192.168.1.197
loadaddr=0x80200000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} uEnv.txt
loadbootscript=fatload mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load ${devtype} ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile};
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} vram=${vram} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from mmc${mmcdev} ...; run mmcargs; bootz ${loadaddr} - ${fdtaddr}; fi;fi;
mmcdev=0
mmcroot=/dev/mmcblk1p2 rw
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netmask=255.255.255.0
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
rdaddr=0x81000000
rootpart=2
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
scsidevs=0
serverip=128.247.105.47
soc=omap5
stderr=serial
stdin=serial
stdout=serial
usb_boot=setenv devtype usb; run usb_init; if usb dev 0; then run usbargs;run scan_boot; bootz ${loadaddr} - ${fdtaddr}; fi
usb_init=usb start 0;
usbargs=setenv bootargs console=${console} ${optargs} vram=${vram}root=${usbroot} rootfstype=${usbrootfstype}
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
usbtty=cdc_acm
vendor=ti
ver=U-Boot 2013.10-00204-g6d29e34 (Jul 02 2014 - 10:47:56)
vram=16M 

Environment size: 3673/131067 bytes
U-Boot# 
- 05:40:32 [INFO] Host: setenv bootargs ''${bootargs}' root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait '
- 05:40:33 [INFO] Target: 
setenv bootargs ''${bootargs}' root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait '
U-Boot# 
- 05:40:33 [INFO] Host: printenv
- 05:40:33 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=dra7xx
board_name=dra72x
boot_targets=usb mmc0 nand 
bootargs=console=ttyO0,115200n8 earlyprintk rootwait ip=dhcp root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait
bootcmd=
bootcmd_mmc0=setenv devnum 0; setenv rootpart 2; run mmc_boot;
bootcmd_nand=run nandboot;
bootcmd_usb=setenv devnum 0; run usb_boot;
bootdelay=3
bootdir=/boot
bootfile=zImage
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dnsip=192.0.2.2
dnsip2=192.0.2.3
eth1addr=08:00:28:01:f6:af
ethact=cpsw
ethaddr=08:00:28:01:f6:ae
fdt_high=0xa0000000
fdtaddr=0x80F80000
fdtfile=undefined
fileaddr=80f80000
filesize=e8b6
findfdt=if test $board_name = dra72x; then setenv fdtfile dra72-evm.dtb; fi;if test $board_name = dra7xx; then setenv fdtfile dra7-evm.dtb; fi;if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
gatewayip=192.168.1.254
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
ipaddr=192.168.1.197
loadaddr=0x80200000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} uEnv.txt
loadbootscript=fatload mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load ${devtype} ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile};
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
mmc_boot=setenv devtype mmc; if mmc dev ${devnum}; then run mmcargs;run scan_boot; run mmcboot;setenv mmcdev 1; setenv bootpart 1:2; run mmcboot;fi
mmcargs=setenv bootargs console=${console} ${optargs} vram=${vram} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from mmc${mmcdev} ...; run mmcargs; bootz ${loadaddr} - ${fdtaddr}; fi;fi;
mmcdev=0
mmcroot=/dev/mmcblk1p2 rw
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.rootfs)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netmask=255.255.255.0
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
rdaddr=0x81000000
rootpart=2
scan_boot=echo Scanning ${devtype} ${devnum}...; for prefix in ${bootdir}; do for script in ${bootfile}; do run script_boot; done; done;
script_boot=if load ${devtype} ${devnum}:${rootpart} ${loadaddr} ${bootdir}/${bootfile}; then run findfdt; load ${devtype} ${devnum}:${rootpart} ${fdtaddr} ${bootdir}/${fdtfile};fi;
scsidevs=0
serverip=128.247.105.47
soc=omap5
stderr=serial
stdin=serial
stdout=serial
usb_boot=setenv devtype usb; run usb_init; if usb dev 0; then run usbargs;run scan_boot; bootz ${loadaddr} - ${fdtaddr}; fi
usb_init=usb start 0;
usbargs=setenv bootargs console=${console} ${optargs} vram=${vram}root=${usbroot} rootfstype=${usbrootfstype}
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
usbtty=cdc_acm
vendor=ti
ver=U-Boot 2013.10-00204-g6d29e34 (Jul 02 2014 - 10:47:56)
vram=16M 

Environment size: 3727/131067 bytes
U-Boot# 
- 05:40:33 [INFO] Host: setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} - ${fdtaddr}; else bootz ${loadaddr} - ${fdtaddr}; bootm ${loadaddr} - ${fdtaddr}; fi'
- 05:40:34 [INFO] Target: 
setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} - ${fdtaddr}; else bootz ${loadaddr} - ${fdtaddr}; bootm ${loadaddr} - ${fdtaddr}; fi'
U-Boot# 
- 05:40:34 [INFO] Host: bdinfo
- 05:40:34 [INFO] Target: 
bdinfo
arch_number = 0x002B6C18
boot_params = 0x80000100
DRAM bank   = 0x00000000
-> start    = 0x80000000
-> size     = 0x40000000
eth0name    = cpsw
ethaddr     = 08:00:28:01:f6:ae
current eth = cpsw
ip_addr     = 192.168.1.197
baudrate    = 115200 bps
TLB addr    = 0xBFFF0000
relocaddr   = 0xBFF51000
reloc off   = 0x3F751000
irq_sp      = 0xBFB30F38
sp start    = 0xBFB30F28
U-Boot# 
- 05:40:34 [INFO] Host: boot
- 05:43:04 [ERROR] On command: boot waiting for (?-mix:.*\s+login) >>> error: execution expired
- 05:43:04 [INFO] Target: 
boot

## Checking Image at 80200000 ...
Unknown image format!
Kernel image @ 0x80200000 [ 0x000000 - 0x42a050 ]
## Flattened Device Tree blob at 80f80000
   Booting using the fdt blob at 0x80f80000
   Loading Device Tree to 9ffee000, end 9ffff8b5 ... OK

Starting kernel ...


Kernel hung.. retry! 1 Wed Jul 30 05:44:19 CDT 2014
GIVEN UP RETRIES
