- 06:41:43 [INFO] Starting target session
- 06:41:43 [INFO] Connected to beaglebone via serial 
- 06:41:43 [INFO] Host: #check prompt
- 06:41:46 [ERROR] On command: #check prompt waiting for #check prompt.+?(?-mix:((?-mix:login:)|[Pp]assword)) >>> error: execution expired
- 06:41:46 [INFO] Target: 
#check prompt
root@am335x-evm:/test# 
- 06:41:46 [INFO] Host: #check prompt
- 06:41:47 [INFO] Target: 
#check prompt
root@am335x-evm:/test# 
- 06:41:47 [INFO] Host: sync;poweroff
- 06:42:02 [INFO] Target: 
sync;poweroff
Broadcast message from root@am335x-evm (ttyO0) (Fri Apr 25 00:31:05 2014):
The system is going down for system halt NOW!
INIT: Switching to runlevel: 0
root@am335x-evm:/test# 
INIT: Sending processes the TERM signal
INIT: Sending processes the KILL signal
Stopping telnet daemon.
Stopping system message bus: dbus.
Error opening /dev/fb0: No such file or directory
Stopping syslogd/klogd: stopped syslogd (pid 1173)
stopped klogd (pid 1176)
done
Stopping thttpd.
ALSA: Storing mixer settings...
/usr/sbin/alsactl: save_state:1590: No soundcards found...
Deconfiguring network interfaces... done.
Sending all processes the TERM signal...
Sending all processes the KILL signal...
Unmounting remote filesystems...
Deactivating swap...
Unmounting local filesystems...
[11678.804143] reboot: System halted
- 06:42:02 [INFO] Disconnected serial from beaglebone
- 06:42:07 [INFO] Connected to beaglebone via serial 
- 06:42:07 [INFO] Host: 
- 06:42:08 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 06:42:08 [INFO] Target: 
U-Boot SPL 2014.07-00076-g8f725ef (Oct 09 2014 - 11:18:44)
- 06:42:08 [INFO] Host: 
- 06:42:08 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 06:42:08 [INFO] Target: 
- 06:42:08 [INFO] Host: 
- 06:42:09 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 06:42:09 [INFO] Target: 
- 06:42:09 [INFO] Host: 
- 06:42:09 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 06:42:09 [INFO] Target: 
reading args
spl_load_image_fat_os: error reading image args,
- 06:42:09 [INFO] Host: 
- 06:42:10 [ERROR] On command:  waiting for (?-mix:U-Boot#) >>> error: execution expired
- 06:42:10 [INFO] Target: 
reading u-boot.img
reading u-boot.img
U-Boot 2014.07-00076-g8f725ef (Oct 09 2014 - 11:18:44), Build: jenkins-system_test_testing_kernel-500
I2C:   ready
DRAM:  256 MiB
- 06:42:10 [INFO] Host: 
- 06:42:10 [INFO] Target: 
NAND:  0 MiB
MMC:   OMAP SD/MMC: 0, OMAP SD/MMC: 1
reading uboot.env
** Unable to read "uboot.env" from mmc0:1 **
Using default environment
Net:   <ethaddr> not set. Validating first E-fuse MAC
cpsw, usb_ether
Hit any key to stop autoboot:  1  0 
U-Boot# 
- 06:42:10 [INFO] Host: 
- 06:42:11 [INFO] Target: 
U-Boot# 
- 06:42:11 [INFO] Host: version
- 06:42:11 [INFO] Target: 
version
U-Boot 2014.07-00076-g8f725ef (Oct 09 2014 - 11:18:44)
arm-linux-gnueabihf-gcc (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 4.7.3 20130226 (prerelease)
GNU ld (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 2.23.1
U-Boot# 
- 06:42:11 [INFO] Host: setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait '
- 06:42:12 [INFO] Target: 
setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait '
U-Boot# 
- 06:42:12 [INFO] Host: setenv bootcmd  ''
- 06:42:12 [INFO] Target: 
setenv bootcmd  ''
U-Boot# 
- 06:42:12 [INFO] Host: setenv autoload 'no'
- 06:42:13 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 06:42:13 [INFO] Host: setenv serverip '192.168.0.1'
- 06:42:13 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 06:42:13 [INFO] Host: printenv
- 06:42:14 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A335BONE
board_rev=00A6
boot_fdt=try
bootargs=console=ttyO0,115200n8 earlyprintk rootwait 
bootcmd=
bootcount=1
bootdelay=1
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc raw 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
eth1addr=78:c5:e5:d5:61:69
ethact=cpsw
ethaddr=78:c5:e5:d5:61:68
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
importbootenv=echo Importing environment from mmc ...; env import -t -r $loadaddr $filesize
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usbnet_devaddr=78:c5:e5:d5:61:69
vendor=ti
ver=U-Boot 2014.07-00076-g8f725ef (Oct 09 2014 - 11:18:44)
Environment size: 4470/131068 bytes
U-Boot# 
- 06:42:14 [INFO] Host: printenv
- 06:42:14 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A335BONE
board_rev=00A6
boot_fdt=try
bootargs=console=ttyO0,115200n8 earlyprintk rootwait 
bootcmd=
bootcount=1
bootdelay=1
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc raw 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
eth1addr=78:c5:e5:d5:61:69
ethact=cpsw
ethaddr=78:c5:e5:d5:61:68
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
importbootenv=echo Importing environment from mmc ...; env import -t -r $loadaddr $filesize
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usbnet_devaddr=78:c5:e5:d5:61:69
vendor=ti
ver=U-Boot 2014.07-00076-g8f725ef (Oct 09 2014 - 11:18:44)
Environment size: 4470/131068 bytes
U-Boot# 
- 06:42:14 [INFO] Host: setenv bootargs ''${bootargs}' ip=dhcp '
- 06:42:15 [INFO] Target: 
setenv bootargs ''${bootargs}' ip=dhcp '
U-Boot# 
- 06:42:15 [INFO] Host: setenv serverip '192.168.0.1'
- 06:42:15 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 06:42:15 [INFO] Host: setenv ipaddr dhcp
- 06:42:16 [INFO] Target: 
setenv ipaddr dhcp
U-Boot# 
- 06:42:16 [INFO] Host: setenv autoload 'no'
- 06:42:16 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 06:42:16 [INFO] Host: dhcp
- 06:42:18 [INFO] Target: 
dhcp
link up on port 0, speed 100, full duplex
BOOTP broadcast 1
DHCP client bound to address 192.168.0.115
U-Boot# 
- 06:42:18 [INFO] Host: setenv serverip '192.168.0.1'
- 06:42:18 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 06:42:18 [INFO] Host: tftp ${loadaddr} 192.168.0.1:vatf_beaglebone/bed857f50d6de879c5e216dc84c55757
- 06:42:20 [INFO] Target: 
tftp ${loadaddr} 192.168.0.1:vatf_beaglebone/bed857f50d6de879c5e216dc84c55757
link up on port 0, speed 100, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.115
Filename 'vatf_beaglebone/bed857f50d6de879c5e216dc84c55757'.
Load address: 0x82000000
Loading: *#################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 ######################################################
	 4.2 MiB/s
done
Bytes transferred = 4596176 (4621d0 hex)
U-Boot# 
- 06:42:20 [INFO] Host: tftp ${fdt_addr_r} 192.168.0.1:vatf_beaglebone/1df1930444d0c8d64f7f94fe0549e2b2
- 06:42:20 [INFO] Target: 
tftp ${fdt_addr_r} 192.168.0.1:vatf_beaglebone/1df1930444d0c8d64f7f94fe0549e2b2
link up on port 0, speed 100, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.115
Filename 'vatf_beaglebone/1df1930444d0c8d64f7f94fe0549e2b2'.
Load address: 0x88000000
Loading: *##
	 3.4 MiB/s
done
Bytes transferred = 28910 (70ee hex)
U-Boot# 
- 06:42:20 [INFO] Host: ls mmc 0:1
- 06:42:21 [INFO] Target: 
ls mmc 0:1
    77532   mlo 
   447164   u-boot.img 
  2629467   u-boot 
   447100   u-boot.bin 
   907613   u-boot-spl 
    77012   u-boot-spl.bin 
      259   uboot_build.txt 
       14   .ipaddr 
            windows_users/
            old_uboot/
8 file(s), 2 dir(s)
U-Boot# 
- 06:42:21 [INFO] Host: ls mmc 0:2
- 06:42:21 [INFO] Target: 
ls mmc 0:2
<DIR>       4096 .
<DIR>       4096 ..
<DIR>       4096 bin
<DIR>       4096 boot
<DIR>       4096 dev
<DIR>       4096 etc
<DIR>       4096 home
<DIR>       4096 lib
<DIR>       4096 media
<DIR>       4096 mnt
<DIR>       4096 opt
<DIR>       4096 proc
<SYM>          8 run
<DIR>       4096 sbin
<DIR>       4096 srv
<DIR>       4096 sys
<SYM>          8 tmp
<DIR>       4096 usr
<DIR>       4096 var
<DIR>       4096 www
<DIR>       4096 Settings
<DIR>       4096 test
U-Boot# 
- 06:42:21 [INFO] Host: part uuid mmc 0:2
- 06:42:22 [INFO] Target: 
part uuid mmc 0:2
00000000-02
U-Boot# 
- 06:42:22 [INFO] Host: printenv
- 06:42:22 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A335BONE
board_rev=00A6
boot_fdt=try
bootargs=console=ttyO0,115200n8 earlyprintk rootwait  ip=dhcp 
bootcmd=
bootcount=1
bootdelay=1
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc raw 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
dnsip=192.0.2.2
dnsip2=192.0.2.3
eth1addr=78:c5:e5:d5:61:69
ethact=cpsw
ethaddr=78:c5:e5:d5:61:68
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtfile=undefined
fileaddr=88000000
filesize=70ee
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc ...; env import -t -r $loadaddr $filesize
ipaddr=192.168.0.115
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
netmask=255.255.255.0
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usbnet_devaddr=78:c5:e5:d5:61:69
vendor=ti
ver=U-Boot 2014.07-00076-g8f725ef (Oct 09 2014 - 11:18:44)
Environment size: 4623/131068 bytes
U-Boot# 
- 06:42:22 [INFO] Host: setenv bootargs ''${bootargs}' root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait '
- 06:42:23 [INFO] Target: 
setenv bootargs ''${bootargs}' root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait '
U-Boot# 
- 06:42:23 [INFO] Host: printenv
- 06:42:23 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A335BONE
board_rev=00A6
boot_fdt=try
bootargs=console=ttyO0,115200n8 earlyprintk rootwait  ip=dhcp  root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait 
bootcmd=
bootcount=1
bootdelay=1
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc raw 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
dnsip=192.0.2.2
dnsip2=192.0.2.3
eth1addr=78:c5:e5:d5:61:69
ethact=cpsw
ethaddr=78:c5:e5:d5:61:68
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtfile=undefined
fileaddr=88000000
filesize=70ee
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc ...; env import -t -r $loadaddr $filesize
ipaddr=192.168.0.115
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
netmask=255.255.255.0
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usbnet_devaddr=78:c5:e5:d5:61:69
vendor=ti
ver=U-Boot 2014.07-00076-g8f725ef (Oct 09 2014 - 11:18:44)
Environment size: 4678/131068 bytes
U-Boot# 
- 06:42:23 [INFO] Host: setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} - ${fdt_addr_r}; else bootz ${loadaddr} - ${fdt_addr_r}; bootm ${loadaddr} - ${fdt_addr_r}; fi'
- 06:42:24 [INFO] Target: 
setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} - ${fdt_addr_r}; else bootz ${loadaddr} - ${fdt_addr_r}; bootm ${loadaddr} - ${fdt_addr_r}; fi'
U-Boot# 
- 06:42:24 [INFO] Host: bdinfo
- 06:42:24 [INFO] Target: 
bdinfo
arch_number = 0x00000E05
boot_params = 0x80000100
DRAM bank   = 0x00000000
-> start    = 0x80000000
-> size     = 0x10000000
eth0name    = cpsw
ethaddr     = 78:c5:e5:d5:61:68
eth1name    = usb_ether
eth1addr    = 78:c5:e5:d5:61:69
current eth = cpsw
ip_addr     = 192.168.0.115
baudrate    = 115200 bps
TLB addr    = 0x8FFF0000
relocaddr   = 0x8F741000
reloc off   = 0x0EF41000
irq_sp      = 0x8E720EE0
sp start    = 0x8E720ED0
U-Boot# 
- 06:42:24 [INFO] Host: boot
- 06:44:54 [ERROR] On command: boot waiting for boot.+?(?-mix:login:) >>> error: execution expired
- 06:44:54 [INFO] Target: 
boot
## Checking Image at 82000000 ...
Unknown image format!
Kernel image @ 0x82000000 [ 0x000000 - 0x4621d0 ]
## Flattened Device Tree blob at 88000000
   Booting using the fdt blob at 0x88000000
   Loading Device Tree to 8e715000, end 8e71f0ed ... OK
Starting kernel ...
[    0.000000] Booting Linux on physical CPU 0x0
[    0.000000] Initializing cgroup subsys cpuset
[    0.000000] Initializing cgroup subsys cpu
[    0.000000] Initializing cgroup subsys cpuacct
[    0.000000] Linux version 3.18.0-rc4-next-20141113-00002-g4230cf1 (nmenon@kahuna) (gcc version 4.6.3 (Ubuntu/Linaro 4.6.3-1ubuntu5) ) #1 SMP Thu Nov 13 05:40:23 CST 2014
[    0.000000] CPU: ARMv7 Processor [413fc082] revision 2 (ARMv7), cr=10c5387d
[    0.000000] CPU: PIPT / VIPT nonaliasing data cache, VIPT aliasing instruction cache
[    0.000000] Machine model: TI AM335x BeagleBone
[    0.000000] cma: Reserved 16 MiB at 0x8e800000
[    0.000000] Memory policy: Data cache writeback
[    0.000000]   HighMem zone: 1048574 pages exceeds freesize 0
[    0.000000] CPU: All CPU(s) started in SVC mode.
[    0.000000] AM335X ES1.0 (sgx neon )
[    0.000000] PERCPU: Embedded 11 pages/cpu @cfc5f000 s14912 r8192 d21952 u45056
[    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 64704
[    0.000000] Kernel command line: console=ttyO0,115200n8 earlyprintk rootwait  ip=dhcp  root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait 
[    0.000000] PID hash table entries: 1024 (order: 0, 4096 bytes)
[    0.000000] Dentry cache hash table entries: 32768 (order: 5, 131072 bytes)
[    0.000000] Inode-cache hash table entries: 16384 (order: 4, 65536 bytes)
[    0.000000] Memory: 224168K/261120K available (6020K kernel code, 675K rwdata, 2288K rodata, 424K init, 8227K bss, 20568K reserved, 16384K cma-reserved, 0K highmem)
[    0.000000] Virtual kernel memory layout:
[    0.000000]     vector  : 0xffff0000 - 0xffff1000   (   4 kB)
[    0.000000]     fixmap  : 0xffc00000 - 0xffe00000   (2048 kB)
[    0.000000]     vmalloc : 0xd0800000 - 0xff000000   ( 744 MB)
[    0.000000]     lowmem  : 0xc0000000 - 0xd0000000   ( 256 MB)
[    0.000000]     pkmap   : 0xbfe00000 - 0xc0000000   (   2 MB)
[    0.000000]     modules : 0xbf000000 - 0xbfe00000   (  14 MB)
[    0.000000]       .text : 0xc0008000 - 0xc0825310   (8309 kB)
[    0.000000]       .init : 0xc0826000 - 0xc0890000   ( 424 kB)
[    0.000000]       .data : 0xc0890000 - 0xc0938c18   ( 676 kB)
[    0.000000]        .bss : 0xc0938c18 - 0xc1141b78   (8228 kB)
[    0.000000] Hierarchical RCU implementation.
[    0.000000] 	RCU restricting CPUs from NR_CPUS=2 to nr_cpu_ids=1.
[    0.000000] RCU: Adjusting geometry for rcu_fanout_leaf=16, nr_cpu_ids=1
[    0.000000] NR_IRQS:16 nr_irqs:16 16
[    0.000000] IRQ: Found an INTC at 0xfa200000 (revision 5.0) with 128 interrupts
[    0.000000] OMAP clockevent source: timer2 at 24000000 Hz
[    0.000018] sched_clock: 32 bits at 24MHz, resolution 41ns, wraps every 178956969942ns
[    0.000083] OMAP clocksource: timer1 at 24000000 Hz
[    0.001120] Console: colour dummy device 80x30
[    0.001185] Lock dependency validator: Copyright (c) 2006 Red Hat, Inc., Ingo Molnar
[    0.001197] ... MAX_LOCKDEP_SUBCLASSES:  8
[    0.001207] ... MAX_LOCK_DEPTH:          48
[    0.001217] ... MAX_LOCKDEP_KEYS:        8191
[    0.001227] ... CLASSHASH_SIZE:          4096
[    0.001237] ... MAX_LOCKDEP_ENTRIES:     32768
[    0.001247] ... MAX_LOCKDEP_CHAINS:      65536
[    0.001257] ... CHAINHASH_SIZE:          32768
[    0.001267]  memory used by lock dependency info: 5167 kB
[    0.001278]  per task-struct memory footprint: 1152 bytes
[    0.001312] Calibrating delay loop... 715.16 BogoMIPS (lpj=3575808)
[    0.098665] pid_max: default: 32768 minimum: 301
[    0.099155] Security Framework initialized
[    0.099383] Mount-cache hash table entries: 1024 (order: 0, 4096 bytes)
[    0.099404] Mountpoint-cache hash table entries: 1024 (order: 0, 4096 bytes)
[    0.102819] Initializing cgroup subsys memory
[    0.102927] Initializing cgroup subsys devices
[    0.103033] Initializing cgroup subsys freezer
[    0.103143] Initializing cgroup subsys blkio
[    0.103239] Initializing cgroup subsys perf_event
[    0.103334] CPU: Testing write buffer coherency: ok
[    0.104956] CPU0: thread -1, cpu 0, socket -1, mpidr 0
[    0.105095] Setting up static identity map for 0x805b4758 - 0x805b47c8
[    0.109940] Brought up 1 CPUs
[    0.109965] SMP: Total of 1 processors activated.
[    0.109979] CPU: All CPU(s) started in SVC mode.
[    0.113624] devtmpfs: initialized
[    0.116404] VFP support v0.3: implementor 41 architecture 3 part 30 variant c rev 3
[    0.164033] omap_hwmod: tptc0 using broken dt data from edma
[    0.164537] omap_hwmod: tptc1 using broken dt data from edma
[    0.165016] omap_hwmod: tptc2 using broken dt data from edma
[    0.174523] omap_hwmod: debugss: _wait_target_disable failed
[    0.235700] pinctrl core: initialized pinctrl subsystem
[    0.275557] NET: Registered protocol family 16
[    0.283444] DMA: preallocated 256 KiB pool for atomic coherent allocations
[    0.286229] cpuidle: using governor ladder
[    0.286268] cpuidle: using governor menu
[    0.296354] OMAP GPIO hardware version 0.1
[    0.319075] No ATAGs?
[    0.319116] hw-breakpoint: debug architecture 0x4 unsupported.
[    0.373304] edma-dma-engine edma-dma-engine.0: TI EDMA DMA engine driver
[    0.378665] SCSI subsystem initialized
[    0.379731] usbcore: registered new interface driver usbfs
[    0.379959] usbcore: registered new interface driver hub
[    0.380131] usbcore: registered new device driver usb
[    0.381233] omap_i2c 44e0b000.i2c: could not find pctldev for node /pinmux@44e10800/pinmux_i2c0_pins, deferring probe
[    0.381287] platform 44e0b000.i2c: Driver omap_i2c requests probe deferral
[    0.386500] Switched to clocksource timer1
[    0.573676] NET: Registered protocol family 2
[    0.575950] TCP established hash table entries: 2048 (order: 1, 8192 bytes)
[    0.576162] TCP bind hash table entries: 2048 (order: 4, 73728 bytes)
[    0.577234] TCP: Hash tables configured (established 2048 bind 2048)
[    0.577489] TCP: reno registered
[    0.577529] UDP hash table entries: 256 (order: 2, 20480 bytes)
[    0.577791] UDP-Lite hash table entries: 256 (order: 2, 20480 bytes)
[    0.579257] NET: Registered protocol family 1
[    0.581183] RPC: Registered named UNIX socket transport module.
[    0.581210] RPC: Registered udp transport module.
[    0.581225] RPC: Registered tcp transport module.
[    0.581237] RPC: Registered tcp NFSv4.1 backchannel transport module.
[    0.583095] hw perfevents: enabled with armv7_cortex_a8 PMU driver, 5 counters available
[    0.588665] futex hash table entries: 256 (order: 2, 16384 bytes)
[    0.588932] audit: initializing netlink subsys (disabled)
[    0.589229] audit: type=2000 audit(0.580:1): initialized
[    0.594956] VFS: Disk quotas dquot_6.5.2
[    0.595147] VFS: Dquot-cache hash table entries: 1024 (order 0, 4096 bytes)
[    0.598599] NFS: Registering the id_resolver key type
[    0.599035] Key type id_resolver registered
[    0.599054] Key type id_legacy registered
[    0.599270] jffs2: version 2.2. (NAND) (SUMMARY)   2001-2006 Red Hat, Inc.
[    0.604653] io scheduler noop registered
[    0.604692] io scheduler deadline registered
[    0.604828] io scheduler cfq registered (default)
[    0.607810] pinctrl-single 44e10800.pinmux: 142 pins at pa f9e10800 size 568
[    0.611958] Serial: 8250/16550 driver, 4 ports, IRQ sharing enabled
[    0.619630] omap_uart 44e09000.serial: no wakeirq for uart0
[    0.620390] omap_uart 44e09000.serial: ttyO0 at MMIO 0x44e09000 (irq = 154, base_baud = 3000000) is a OMAP UART0
[    1.313356] console [ttyO0] enabled
[    1.322433] omap_rng 48310000.rng: OMAP Random Number Generator ver. 20
[    1.330323] error detecting cacheinfo..cpu0
[    1.361728] brd: module loaded
[    1.381753] loop: module loaded
[    1.388644] mtdoops: mtd device (mtddev=name/number) must be supplied
[    1.398872] usbcore: registered new interface driver asix
[    1.404708] usbcore: registered new interface driver ax88179_178a
[    1.411314] usbcore: registered new interface driver cdc_ether
[    1.417706] usbcore: registered new interface driver smsc95xx
[    1.423900] usbcore: registered new interface driver net1080
[    1.430014] usbcore: registered new interface driver cdc_subset
[    1.436434] usbcore: registered new interface driver zaurus
[    1.442547] usbcore: registered new interface driver cdc_ncm
[    1.449939] usbcore: registered new interface driver cdc_wdm
[    1.456101] usbcore: registered new interface driver usb-storage
[    1.462696] usbcore: registered new interface driver usbtest
[    1.471136] mousedev: PS/2 mouse device common for all mice
[    1.481474] omap_rtc 44e3e000.rtc: rtc core: registered 44e3e000.rtc as rtc0
[    1.489780] i2c /dev entries driver
[    1.493526] Driver for 1-wire Dallas network protocol.
[    1.502476] omap_wdt: OMAP Watchdog Timer Rev 0x01: initial timeout 60 sec
[    1.510685] Driver 'mmcblk' needs updating - please use bus_type methods
[    1.520216] omap_hsmmc 48060000.mmc: unable to get vmmc regulator -517
[    1.527776] platform 48060000.mmc: Driver omap_hsmmc requests probe deferral
[    1.538811] ledtrig-cpu: registered to indicate activity on CPUs
[    1.545802] usbcore: registered new interface driver usbhid
[    1.551722] usbhid: USB HID core driver
[    1.557398] oprofile: using arm/armv7
[    1.562054] TCP: cubic registered
[    1.565578] Initializing XFRM netlink socket
[    1.570310] NET: Registered protocol family 17
[    1.575064] NET: Registered protocol family 15
[    1.580202] Key type dns_resolver registered
[    1.584954] omap_voltage_late_init: Voltage driver support not added
[    1.591691] sr_dev_init: No voltage domain specified for smartreflex0. Cannot initialize
[    1.600195] sr_dev_init: No voltage domain specified for smartreflex1. Cannot initialize
[    1.609987] ThumbEE CPU extension supported.
[    1.614508] Registering SWP/SWPB emulation handler
[    1.619609] SmartReflex Class3 initialized
[    1.638994] tps65217: probe of 0-0024 failed with error -22
[    1.644976] omap_i2c 44e0b000.i2c: bus 0 rev0.11 at 400 kHz
[    1.652831] omap_hsmmc 48060000.mmc: unable to get vmmc regulator -517
[    1.660140] platform 48060000.mmc: Driver omap_hsmmc requests probe deferral
[    1.726388] davinci_mdio 4a101000.mdio: davinci mdio revision 1.6
[    1.732798] davinci_mdio 4a101000.mdio: detected phy mask fffffffe
[    1.742467] libphy: 4a101000.mdio: probed
[    1.746828] davinci_mdio 4a101000.mdio: phy[0]: device 4a101000.mdio:00, driver SMSC LAN8710/LAN8720
[    1.757894] cpsw 4a100000.ethernet: Detected MACID = 78:c5:e5:d5:61:68
[    1.768995] omap_rtc 44e3e000.rtc: setting system clock to 2000-01-01 00:00:00 UTC (946684800)
[    1.778127] sr_init: No PMIC hook to init smartreflex
[    1.783691] sr_init: platform driver register failed for SR
[    1.818039] net eth0: initializing cpsw version 1.12 (0)
[    1.826213] net eth0: phy found : id is : 0x7c0f1
[    1.831409] libphy: PHY 4a101000.mdio:01 not found
[    1.836472] net eth0: phy 4a101000.mdio:01 not found on slave 1
[    1.849714] omap_hsmmc 48060000.mmc: unable to get vmmc regulator -517
[    1.856999] platform 48060000.mmc: Driver omap_hsmmc requests probe deferral
[    4.897078] cpsw 4a100000.ethernet eth0: Link is Up - 100Mbps/Full - flow control rx/tx
[    4.926386] Sending DHCP requests ., OK
[    4.986879] IP-Config: Got DHCP answer from 192.168.0.1, my address is 192.168.0.115
[    4.995432] IP-Config: Complete:
[    4.998905]      device=eth0, hwaddr=78:c5:e5:d5:61:68, ipaddr=192.168.0.115, mask=255.255.255.0, gw=192.168.0.1
[    5.009588]      host=192.168.0.115, domain=tim.com, nis-domain=(none)
[    5.016446]      bootserver=192.168.0.1, rootserver=192.168.0.1, rootpath=
[    5.023461]      nameserver0=192.0.2.2, nameserver1=192.0.2.3
[    5.029924] vmmcsd_fixed: disabling
[    5.037968] Waiting for root device PARTUUID=00000000-02...
[  136.046551] random: nonblocking pool is initialized
